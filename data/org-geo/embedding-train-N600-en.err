com.statnlp.example.sp.main.SemTextExperimenter_Discriminative_Embedding
maxHeight=	12
maxHeight=	18
maxHeight=	18
maxHeight=	18
maxHeight=	18
maxHeight=	18
maxHeight=	18
Read..600 instances.
ROOT pattern for arity 0 is PATTERN:A
ROOT pattern for arity 1 is PATTERN:B
ROOT pattern for arity 2 is PATTERN:C
214
Capacity successfully set to: [300, 300, 1000, 1000, 1000, 2]
#instances=880
..++.+.+.+.+.+.+..++.+.+....++++eIndex=1
eIndex=2
eIndex=3
eIndex=4
eIndex=5
eIndex=6
eIndex=7
eIndex=8
eIndex=9
eIndex=10
eIndex=11
eIndex=12
eIndex=13
eIndex=14
eIndex=15
eIndex=16
eIndex=17
eIndex=18
eIndex=19
eIndex=20
eIndex=21
eIndex=22
eIndex=23
eIndex=24
2898413 nodes..


...
.

...





.

.


Finalized local param. size:96980
Finalized local param. size:95628
Finalized local param. size:100336
Finalized local param. size:101808
Finalized local param. size:98598
Finalized local param. size:95842
Finalized local param. size:102048
Finalized local param. size:91964
Finalized local param. size:89704
Finalized local param. size:103332
Finalized local param. size:98718
Finalized local param. size:97382
Finalized local param. size:88326
Finalized local param. size:98290
Finalized local param. size:96056
Finalized local param. size:89396
531616 features.
#threads:16
#instances=280
Okay. Decoding started.
Decoding time for thread 0 = 69.903 secs.
Decoding time for thread 12 = 70.056 secs.
Decoding time for thread 10 = 70.122 secs.
Decoding time for thread 14 = 70.188 secs.
Decoding time for thread 11 = 70.359 secs.
Decoding time for thread 13 = 70.465 secs.
Decoding time for thread 4 = 72.413 secs.
Decoding time for thread 15 = 72.654 secs.
Decoding time for thread 7 = 73.088 secs.
Decoding time for thread 2 = 73.489 secs.
Decoding time for thread 8 = 73.561 secs.
Decoding time for thread 5 = 74.061 secs.
Decoding time for thread 3 = 74.505 secs.
Decoding time for thread 6 = 75.019 secs.
Decoding time for thread 9 = 75.948 secs.
Decoding time for thread 1 = 77.768 secs.
Okay. Decoding done.
Overall decoding time = 77.769 secs.
************Testing on test dataset en ***************
1:	true
=INPUT=
name all the rivers in colorado .
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:5[19,128]5	0.0	null
	[
		child-0:*n:River -> ({ river ( *n:River ) })	#children:4[18,129]4	0.0	null
		[
			child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:3[17,130]3	0.0	null
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	0.0	null
				[
					child-0:*n:StateName -> ({ ' colorado ' })	#children:1[15,109]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	1789076.2456601227	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:5[19,128]5	777481.680409301	info:[7, 7, 19, 128, 27, 1]name_0 all_1 the_2 rivers_3 in_4 colorado_5 ._6
	[
		child-0:*n:River -> ({ river ( *n:River ) })	#children:4[18,129]4	1449.8534089942355	info:[7, 4, 18, 129, 27, 1]rivers_3 in_4 colorado_5 ._6
		[
			child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:3[17,130]3	720.7161523052497	info:[7, 3, 17, 130, 27, 1]in_4 colorado_5 ._6
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	3.273583459538019E9	info:[6, 1, 16, 123, 27, 1]colorado_5
				[
					child-0:*n:StateName -> ({ ' colorado ' })	#children:1[15,109]1	1.0	info:[6, 1, 15, 109, 26, 1]colorado_5
				]
			]
		]
	]
]

output:	answer(river(loc_2(stateid('colorado'))))
predic:	answer(river(loc_2(stateid('colorado'))))
17:	true
=INPUT=
how many cities are there in the united states ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	0.0	null
	[
		child-0:*n:Num -> ({ count ( *n:City ) })	#children:5[18,155]5	0.0	null
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	0.0	null
			[
				child-0:*n:City -> ({ loc_2 ( *n:Country ) })	#children:3[16,138]3	0.0	null
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	0.0	null
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	4.675979062827591E9	info:[11, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	2.5974257368354427E10	info:[10, 10, 19, 144, 27, 1]how_0 many_1 cities_2 are_3 there_4 in_5 the_6 united_7 states_8 ?_9
	[
		child-0:*n:Num -> ({ count ( *n:City ) })	#children:5[18,155]5	804.7024606346067	info:[10, 8, 18, 155, 27, 1]cities_2 are_3 there_4 in_5 the_6 united_7 states_8 ?_9
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	103.84574099502456	info:[10, 8, 17, 121, 27, 1]cities_2 are_3 there_4 in_5 the_6 united_7 states_8 ?_9
			[
				child-0:*n:City -> ({ loc_2 ( *n:Country ) })	#children:3[16,138]3	0.9148565516840964	info:[10, 7, 16, 138, 27, 1]are_3 there_4 in_5 the_6 united_7 states_8 ?_9
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	1725.6227480932034	info:[9, 2, 15, 137, 27, 1]united_7 states_8
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	213.70290192227841	info:[9, 2, 14, 34, 26, 1]united_7 states_8
					]
				]
			]
		]
	]
]

output:	answer(count(city(loc_2(countryid('usa')))))
predic:	answer(count(city(loc_2(countryid('usa')))))
33:	true
=INPUT=
how many rivers does colorado have ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	0.0	null
	[
		child-0:*n:Num -> ({ count ( *n:River ) })	#children:5[18,161]5	0.0	null
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:4[17,129]4	0.0	null
			[
				child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:3[16,130]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' colorado ' })	#children:1[14,109]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	7368443.554114583	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	4.0930433328978635E7	info:[7, 7, 19, 144, 27, 1]how_0 many_1 rivers_2 does_3 colorado_4 have_5 ?_6
	[
		child-0:*n:Num -> ({ count ( *n:River ) })	#children:5[18,161]5	0.7102313930141	info:[7, 5, 18, 161, 27, 1]rivers_2 does_3 colorado_4 have_5 ?_6
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:4[17,129]4	0.024125686291795623	info:[7, 5, 17, 129, 27, 1]rivers_2 does_3 colorado_4 have_5 ?_6
			[
				child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:3[16,130]3	0.03149865737794339	info:[7, 4, 16, 130, 27, 1]does_3 colorado_4 have_5 ?_6
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[5, 1, 15, 123, 27, 1]colorado_4
					[
						child-0:*n:StateName -> ({ ' colorado ' })	#children:1[14,109]1	1.0	info:[5, 1, 14, 109, 26, 1]colorado_4
					]
				]
			]
		]
	]
]

output:	answer(count(river(loc_2(stateid('colorado')))))
predic:	answer(count(river(loc_2(stateid('colorado')))))
49:	false
=INPUT=
number of states bordering iowa ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	0.0	null
	[
		child-0:*n:Num -> ({ count ( *n:State ) })	#children:5[18,176]5	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	0.0	null
			[
				child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[16,127]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' iowa ' })	#children:1[14,17]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	2.5841278661191088E17	info:[7, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	1.15451020453141648E17	info:[6, 6, 19, 135, 27, 1]number_0 of_1 states_2 bordering_3 iowa_4 ?_5
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	3.504029518335532E18	info:[5, 5, 18, 126, 27, 1]number_0 of_1 states_2 bordering_3 iowa_4
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[17,127]3	1.2710960104381891E11	info:[5, 2, 17, 127, 27, 1]bordering_3 iowa_4
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	3.273583459538019E9	info:[5, 1, 16, 123, 27, 1]iowa_4
				[
					child-0:*n:StateName -> ({ ' iowa ' })	#children:1[15,17]1	1.0	info:[5, 1, 15, 17, 26, 1]iowa_4
				]
			]
		]
	]
]

output:	answer(count(state(next_to_2(stateid('iowa')))))
predic:	answer(state(next_to_2(stateid('iowa'))))
65:	true
=INPUT=
what are the major cities in the usa ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	0.0	null
	[
		child-0:*n:City -> ({ major ( *n:City ) })	#children:5[18,156]5	0.0	null
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	0.0	null
			[
				child-0:*n:City -> ({ loc_2 ( *n:Country ) })	#children:3[16,138]3	0.0	null
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	0.0	null
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	594077.4392807842	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	504694.9372349104	info:[9, 9, 19, 120, 27, 1]what_0 are_1 the_2 major_3 cities_4 in_5 the_6 usa_7 ?_8
	[
		child-0:*n:City -> ({ major ( *n:City ) })	#children:5[18,156]5	545.6970405926911	info:[9, 6, 18, 156, 27, 1]major_3 cities_4 in_5 the_6 usa_7 ?_8
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	0.323083836921324	info:[9, 5, 17, 121, 27, 1]cities_4 in_5 the_6 usa_7 ?_8
			[
				child-0:*n:City -> ({ loc_2 ( *n:Country ) })	#children:3[16,138]3	0.0027967234236917224	info:[9, 4, 16, 138, 27, 1]in_5 the_6 usa_7 ?_8
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	8.074868111621592	info:[8, 1, 15, 137, 27, 1]usa_7
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	1.0	info:[8, 1, 14, 34, 26, 1]usa_7
					]
				]
			]
		]
	]
]

output:	answer(major(city(loc_2(countryid('usa')))))
predic:	answer(major(city(loc_2(countryid('usa')))))
81:	true
=INPUT=
what is the area of wisconsin ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ area_1 ( *n:State ) })	#children:3[18,191]3	0.0	null
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	0.0	null
			[
				child-0:*n:StateName -> ({ ' wisconsin ' })	#children:1[16,33]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	1.2941380968740894E8	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	7.188713967011061E8	info:[7, 7, 19, 144, 27, 1]what_0 is_1 the_2 area_3 of_4 wisconsin_5 ?_6
	[
		child-0:*n:Num -> ({ area_1 ( *n:State ) })	#children:3[18,191]3	1.175488006255668E10	info:[7, 5, 18, 191, 27, 1]the_2 area_3 of_4 wisconsin_5 ?_6
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	3.273583459538019E9	info:[6, 1, 17, 123, 27, 1]wisconsin_5
			[
				child-0:*n:StateName -> ({ ' wisconsin ' })	#children:1[16,33]1	1.0	info:[6, 1, 16, 33, 26, 1]wisconsin_5
			]
		]
	]
]

output:	answer(area_1(stateid('wisconsin')))
predic:	answer(area_1(stateid('wisconsin')))
97:	true
=INPUT=
what is the capital of the smallest state ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:5[19,120]5	0.0	null
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:4[18,131]4	0.0	null
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[17,122]3	0.0	null
			[
				child-0:*n:State -> ({ smallest ( *n:State ) })	#children:2[16,165]2	0.0	null
				[
					child-0:*n:State -> ({ state ( all ) })	#children:1[15,141]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	2142.8913749858907	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:5[19,120]5	1820.4805577351235	info:[9, 9, 19, 120, 27, 1]what_0 is_1 the_2 capital_3 of_4 the_5 smallest_6 state_7 ?_8
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:4[18,131]4	2.401875948308995	info:[9, 6, 18, 131, 27, 1]capital_3 of_4 the_5 smallest_6 state_7 ?_8
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[17,122]3	1.9545665975426236E-4	info:[9, 5, 17, 122, 27, 1]of_4 the_5 smallest_6 state_7 ?_8
			[
				child-0:*n:State -> ({ smallest ( *n:State ) })	#children:2[16,165]2	0.0032337288832280237	info:[8, 2, 16, 165, 27, 1]smallest_6 state_7
				[
					child-0:*n:State -> ({ state ( all ) })	#children:1[15,141]1	4.774503173171653E-6	info:[8, 1, 15, 141, 26, 1]state_7
				]
			]
		]
	]
]

output:	answer(capital(loc_2(smallest(state(all)))))
predic:	answer(capital(loc_2(smallest(state(all)))))
113:	true
=INPUT=
what is the highest point in nevada in meters ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	0.0	null
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	0.0	null
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	0.0	null
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[16,134]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' nevada ' })	#children:1[14,27]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	2.2858484102149883E10	info:[11, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	3.1643436016043575E10	info:[10, 10, 19, 124, 27, 1]what_0 is_1 the_2 highest_3 point_4 in_5 nevada_6 in_7 meters_8 ?_9
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	4.524508268690389E9	info:[10, 9, 18, 132, 27, 1]is_1 the_2 highest_3 point_4 in_5 nevada_6 in_7 meters_8 ?_9
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	13711.934322592426	info:[10, 6, 17, 133, 27, 1]point_4 in_5 nevada_6 in_7 meters_8 ?_9
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[16,134]3	3.0803568348212895	info:[10, 5, 16, 134, 27, 1]in_5 nevada_6 in_7 meters_8 ?_9
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[7, 1, 15, 123, 27, 1]nevada_6
					[
						child-0:*n:StateName -> ({ ' nevada ' })	#children:1[14,27]1	1.0	info:[7, 1, 14, 27, 26, 1]nevada_6
					]
				]
			]
		]
	]
]

output:	answer(highest(place(loc_2(stateid('nevada')))))
predic:	answer(highest(place(loc_2(stateid('nevada')))))
129:	false
=INPUT=
what is the least populous state ?
=OUTPUT=
ROOT	#children:4[20,1000]4	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	0.0	null
	[
		child-0:*n:State -> ({ smallest_one ( population_1 ( *n:State ) ) })	#children:2[18,200]2	0.0	null
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	0.0	null
		]
	]
]

=PREDICTION=
ROOT	#children:4[20,1000]4	3.3027350321257746E-10	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	1.4755621606213752E-10	info:[7, 7, 19, 135, 27, 1]what_0 is_1 the_2 least_3 populous_4 state_5 ?_6
	[
		child-0:*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })	#children:2[18,194]2	3.740437136647642E-12	info:[7, 4, 18, 194, 27, 1]least_3 populous_4 state_5 ?_6
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	4.8513837125525205E-6	info:[6, 1, 17, 141, 26, 1]state_5
		]
	]
]

output:	answer(smallest_one(population_1(state(all))))
predic:	answer(smallest_one(density_1(state(all))))
145:	true
=INPUT=
what is the lowest point in usa ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	0.0	null
	[
		child-0:*n:Place -> ({ lowest ( *n:Place ) })	#children:5[18,186]5	0.0	null
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	0.0	null
			[
				child-0:*n:Place -> ({ loc_2 ( *n:Country ) })	#children:3[16,183]3	0.0	null
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	0.0	null
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	5.486138940063871E8	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	7.59456689031749E8	info:[8, 8, 19, 124, 27, 1]what_0 is_1 the_2 lowest_3 point_4 in_5 usa_6 ?_7
	[
		child-0:*n:Place -> ({ lowest ( *n:Place ) })	#children:5[18,186]5	4.15538320039471E8	info:[8, 7, 18, 186, 27, 1]is_1 the_2 lowest_3 point_4 in_5 usa_6 ?_7
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	376.15984622922167	info:[8, 4, 17, 133, 27, 1]point_4 in_5 usa_6 ?_7
			[
				child-0:*n:Place -> ({ loc_2 ( *n:Country ) })	#children:3[16,183]3	0.15169477808381104	info:[8, 3, 16, 183, 27, 1]in_5 usa_6 ?_7
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	8.074868111621592	info:[7, 1, 15, 137, 27, 1]usa_6
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	1.0	info:[7, 1, 14, 34, 26, 1]usa_6
					]
				]
			]
		]
	]
]

output:	answer(lowest(place(loc_2(countryid('usa')))))
predic:	answer(lowest(place(loc_2(countryid('usa')))))
161:	false
=INPUT=
what is the population of new york city ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:5[19,144]5	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:4[18,159]4	0.0	null
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:3[17,121]3	0.0	null
			[
				child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[16,147]2	0.0	null
				[
					child-0:*n:CityName -> ({ ' new york ' })	#children:1[15,111]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	4.666671637240138	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	25.92255622418828	info:[9, 9, 19, 144, 27, 1]what_0 is_1 the_2 population_3 of_4 new_5 york_6 city_7 ?_8
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:3[18,158]3	2.2476901715703715E7	info:[8, 8, 18, 158, 27, 1]what_0 is_1 the_2 population_3 of_4 new_5 york_6 city_7
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	4.660310995986402E7	info:[7, 2, 17, 123, 27, 1]new_5 york_6
			[
				child-0:*n:StateName -> ({ ' new york ' })	#children:1[16,112]1	0.014236114806873073	info:[7, 2, 16, 112, 26, 1]new_5 york_6
			]
		]
	]
]

output:	answer(population_1(city(cityid('newyork',_))))
predic:	answer(population_1(stateid('newyork')))
177:	true
=INPUT=
what is the state with the smallest area ?
=OUTPUT=
ROOT	#children:4[20,1000]4	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	0.0	null
	[
		child-0:*n:State -> ({ smallest_one ( area_1 ( *n:State ) ) })	#children:2[18,203]2	0.0	null
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	0.0	null
		]
	]
]

=PREDICTION=
ROOT	#children:4[20,1000]4	1.0560192022385458E-6	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	4.71797452885536E-7	info:[9, 9, 19, 135, 27, 1]what_0 is_1 the_2 state_3 with_4 the_5 smallest_6 area_7 ?_8
	[
		child-0:*n:State -> ({ smallest_one ( area_1 ( *n:State ) ) })	#children:2[18,203]2	1.242919319938214E-4	info:[8, 8, 18, 203, 27, 1]what_0 is_1 the_2 state_3 with_4 the_5 smallest_6 area_7
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	0.044366595542175494	info:[4, 1, 17, 141, 26, 1]state_3
		]
	]
]

output:	answer(smallest_one(area_1(state(all))))
predic:	answer(smallest_one(area_1(state(all))))
193:	true
=INPUT=
what state has the largest area ?
=OUTPUT=
ROOT	#children:4[20,1000]4	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	0.0	null
	[
		child-0:*n:State -> ({ largest_one ( area_1 ( *n:State ) ) })	#children:2[18,187]2	0.0	null
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	0.0	null
		]
	]
]

=PREDICTION=
ROOT	#children:4[20,1000]4	0.0035040162122846625	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	0.0015654885065736572	info:[7, 7, 19, 135, 27, 1]what_0 state_1 has_2 the_3 largest_4 area_5 ?_6
	[
		child-0:*n:State -> ({ largest_one ( area_1 ( *n:State ) ) })	#children:2[18,187]2	3.134795243609406E-5	info:[7, 6, 18, 187, 27, 1]state_1 has_2 the_3 largest_4 area_5 ?_6
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	0.06102155556752424	info:[2, 1, 17, 141, 26, 1]state_1
		]
	]
]

output:	answer(largest_one(area_1(state(all))))
predic:	answer(largest_one(area_1(state(all))))
209:	true
=INPUT=
what states border states that border mississippi ?
=OUTPUT=
ROOT	#children:8[20,1000]8	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:7[19,135]7	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:6[18,126]6	0.0	null
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:5[17,127]5	0.0	null
			[
				child-0:*n:State -> ({ state ( *n:State ) })	#children:4[16,126]4	0.0	null
				[
					child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[15,127]3	0.0	null
					[
						child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[14,123]2	0.0	null
						[
							child-0:*n:StateName -> ({ ' mississippi ' })	#children:1[13,83]1	0.0	null
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:8[20,1000]8	1.4370029419839496E11	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:7[19,135]7	6.420094695057453E10	info:[8, 8, 19, 135, 27, 1]what_0 states_1 border_2 states_3 that_4 border_5 mississippi_6 ?_7
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:6[18,126]6	9.952121448891891E11	info:[7, 7, 18, 126, 27, 1]what_0 states_1 border_2 states_3 that_4 border_5 mississippi_6
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:5[17,127]5	7.222950401416751E10	info:[7, 5, 17, 127, 27, 1]border_2 states_3 that_4 border_5 mississippi_6
			[
				child-0:*n:State -> ({ state ( *n:State ) })	#children:4[16,126]4	1.7206478218521753E8	info:[7, 4, 16, 126, 27, 1]states_3 that_4 border_5 mississippi_6
				[
					child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[15,127]3	5.213543208573687E8	info:[7, 2, 15, 127, 27, 1]border_5 mississippi_6
					[
						child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[14,123]2	3.273583459538019E9	info:[7, 1, 14, 123, 27, 1]mississippi_6
						[
							child-0:*n:StateName -> ({ ' mississippi ' })	#children:1[13,83]1	1.0	info:[7, 1, 13, 83, 26, 1]mississippi_6
						]
					]
				]
			]
		]
	]
]

output:	answer(state(next_to_2(state(next_to_2(stateid('mississippi'))))))
predic:	answer(state(next_to_2(state(next_to_2(stateid('mississippi'))))))
225:	true
=INPUT=
what states have cities named rochester ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:5[18,126]5	0.0	null
		[
			child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:4[17,172]4	0.0	null
			[
				child-0:*n:City -> ({ city ( *n:City ) })	#children:3[16,121]3	0.0	null
				[
					child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[15,147]2	0.0	null
					[
						child-0:*n:CityName -> ({ ' rochester ' })	#children:1[14,5]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	5.02727819456364E11	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	2.2460359074098914E11	info:[7, 7, 19, 135, 27, 1]what_0 states_1 have_2 cities_3 named_4 rochester_5 ?_6
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:5[18,126]5	1787510.867264109	info:[7, 6, 18, 126, 27, 1]states_1 have_2 cities_3 named_4 rochester_5 ?_6
		[
			child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:4[17,172]4	975.9806110033538	info:[7, 5, 17, 172, 27, 1]have_2 cities_3 named_4 rochester_5 ?_6
			[
				child-0:*n:City -> ({ city ( *n:City ) })	#children:3[16,121]3	369897.7585993518	info:[6, 3, 16, 121, 27, 1]cities_3 named_4 rochester_5
				[
					child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[15,147]2	72102.42018085228	info:[6, 1, 15, 147, 27, 1]rochester_5
					[
						child-0:*n:CityName -> ({ ' rochester ' })	#children:1[14,5]1	1.0	info:[6, 1, 14, 5, 26, 1]rochester_5
					]
				]
			]
		]
	]
]

output:	answer(state(loc_1(city(cityid('rochester',_)))))
predic:	answer(state(loc_1(city(cityid('rochester',_)))))
241:	true
=INPUT=
which is the smallest state ?
=OUTPUT=
ROOT	#children:4[20,1000]4	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	0.0	null
	[
		child-0:*n:State -> ({ smallest ( *n:State ) })	#children:2[18,165]2	0.0	null
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	0.0	null
		]
	]
]

=PREDICTION=
ROOT	#children:4[20,1000]4	0.0444334916965599	info:[7, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	0.019851540730328562	info:[6, 6, 19, 135, 27, 1]which_0 is_1 the_2 smallest_3 state_4 ?_5
	[
		child-0:*n:State -> ({ smallest ( *n:State ) })	#children:2[18,165]2	1.5682226779488608E-4	info:[6, 5, 18, 165, 27, 1]is_1 the_2 smallest_3 state_4 ?_5
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	4.774503173171653E-6	info:[5, 1, 17, 141, 26, 1]state_4
		]
	]
]

output:	answer(smallest(state(all)))
predic:	answer(smallest(state(all)))
257:	true
=INPUT=
which state has the highest population density ?
=OUTPUT=
ROOT	#children:4[20,1000]4	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	0.0	null
	[
		child-0:*n:State -> ({ largest_one ( density_1 ( *n:State ) ) })	#children:2[18,166]2	0.0	null
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	0.0	null
		]
	]
]

=PREDICTION=
ROOT	#children:4[20,1000]4	2014.404149145034	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	899.974872269412	info:[8, 8, 19, 135, 27, 1]which_0 state_1 has_2 the_3 highest_4 population_5 density_6 ?_7
	[
		child-0:*n:State -> ({ largest_one ( density_1 ( *n:State ) ) })	#children:2[18,166]2	284337.0408613736	info:[7, 7, 18, 166, 27, 1]which_0 state_1 has_2 the_3 highest_4 population_5 density_6
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	52.754177240179544	info:[2, 2, 17, 141, 26, 1]which_0 state_1
		]
	]
]

output:	answer(largest_one(density_1(state(all))))
predic:	answer(largest_one(density_1(state(all))))
273:	true
=INPUT=
which states border the state with the smallest area ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	0.0	null
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[17,127]3	0.0	null
			[
				child-0:*n:State -> ({ smallest_one ( area_1 ( *n:State ) ) })	#children:2[16,203]2	0.0	null
				[
					child-0:*n:State -> ({ state ( all ) })	#children:1[15,141]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	5.811790613480872E-4	info:[11, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	2.596532337983896E-4	info:[10, 10, 19, 135, 27, 1]which_0 states_1 border_2 the_3 state_4 with_5 the_6 smallest_7 area_8 ?_9
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	0.004283474969786245	info:[9, 9, 18, 126, 27, 1]which_0 states_1 border_2 the_3 state_4 with_5 the_6 smallest_7 area_8
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[17,127]3	3.9047646909025045E-7	info:[9, 7, 17, 127, 27, 1]border_2 the_3 state_4 with_5 the_6 smallest_7 area_8
			[
				child-0:*n:State -> ({ smallest_one ( area_1 ( *n:State ) ) })	#children:2[16,203]2	1.2895538369210538E-6	info:[9, 6, 16, 203, 27, 1]the_3 state_4 with_5 the_6 smallest_7 area_8
				[
					child-0:*n:State -> ({ state ( all ) })	#children:1[15,141]1	0.044366595542175494	info:[5, 1, 15, 141, 26, 1]state_4
				]
			]
		]
	]
]

output:	answer(state(next_to_2(smallest_one(area_1(state(all))))))
predic:	answer(state(next_to_2(smallest_one(area_1(state(all))))))
2:	false
=INPUT=
count the states which have elevations lower than what alabama has .
=OUTPUT=
ROOT	#children:9[20,1000]9	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:8[19,144]8	0.0	null
	[
		child-0:*n:Num -> ({ count ( *n:State ) })	#children:7[18,176]7	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:6[17,126]6	0.0	null
			[
				child-0:*n:State -> ({ low_point_2 ( *n:Place ) })	#children:5[16,0]5	0.0	null
				[
					child-0:*n:Place -> ({ lower_2 ( *n:Place ) })	#children:4[15,0]4	0.0	null
					[
						child-0:*n:Place -> ({ low_point_1 ( *n:State ) })	#children:3[14,0]3	0.0	null
						[
							child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[13,123]2	0.0	null
							[
								child-0:*n:StateName -> ({ ' alabama ' })	#children:1[12,96]1	0.0	null
							]
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]5	1.5030282125196012E10	info:[13, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]4	6.715075642361877E9	info:[12, 12, 19, 135, 27, 1]count_0 the_1 states_2 which_3 have_4 elevations_5 lower_6 than_7 what_8 alabama_9 has_10 ._11
	[
		child-0:*n:State -> ({ exclude ( *n:State , *n:State ) })	#children:4[18,185]3	2.56619724282121E13	info:[10, 10, 18, 185, 28, 1]count_0 the_1 states_2 which_3 have_4 elevations_5 lower_6 than_7 what_8 alabama_9
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	2.207239198481145	info:[4, 1, 17, 141, 26, 1]which_3
		]
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	3.273583459538019E9	info:[10, 1, 17, 123, 27, 1]alabama_9
			[
				child-0:*n:StateName -> ({ ' alabama ' })	#children:1[16,96]1	1.0	info:[10, 1, 16, 96, 26, 1]alabama_9
			]
		]
	]
]

output:	answer(count(state(low_point_2(lower_2(low_point_1(stateid('alabama')))))))
predic:	answer(exclude(state(all),stateid('alabama')))
18:	false
=INPUT=
how many citizens does the biggest city have in the usa ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:3[18,159]3	0.0	null
		[
			child-0:*n:City -> ({ largest ( *n:City ) })	#children:2[17,150]2	0.0	null
			[
				child-0:*n:City -> ({ city ( all ) })	#children:1[16,160]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:8[20,1000]8	1.645928161552672E19	info:[13, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:7[19,144]7	9.142847113635163E19	info:[12, 12, 19, 144, 27, 1]how_0 many_1 citizens_2 does_3 the_4 biggest_5 city_6 have_7 in_8 the_9 usa_10 ?_11
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:6[18,159]6	1.8498311021269282E12	info:[12, 10, 18, 159, 27, 1]citizens_2 does_3 the_4 biggest_5 city_6 have_7 in_8 the_9 usa_10 ?_11
		[
			child-0:*n:City -> ({ largest ( *n:City ) })	#children:5[17,150]5	4.060013271239028E7	info:[12, 7, 17, 150, 27, 1]biggest_5 city_6 have_7 in_8 the_9 usa_10 ?_11
			[
				child-0:*n:City -> ({ city ( *n:City ) })	#children:4[16,121]4	5036.288899406827	info:[12, 6, 16, 121, 27, 1]city_6 have_7 in_8 the_9 usa_10 ?_11
				[
					child-0:*n:City -> ({ loc_2 ( *n:Country ) })	#children:3[15,138]3	0.008335284741695984	info:[12, 4, 15, 138, 27, 1]in_8 the_9 usa_10 ?_11
					[
						child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[14,137]2	8.074868111621592	info:[11, 1, 14, 137, 27, 1]usa_10
						[
							child-0:*n:CountryName -> ({ ' usa ' })	#children:1[13,34]1	1.0	info:[11, 1, 13, 34, 26, 1]usa_10
						]
					]
				]
			]
		]
	]
]

output:	answer(population_1(largest(city(all))))
predic:	answer(population_1(largest(city(loc_2(countryid('usa'))))))
34:	true
=INPUT=
how many states are in the usa ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	0.0	null
	[
		child-0:*n:Num -> ({ count ( *n:State ) })	#children:5[18,176]5	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	0.0	null
			[
				child-0:*n:State -> ({ loc_2 ( *n:Country ) })	#children:3[16,136]3	0.0	null
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	0.0	null
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	3.645484769869584E13	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	2.0250039269369625E14	info:[8, 8, 19, 144, 27, 1]how_0 many_1 states_2 are_3 in_4 the_5 usa_6 ?_7
	[
		child-0:*n:Num -> ({ count ( *n:State ) })	#children:5[18,176]5	12701.736736865276	info:[8, 6, 18, 176, 27, 1]states_2 are_3 in_4 the_5 usa_6 ?_7
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	15.805580137887015	info:[8, 6, 17, 126, 27, 1]states_2 are_3 in_4 the_5 usa_6 ?_7
			[
				child-0:*n:State -> ({ loc_2 ( *n:Country ) })	#children:3[16,136]3	0.005760190574363417	info:[8, 5, 16, 136, 27, 1]are_3 in_4 the_5 usa_6 ?_7
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	8.074868111621592	info:[7, 1, 15, 137, 27, 1]usa_6
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	1.0	info:[7, 1, 14, 34, 26, 1]usa_6
					]
				]
			]
		]
	]
]

output:	answer(count(state(loc_2(countryid('usa')))))
predic:	answer(count(state(loc_2(countryid('usa')))))
50:	true
=INPUT=
rivers in new york ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:5[19,128]5	0.0	null
	[
		child-0:*n:River -> ({ river ( *n:River ) })	#children:4[18,129]4	0.0	null
		[
			child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:3[17,130]3	0.0	null
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	0.0	null
				[
					child-0:*n:StateName -> ({ ' new york ' })	#children:1[15,112]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	11.287565837931016	info:[6, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:5[19,128]5	4.905255254879959	info:[5, 5, 19, 128, 27, 1]rivers_0 in_1 new_2 york_3 ?_4
	[
		child-0:*n:River -> ({ river ( *n:River ) })	#children:4[18,129]4	0.47522846350235093	info:[5, 5, 18, 129, 27, 1]rivers_0 in_1 new_2 york_3 ?_4
		[
			child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:3[17,130]3	0.7882950604193588	info:[5, 4, 17, 130, 27, 1]in_1 new_2 york_3 ?_4
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	4.1405535583285764E7	info:[4, 2, 16, 123, 27, 1]new_2 york_3
				[
					child-0:*n:StateName -> ({ ' new york ' })	#children:1[15,112]1	0.012648382451544106	info:[4, 2, 15, 112, 26, 1]new_2 york_3
				]
			]
		]
	]
]

output:	answer(river(loc_2(stateid('newyork'))))
predic:	answer(river(loc_2(stateid('newyork'))))
66:	true
=INPUT=
what are the major cities in vermont ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	0.0	null
	[
		child-0:*n:City -> ({ major ( *n:City ) })	#children:5[18,156]5	0.0	null
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	0.0	null
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[16,122]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' vermont ' })	#children:1[14,66]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	6.808682939091348E11	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	5.784275889616774E11	info:[8, 8, 19, 120, 27, 1]what_0 are_1 the_2 major_3 cities_4 in_5 vermont_6 ?_7
	[
		child-0:*n:City -> ({ major ( *n:City ) })	#children:5[18,156]5	6.254198332618414E8	info:[8, 5, 18, 156, 27, 1]major_3 cities_4 in_5 vermont_6 ?_7
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	370284.2866757473	info:[8, 4, 17, 121, 27, 1]cities_4 in_5 vermont_6 ?_7
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[16,122]3	8095.05487850597	info:[8, 3, 16, 122, 27, 1]in_5 vermont_6 ?_7
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[7, 1, 15, 123, 27, 1]vermont_6
					[
						child-0:*n:StateName -> ({ ' vermont ' })	#children:1[14,66]1	1.0	info:[7, 1, 14, 66, 26, 1]vermont_6
					]
				]
			]
		]
	]
]

output:	answer(major(city(loc_2(stateid('vermont')))))
predic:	answer(major(city(loc_2(stateid('vermont')))))
82:	false
=INPUT=
what is the biggest american city in a state with a river ?
=OUTPUT=
ROOT	#children:8[20,1000]8	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:7[19,120]7	0.0	null
	[
		child-0:*n:City -> ({ largest ( *n:City ) })	#children:6[18,150]6	0.0	null
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:5[17,121]5	0.0	null
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:4[16,122]4	0.0	null
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:3[15,126]3	0.0	null
					[
						child-0:*n:State -> ({ loc_1 ( *n:River ) })	#children:2[14,182]2	0.0	null
						[
							child-0:*n:River -> ({ river ( all ) })	#children:1[13,171]1	0.0	null
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	6.154644727795541E-7	info:[14, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	5.228641636953029E-7	info:[13, 13, 19, 120, 27, 1]what_0 is_1 the_2 biggest_3 american_4 city_5 in_6 a_7 state_8 with_9 a_10 river_11 ?_12
	[
		child-0:*n:City -> ({ largest ( *n:City ) })	#children:5[18,150]5	5.94496385746276E-11	info:[13, 10, 18, 150, 27, 1]biggest_3 american_4 city_5 in_6 a_7 state_8 with_9 a_10 river_11 ?_12
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	7.170044442847521E-14	info:[13, 8, 17, 121, 27, 1]city_5 in_6 a_7 state_8 with_9 a_10 river_11 ?_12
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[16,122]3	4.730820434314957E-16	info:[13, 7, 16, 122, 27, 1]in_6 a_7 state_8 with_9 a_10 river_11 ?_12
				[
					child-0:*n:State -> ({ largest_one ( area_1 ( *n:State ) ) })	#children:2[15,187]2	7.29111203286306E-11	info:[12, 4, 15, 187, 27, 1]state_8 with_9 a_10 river_11
					[
						child-0:*n:State -> ({ state ( all ) })	#children:1[14,141]1	0.0044987885874023335	info:[9, 1, 14, 141, 26, 1]state_8
					]
				]
			]
		]
	]
]

output:	answer(largest(city(loc_2(state(loc_1(river(all)))))))
predic:	answer(largest(city(loc_2(largest_one(area_1(state(all)))))))
98:	true
=INPUT=
what is the capital of the state with the largest population ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:5[19,120]5	0.0	null
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:4[18,131]4	0.0	null
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[17,122]3	0.0	null
			[
				child-0:*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })	#children:2[16,169]2	0.0	null
				[
					child-0:*n:State -> ({ state ( all ) })	#children:1[15,141]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	120.53111234844103	info:[13, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:5[19,120]5	102.39648597865559	info:[12, 12, 19, 120, 27, 1]what_0 is_1 the_2 capital_3 of_4 the_5 state_6 with_7 the_8 largest_9 population_10 ?_11
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:4[18,131]4	0.1350982057009567	info:[12, 9, 18, 131, 27, 1]capital_3 of_4 the_5 state_6 with_7 the_8 largest_9 population_10 ?_11
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[17,122]3	1.0993841727627058E-5	info:[12, 8, 17, 122, 27, 1]of_4 the_5 state_6 with_7 the_8 largest_9 population_10 ?_11
			[
				child-0:*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })	#children:2[16,169]2	0.004650647422234298	info:[11, 5, 16, 169, 27, 1]state_6 with_7 the_8 largest_9 population_10
				[
					child-0:*n:State -> ({ state ( all ) })	#children:1[15,141]1	0.044366595542175494	info:[7, 1, 15, 141, 26, 1]state_6
				]
			]
		]
	]
]

output:	answer(capital(loc_2(largest_one(population_1(state(all))))))
predic:	answer(capital(loc_2(largest_one(population_1(state(all))))))
114:	true
=INPUT=
what is the highest point in states bordering georgia ?
=OUTPUT=
ROOT	#children:9[20,1000]9	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:8[19,124]8	0.0	null
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:7[18,132]7	0.0	null
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:6[17,133]6	0.0	null
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:5[16,134]5	0.0	null
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:4[15,126]4	0.0	null
					[
						child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[14,127]3	0.0	null
						[
							child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[13,123]2	0.0	null
							[
								child-0:*n:StateName -> ({ ' georgia ' })	#children:1[12,81]1	0.0	null
							]
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:9[20,1000]9	1.813503964744311E23	info:[11, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:8[19,124]8	2.5104681665146263E23	info:[10, 10, 19, 124, 27, 1]what_0 is_1 the_2 highest_3 point_4 in_5 states_6 bordering_7 georgia_8 ?_9
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:7[18,132]7	3.589570352575009E22	info:[10, 9, 18, 132, 27, 1]is_1 the_2 highest_3 point_4 in_5 states_6 bordering_7 georgia_8 ?_9
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:6[17,133]6	1.08785198297537488E17	info:[10, 6, 17, 133, 27, 1]point_4 in_5 states_6 bordering_7 georgia_8 ?_9
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:5[16,134]5	2.4438363050724938E13	info:[10, 5, 16, 134, 27, 1]in_5 states_6 bordering_7 georgia_8 ?_9
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:4[15,126]4	5.9997741037712336E13	info:[9, 3, 15, 126, 27, 1]states_6 bordering_7 georgia_8
					[
						child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[14,127]3	5.379602493008977E11	info:[9, 2, 14, 127, 27, 1]bordering_7 georgia_8
						[
							child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[13,123]2	3.273583459538019E9	info:[9, 1, 13, 123, 27, 1]georgia_8
							[
								child-0:*n:StateName -> ({ ' georgia ' })	#children:1[12,81]1	1.0	info:[9, 1, 12, 81, 26, 1]georgia_8
							]
						]
					]
				]
			]
		]
	]
]

output:	answer(highest(place(loc_2(state(next_to_2(stateid('georgia')))))))
predic:	answer(highest(place(loc_2(state(next_to_2(stateid('georgia')))))))
130:	true
=INPUT=
what is the length of the colorado river ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:5[19,144]5	0.0	null
	[
		child-0:*n:Num -> ({ len ( *n:River ) })	#children:4[18,151]4	0.0	null
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:3[17,129]3	0.0	null
			[
				child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[16,152]2	0.0	null
				[
					child-0:*n:RiverName -> ({ ' colorado ' })	#children:1[15,110]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	1.659941442220215E8	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:5[19,144]5	9.220688471293744E8	info:[9, 9, 19, 144, 27, 1]what_0 is_1 the_2 length_3 of_4 the_5 colorado_6 river_7 ?_8
	[
		child-0:*n:Num -> ({ len ( *n:River ) })	#children:4[18,151]4	4.145472473644389E11	info:[9, 8, 18, 151, 27, 1]is_1 the_2 length_3 of_4 the_5 colorado_6 river_7 ?_8
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:3[17,129]3	457914.68862132326	info:[8, 3, 17, 129, 27, 1]the_5 colorado_6 river_7
			[
				child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[16,152]2	1.770493947383282E8	info:[7, 2, 16, 152, 27, 1]the_5 colorado_6
				[
					child-0:*n:RiverName -> ({ ' colorado ' })	#children:1[15,110]1	1.0	info:[7, 1, 15, 110, 26, 1]colorado_6
				]
			]
		]
	]
]

output:	answer(len(river(riverid('colorado'))))
predic:	answer(len(river(riverid('colorado'))))
146:	true
=INPUT=
what is the lowest point of all states through which the colorado river runs through ?
=OUTPUT=
ROOT	#children:10[20,1000]10	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:9[19,124]9	0.0	null
	[
		child-0:*n:Place -> ({ lowest ( *n:Place ) })	#children:8[18,186]8	0.0	null
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:7[17,133]7	0.0	null
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:6[16,134]6	0.0	null
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:5[15,126]5	0.0	null
					[
						child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:4[14,181]4	0.0	null
						[
							child-0:*n:River -> ({ river ( *n:River ) })	#children:3[13,129]3	0.0	null
							[
								child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[12,152]2	0.0	null
								[
									child-0:*n:RiverName -> ({ ' colorado ' })	#children:1[11,110]1	0.0	null
								]
							]
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:10[20,1000]10	2.359641652112521E34	info:[17, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:9[19,124]9	3.26649699541499E34	info:[16, 16, 19, 124, 27, 1]what_0 is_1 the_2 lowest_3 point_4 of_5 all_6 states_7 through_8 which_9 the_10 colorado_11 river_12 runs_13 through_14 ?_15
	[
		child-0:*n:Place -> ({ lowest ( *n:Place ) })	#children:8[18,186]8	1.787270681122371E34	info:[16, 15, 18, 186, 27, 1]is_1 the_2 lowest_3 point_4 of_5 all_6 states_7 through_8 which_9 the_10 colorado_11 river_12 runs_13 through_14 ?_15
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:7[17,133]7	1.61790003992202E28	info:[16, 12, 17, 133, 27, 1]point_4 of_5 all_6 states_7 through_8 which_9 the_10 colorado_11 river_12 runs_13 through_14 ?_15
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:6[16,134]6	9.499066050723428E23	info:[16, 11, 16, 134, 27, 1]of_5 all_6 states_7 through_8 which_9 the_10 colorado_11 river_12 runs_13 through_14 ?_15
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:5[15,126]5	7.27121960346391E22	info:[15, 8, 15, 126, 27, 1]states_7 through_8 which_9 the_10 colorado_11 river_12 runs_13 through_14
					[
						child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:4[14,181]4	5.753220443184545E19	info:[15, 7, 14, 181, 27, 1]through_8 which_9 the_10 colorado_11 river_12 runs_13 through_14
						[
							child-0:*n:River -> ({ river ( *n:River ) })	#children:3[13,129]3	5.088372088050672E8	info:[13, 3, 13, 129, 27, 1]the_10 colorado_11 river_12
							[
								child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[12,152]2	2.3076707527711954E9	info:[12, 2, 12, 152, 27, 1]the_10 colorado_11
								[
									child-0:*n:RiverName -> ({ ' colorado ' })	#children:1[11,110]1	1.0	info:[12, 1, 11, 110, 26, 1]colorado_11
								]
							]
						]
					]
				]
			]
		]
	]
]

output:	answer(lowest(place(loc_2(state(traverse_1(river(riverid('colorado'))))))))
predic:	answer(lowest(place(loc_2(state(traverse_1(river(riverid('colorado'))))))))
162:	true
=INPUT=
what is the population of san antonio ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:3[18,159]3	0.0	null
		[
			child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[17,147]2	0.0	null
			[
				child-0:*n:CityName -> ({ ' san antonio ' })	#children:1[16,70]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	1678.4938909437203	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	9323.744124769277	info:[8, 8, 19, 144, 27, 1]what_0 is_1 the_2 population_3 of_4 san_5 antonio_6 ?_7
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:3[18,159]3	207000.28484616597	info:[8, 6, 18, 159, 27, 1]the_2 population_3 of_4 san_5 antonio_6 ?_7
		[
			child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[17,147]2	33194.71305318349	info:[7, 2, 17, 147, 27, 1]san_5 antonio_6
			[
				child-0:*n:CityName -> ({ ' san antonio ' })	#children:1[16,70]1	0.46038278562525664	info:[7, 2, 16, 70, 26, 1]san_5 antonio_6
			]
		]
	]
]

output:	answer(population_1(cityid('sanantonio',_)))
predic:	answer(population_1(cityid('sanantonio',_)))
178:	false
=INPUT=
what is the total length of all rivers in the usa ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ sum ( *n:Num ) })	#children:3[18,192]3	0.0	null
		[
			child-0:*n:Num -> ({ len ( *n:River ) })	#children:2[17,151]2	0.0	null
			[
				child-0:*n:River -> ({ river ( all ) })	#children:1[16,171]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	455.64187617534543	info:[13, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	2531.012051286144	info:[12, 12, 19, 144, 27, 1]what_0 is_1 the_2 total_3 length_4 of_5 all_6 rivers_7 in_8 the_9 usa_10 ?_11
	[
		child-0:*n:Num -> ({ len ( *n:River ) })	#children:5[18,151]5	1137902.101533289	info:[12, 11, 18, 151, 27, 1]is_1 the_2 total_3 length_4 of_5 all_6 rivers_7 in_8 the_9 usa_10 ?_11
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:4[17,129]4	7.061402775935381	info:[11, 4, 17, 129, 27, 1]rivers_7 in_8 the_9 usa_10
			[
				child-0:*n:River -> ({ loc_2 ( *n:Country ) })	#children:3[16,154]3	5.375519846551384	info:[11, 3, 16, 154, 27, 1]in_8 the_9 usa_10
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	8.074868111621592	info:[11, 1, 15, 137, 27, 1]usa_10
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	1.0	info:[11, 1, 14, 34, 26, 1]usa_10
					]
				]
			]
		]
	]
]

output:	answer(sum(len(river(all))))
predic:	answer(len(river(loc_2(countryid('usa')))))
194:	true
=INPUT=
what state has the largest capital ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	0.0	null
		[
			child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:3[17,172]3	0.0	null
			[
				child-0:*n:City -> ({ largest ( *n:City ) })	#children:2[16,150]2	0.0	null
				[
					child-0:*n:City -> ({ capital ( all ) })	#children:1[15,189]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	9.295553209146183	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	4.152972140980504	info:[7, 7, 19, 135, 27, 1]what_0 state_1 has_2 the_3 largest_4 capital_5 ?_6
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	0.005627949961943605	info:[7, 6, 18, 126, 27, 1]state_1 has_2 the_3 largest_4 capital_5 ?_6
		[
			child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:3[17,172]3	1.3815187079749914E-4	info:[7, 5, 17, 172, 27, 1]has_2 the_3 largest_4 capital_5 ?_6
			[
				child-0:*n:City -> ({ largest ( *n:City ) })	#children:2[16,150]2	0.18347519630927653	info:[6, 2, 16, 150, 27, 1]largest_4 capital_5
				[
					child-0:*n:City -> ({ capital ( all ) })	#children:1[15,189]1	2.8638660447943793E-4	info:[6, 1, 15, 189, 26, 1]capital_5
				]
			]
		]
	]
]

output:	answer(state(loc_1(largest(capital(all)))))
predic:	answer(state(loc_1(largest(capital(all)))))
210:	true
=INPUT=
what states border states that the ohio runs through ?
=OUTPUT=
ROOT	#children:8[20,1000]8	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:7[19,135]7	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:6[18,126]6	0.0	null
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:5[17,127]5	0.0	null
			[
				child-0:*n:State -> ({ state ( *n:State ) })	#children:4[16,126]4	0.0	null
				[
					child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:3[15,181]3	0.0	null
					[
						child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[14,152]2	0.0	null
						[
							child-0:*n:RiverName -> ({ ' ohio ' })	#children:1[13,42]1	0.0	null
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:8[20,1000]8	4.8214653278118255E20	info:[11, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:7[19,135]7	2.154084940894559E20	info:[10, 10, 19, 135, 27, 1]what_0 states_1 border_2 states_3 that_4 the_5 ohio_6 runs_7 through_8 ?_9
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:6[18,126]6	1.2654258079161707E21	info:[9, 9, 18, 126, 27, 1]what_0 states_1 border_2 states_3 that_4 the_5 ohio_6 runs_7 through_8
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:5[17,127]5	9.184079891095901E19	info:[9, 7, 17, 127, 27, 1]border_2 states_3 that_4 the_5 ohio_6 runs_7 through_8
			[
				child-0:*n:State -> ({ state ( *n:State ) })	#children:4[16,126]4	2.18782715955390624E17	info:[9, 6, 16, 126, 27, 1]states_3 that_4 the_5 ohio_6 runs_7 through_8
				[
					child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:3[15,181]3	8.6569548608893286E17	info:[9, 5, 15, 181, 27, 1]that_4 the_5 ohio_6 runs_7 through_8
					[
						child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[14,152]2	1.3387703048841092E11	info:[7, 2, 14, 152, 27, 1]the_5 ohio_6
						[
							child-0:*n:RiverName -> ({ ' ohio ' })	#children:1[13,42]1	1.0	info:[7, 1, 13, 42, 26, 1]ohio_6
						]
					]
				]
			]
		]
	]
]

output:	answer(state(next_to_2(state(traverse_1(riverid('ohio'))))))
predic:	answer(state(next_to_2(state(traverse_1(riverid('ohio'))))))
226:	true
=INPUT=
what states have cities named salt lake city ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:5[18,126]5	0.0	null
		[
			child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:4[17,172]4	0.0	null
			[
				child-0:*n:City -> ({ city ( *n:City ) })	#children:3[16,121]3	0.0	null
				[
					child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[15,147]2	0.0	null
					[
						child-0:*n:CityName -> ({ ' salt lake city ' })	#children:1[14,72]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	1.937311872996965E13	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	8.655323740206062E12	info:[9, 9, 19, 135, 27, 1]what_0 states_1 have_2 cities_3 named_4 salt_5 lake_6 city_7 ?_8
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:5[18,126]5	6.888351692982939E7	info:[9, 8, 18, 126, 27, 1]states_1 have_2 cities_3 named_4 salt_5 lake_6 city_7 ?_8
		[
			child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:4[17,172]4	37610.387814946575	info:[9, 7, 17, 172, 27, 1]have_2 cities_3 named_4 salt_5 lake_6 city_7 ?_8
			[
				child-0:*n:City -> ({ city ( *n:City ) })	#children:3[16,121]3	2444795.9694890482	info:[8, 5, 16, 121, 27, 1]cities_3 named_4 salt_5 lake_6 city_7
				[
					child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[15,147]2	84299.29352583866	info:[8, 3, 15, 147, 27, 1]salt_5 lake_6 city_7
					[
						child-0:*n:CityName -> ({ ' salt lake city ' })	#children:1[14,72]1	1.1691603876040952	info:[8, 3, 14, 72, 26, 1]salt_5 lake_6 city_7
					]
				]
			]
		]
	]
]

output:	answer(state(loc_1(city(cityid('saltlakecity',_)))))
predic:	answer(state(loc_1(city(cityid('saltlakecity',_)))))
242:	true
=INPUT=
which of the states bordering pennsylvania has the largest population ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	0.0	null
	[
		child-0:*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })	#children:5[18,169]5	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	0.0	null
			[
				child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[16,127]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' pennsylvania ' })	#children:1[14,58]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	7.382497207312213E21	info:[12, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	3.298276556866702E21	info:[11, 11, 19, 135, 27, 1]which_0 of_1 the_2 states_3 bordering_4 pennsylvania_5 has_6 the_7 largest_8 population_9 ?_10
	[
		child-0:*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })	#children:5[18,169]5	1.2351490231105787E13	info:[11, 8, 18, 169, 27, 1]states_3 bordering_4 pennsylvania_5 has_6 the_7 largest_8 population_9 ?_10
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	5.388592787631394E15	info:[6, 3, 17, 126, 27, 1]states_3 bordering_4 pennsylvania_5
			[
				child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[16,127]3	2.5478047726657656E12	info:[6, 2, 16, 127, 27, 1]bordering_4 pennsylvania_5
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[6, 1, 15, 123, 27, 1]pennsylvania_5
					[
						child-0:*n:StateName -> ({ ' pennsylvania ' })	#children:1[14,58]1	1.0	info:[6, 1, 14, 58, 26, 1]pennsylvania_5
					]
				]
			]
		]
	]
]

output:	answer(largest_one(population_1(state(next_to_2(stateid('pennsylvania'))))))
predic:	answer(largest_one(population_1(state(next_to_2(stateid('pennsylvania'))))))
258:	true
=INPUT=
which state has the lowest elevation ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	0.0	null
		[
			child-0:*n:State -> ({ loc_1 ( *n:Place ) })	#children:3[17,167]3	0.0	null
			[
				child-0:*n:Place -> ({ lowest ( *n:Place ) })	#children:2[16,186]2	0.0	null
				[
					child-0:*n:Place -> ({ place ( all ) })	#children:1[15,168]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	65417.38483475858	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	29226.509777518353	info:[7, 7, 19, 135, 27, 1]which_0 state_1 has_2 the_3 lowest_4 elevation_5 ?_6
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	1.953945599621773	info:[7, 6, 18, 126, 27, 1]state_1 has_2 the_3 lowest_4 elevation_5 ?_6
		[
			child-0:*n:State -> ({ loc_1 ( *n:Place ) })	#children:3[17,167]3	6.59513679406256E-4	info:[7, 4, 17, 167, 27, 1]the_3 lowest_4 elevation_5 ?_6
			[
				child-0:*n:Place -> ({ lowest ( *n:Place ) })	#children:2[16,186]2	766.9289419802114	info:[6, 3, 16, 186, 27, 1]the_3 lowest_4 elevation_5
				[
					child-0:*n:Place -> ({ place ( all ) })	#children:1[15,168]1	5.578195362351266E-4	info:[6, 1, 15, 168, 26, 1]elevation_5
				]
			]
		]
	]
]

output:	answer(state(loc_1(lowest(place(all)))))
predic:	answer(state(loc_1(lowest(place(all)))))
274:	false
=INPUT=
which state 's capital city is the largest ?
=OUTPUT=
ROOT	#children:8[20,1000]8	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:7[19,135]7	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:6[18,126]6	0.0	null
		[
			child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:5[17,172]5	0.0	null
			[
				child-0:*n:City -> ({ largest ( *n:City ) })	#children:4[16,150]4	0.0	null
				[
					child-0:*n:City -> ({ city ( *n:City ) })	#children:3[15,121]3	0.0	null
					[
						child-0:*n:City -> ({ capital_1 ( *n:State ) })	#children:2[14,201]2	0.0	null
						[
							child-0:*n:State -> ({ state ( all ) })	#children:1[13,141]1	0.0	null
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	5.890363261423886E-4	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:5[19,120]5	5.004122897032073E-4	info:[9, 9, 19, 120, 27, 1]which_0 state_1 's_2 capital_3 city_4 is_5 the_6 largest_7 ?_8
	[
		child-0:*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })	#children:4[18,188]4	8.221497572045332E-6	info:[9, 8, 18, 188, 27, 1]state_1 's_2 capital_3 city_4 is_5 the_6 largest_7 ?_8
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:3[17,121]3	0.0028067978271271083	info:[5, 4, 17, 121, 27, 1]state_1 's_2 capital_3 city_4
			[
				child-0:*n:City -> ({ capital_1 ( *n:State ) })	#children:2[16,201]2	1.505839546546184E-4	info:[4, 3, 16, 201, 27, 1]state_1 's_2 capital_3
				[
					child-0:*n:State -> ({ state ( all ) })	#children:1[15,141]1	0.010879978700983643	info:[2, 1, 15, 141, 26, 1]state_1
				]
			]
		]
	]
]

output:	answer(state(loc_1(largest(city(capital_1(state(all)))))))
predic:	answer(largest_one(population_1(city(capital_1(state(all))))))
3:	true
=INPUT=
give me the number of rivers in california .
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	0.0	null
	[
		child-0:*n:Num -> ({ count ( *n:River ) })	#children:5[18,161]5	0.0	null
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:4[17,129]4	0.0	null
			[
				child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:3[16,130]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' california ' })	#children:1[14,19]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	4.140206491626571E11	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	2.2998133123934688E12	info:[9, 9, 19, 144, 27, 1]give_0 me_1 the_2 number_3 of_4 rivers_5 in_6 california_7 ._8
	[
		child-0:*n:Num -> ({ count ( *n:River ) })	#children:5[18,161]5	6.482763684815495E8	info:[9, 4, 18, 161, 27, 1]rivers_5 in_6 california_7 ._8
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:4[17,129]4	2.202115036058374E7	info:[9, 4, 17, 129, 27, 1]rivers_5 in_6 california_7 ._8
			[
				child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:3[16,130]3	7.923740363210422E7	info:[9, 3, 16, 130, 27, 1]in_6 california_7 ._8
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[8, 1, 15, 123, 27, 1]california_7
					[
						child-0:*n:StateName -> ({ ' california ' })	#children:1[14,19]1	1.0	info:[8, 1, 14, 19, 26, 1]california_7
					]
				]
			]
		]
	]
]

output:	answer(count(river(loc_2(stateid('california')))))
predic:	answer(count(river(loc_2(stateid('california')))))
19:	false
=INPUT=
how many colorado rivers are there ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:5[19,144]5	0.0	null
	[
		child-0:*n:Num -> ({ count ( *n:River ) })	#children:4[18,161]4	0.0	null
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:3[17,129]3	0.0	null
			[
				child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[16,152]2	0.0	null
				[
					child-0:*n:RiverName -> ({ ' colorado ' })	#children:1[15,110]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	131.90188722863783	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	732.6922383986366	info:[7, 7, 19, 144, 27, 1]how_0 many_1 colorado_2 rivers_3 are_4 there_5 ?_6
	[
		child-0:*n:Num -> ({ size ( *n:State ) })	#children:3[18,145]3	9.95165366707263E-4	info:[7, 5, 18, 145, 27, 1]colorado_2 rivers_3 are_4 there_5 ?_6
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	3.273583459538019E9	info:[3, 1, 17, 123, 27, 1]colorado_2
			[
				child-0:*n:StateName -> ({ ' colorado ' })	#children:1[16,109]1	1.0	info:[3, 1, 16, 109, 26, 1]colorado_2
			]
		]
	]
]

output:	answer(count(river(riverid('colorado'))))
predic:	answer(size(stateid('colorado')))
35:	false
=INPUT=
how many states are there ?
=OUTPUT=
ROOT	#children:4[20,1000]4	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:3[19,144]3	0.0	null
	[
		child-0:*n:Num -> ({ count ( *n:State ) })	#children:2[18,176]2	0.0	null
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	0.0	null
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	728545.3648766957	info:[7, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:5[19,144]5	4046943.8715548716	info:[6, 6, 19, 144, 27, 1]how_0 many_1 states_2 are_3 there_4 ?_5
	[
		child-0:*n:Num -> ({ count ( *n:State ) })	#children:4[18,176]4	2.53842547965392E-4	info:[6, 4, 18, 176, 27, 1]states_2 are_3 there_4 ?_5
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:3[17,126]3	3.158724525149147E-7	info:[6, 4, 17, 126, 27, 1]states_2 are_3 there_4 ?_5
			[
				child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:2[16,172]2	1.1680732390230618E-10	info:[6, 3, 16, 172, 27, 1]are_3 there_4 ?_5
				[
					child-0:*n:City -> ({ city ( all ) })	#children:1[15,160]1	5.300643513854383E-7	info:[5, 1, 15, 160, 26, 1]there_4
				]
			]
		]
	]
]

output:	answer(count(state(all)))
predic:	answer(count(state(loc_1(city(all)))))
51:	true
=INPUT=
san antonio is in what state ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	0.0	null
		[
			child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:3[17,172]3	0.0	null
			[
				child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[16,147]2	0.0	null
				[
					child-0:*n:CityName -> ({ ' san antonio ' })	#children:1[15,70]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	1.2242333729851325E-7	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	5.469504587487427E-8	info:[7, 7, 19, 135, 27, 1]san_0 antonio_1 is_2 in_3 what_4 state_5 ?_6
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	9.272179397581756E-7	info:[6, 6, 18, 126, 27, 1]san_0 antonio_1 is_2 in_3 what_4 state_5
		[
			child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:3[17,172]3	0.013085270305478512	info:[5, 5, 17, 172, 27, 1]san_0 antonio_1 is_2 in_3 what_4
			[
				child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[16,147]2	47455.808602901736	info:[2, 2, 16, 147, 27, 1]san_0 antonio_1
				[
					child-0:*n:CityName -> ({ ' san antonio ' })	#children:1[15,70]1	0.6581722012086391	info:[2, 2, 15, 70, 26, 1]san_0 antonio_1
				]
			]
		]
	]
]

output:	answer(state(loc_1(cityid('sanantonio',_))))
predic:	answer(state(loc_1(cityid('sanantonio',_))))
67:	true
=INPUT=
what are the major rivers in ohio ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:6[19,128]6	0.0	null
	[
		child-0:*n:River -> ({ major ( *n:River ) })	#children:5[18,162]5	0.0	null
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:4[17,129]4	0.0	null
			[
				child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:3[16,130]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' ohio ' })	#children:1[14,43]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	4.8188171777380725E11	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:6[19,128]6	2.094120966628022E11	info:[8, 8, 19, 128, 27, 1]what_0 are_1 the_2 major_3 rivers_4 in_5 ohio_6 ?_7
	[
		child-0:*n:River -> ({ major ( *n:River ) })	#children:5[18,162]5	5.96531963032302E7	info:[8, 5, 18, 162, 27, 1]major_3 rivers_4 in_5 ohio_6 ?_7
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:4[17,129]4	159934.06423814117	info:[8, 4, 17, 129, 27, 1]rivers_4 in_5 ohio_6 ?_7
			[
				child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:3[16,130]3	415135.10367635905	info:[8, 3, 16, 130, 27, 1]in_5 ohio_6 ?_7
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[7, 1, 15, 123, 27, 1]ohio_6
					[
						child-0:*n:StateName -> ({ ' ohio ' })	#children:1[14,43]1	1.0	info:[7, 1, 14, 43, 26, 1]ohio_6
					]
				]
			]
		]
	]
]

output:	answer(major(river(loc_2(stateid('ohio')))))
predic:	answer(major(river(loc_2(stateid('ohio')))))
83:	true
=INPUT=
what is the biggest capital city in the us ?
=OUTPUT=
ROOT	#children:8[20,1000]8	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:7[19,120]7	0.0	null
	[
		child-0:*n:City -> ({ largest ( *n:City ) })	#children:6[18,150]6	0.0	null
		[
			child-0:*n:City -> ({ capital ( *n:City ) })	#children:5[17,131]5	0.0	null
			[
				child-0:*n:City -> ({ city ( *n:City ) })	#children:4[16,121]4	0.0	null
				[
					child-0:*n:City -> ({ loc_2 ( *n:Country ) })	#children:3[15,138]3	0.0	null
					[
						child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[14,137]2	0.0	null
						[
							child-0:*n:CountryName -> ({ ' usa ' })	#children:1[13,34]1	0.0	null
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:8[20,1000]8	4.161779994481856E11	info:[11, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:7[19,120]7	3.5356153158137036E11	info:[10, 10, 19, 120, 27, 1]what_0 is_1 the_2 biggest_3 capital_4 city_5 in_6 the_7 us_8 ?_9
	[
		child-0:*n:City -> ({ largest ( *n:City ) })	#children:6[18,150]6	4.01999347552399E7	info:[10, 7, 18, 150, 27, 1]biggest_3 capital_4 city_5 in_6 the_7 us_8 ?_9
		[
			child-0:*n:City -> ({ capital ( *n:City ) })	#children:5[17,131]5	74954.67347060487	info:[10, 6, 17, 131, 27, 1]capital_4 city_5 in_6 the_7 us_8 ?_9
			[
				child-0:*n:City -> ({ city ( *n:City ) })	#children:4[16,121]4	45.323044205085715	info:[10, 5, 16, 121, 27, 1]city_5 in_6 the_7 us_8 ?_9
				[
					child-0:*n:City -> ({ loc_2 ( *n:Country ) })	#children:3[15,138]3	0.007269896987568803	info:[10, 4, 15, 138, 27, 1]in_6 the_7 us_8 ?_9
					[
						child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[14,137]2	8.074868111621592	info:[9, 1, 14, 137, 27, 1]us_8
						[
							child-0:*n:CountryName -> ({ ' usa ' })	#children:1[13,34]1	1.0	info:[9, 1, 13, 34, 26, 1]us_8
						]
					]
				]
			]
		]
	]
]

output:	answer(largest(capital(city(loc_2(countryid('usa'))))))
predic:	answer(largest(capital(city(loc_2(countryid('usa'))))))
99:	true
=INPUT=
what is the capital of the state with the largest population density ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:5[19,120]5	0.0	null
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:4[18,131]4	0.0	null
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[17,122]3	0.0	null
			[
				child-0:*n:State -> ({ largest_one ( density_1 ( *n:State ) ) })	#children:2[16,166]2	0.0	null
				[
					child-0:*n:State -> ({ state ( all ) })	#children:1[15,141]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	336.26616707364167	info:[14, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:5[19,120]5	285.67291208855886	info:[13, 13, 19, 120, 27, 1]what_0 is_1 the_2 capital_3 of_4 the_5 state_6 with_7 the_8 largest_9 population_10 density_11 ?_12
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:4[18,131]4	0.3769064677529685	info:[13, 10, 18, 131, 27, 1]capital_3 of_4 the_5 state_6 with_7 the_8 largest_9 population_10 density_11 ?_12
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[17,122]3	3.067139220018348E-5	info:[13, 9, 17, 122, 27, 1]of_4 the_5 state_6 with_7 the_8 largest_9 population_10 density_11 ?_12
			[
				child-0:*n:State -> ({ largest_one ( density_1 ( *n:State ) ) })	#children:2[16,166]2	0.009259646974973595	info:[12, 6, 16, 166, 27, 1]state_6 with_7 the_8 largest_9 population_10 density_11
				[
					child-0:*n:State -> ({ state ( all ) })	#children:1[15,141]1	0.044366595542175494	info:[7, 1, 15, 141, 26, 1]state_6
				]
			]
		]
	]
]

output:	answer(capital(loc_2(largest_one(density_1(state(all))))))
predic:	answer(capital(loc_2(largest_one(density_1(state(all))))))
115:	true
=INPUT=
what is the highest point in the state with capital austin ?
=OUTPUT=
ROOT	#children:10[20,1000]10	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:9[19,124]9	0.0	null
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:8[18,132]8	0.0	null
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:7[17,133]7	0.0	null
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:6[16,134]6	0.0	null
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:5[15,126]5	0.0	null
					[
						child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:4[14,172]4	0.0	null
						[
							child-0:*n:City -> ({ capital ( *n:City ) })	#children:3[13,131]3	0.0	null
							[
								child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[12,147]2	0.0	null
								[
									child-0:*n:CityName -> ({ ' austin ' })	#children:1[11,30]1	0.0	null
								]
							]
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:10[20,1000]10	1.0922374085554222E11	info:[13, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:9[19,124]9	1.512005100491424E11	info:[12, 12, 19, 124, 27, 1]what_0 is_1 the_2 highest_3 point_4 in_5 the_6 state_7 with_8 capital_9 austin_10 ?_11
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:8[18,132]8	2.161926908318991E10	info:[12, 11, 18, 132, 27, 1]is_1 the_2 highest_3 point_4 in_5 the_6 state_7 with_8 capital_9 austin_10 ?_11
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:7[17,133]7	65519.163667471	info:[12, 8, 17, 133, 27, 1]point_4 in_5 the_6 state_7 with_8 capital_9 austin_10 ?_11
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:6[16,134]6	14.718740541393723	info:[12, 7, 16, 134, 27, 1]in_5 the_6 state_7 with_8 capital_9 austin_10 ?_11
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:5[15,126]5	2395.991274825592	info:[11, 4, 15, 126, 27, 1]state_7 with_8 capital_9 austin_10
					[
						child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:4[14,172]4	83.07476506171362	info:[11, 3, 14, 172, 27, 1]with_8 capital_9 austin_10
						[
							child-0:*n:City -> ({ capital ( *n:City ) })	#children:3[13,131]3	1540370.8503716618	info:[11, 2, 13, 131, 27, 1]capital_9 austin_10
							[
								child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[12,147]2	72102.42018085228	info:[11, 1, 12, 147, 27, 1]austin_10
								[
									child-0:*n:CityName -> ({ ' austin ' })	#children:1[11,30]1	1.0	info:[11, 1, 11, 30, 26, 1]austin_10
								]
							]
						]
					]
				]
			]
		]
	]
]

output:	answer(highest(place(loc_2(state(loc_1(capital(cityid('austin',_))))))))
predic:	answer(highest(place(loc_2(state(loc_1(capital(cityid('austin',_))))))))
131:	true
=INPUT=
what is the length of the longest river that runs through texas ?
=OUTPUT=
ROOT	#children:8[20,1000]8	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:7[19,144]7	0.0	null
	[
		child-0:*n:Num -> ({ len ( *n:River ) })	#children:6[18,151]6	0.0	null
		[
			child-0:*n:River -> ({ longest ( *n:River ) })	#children:5[17,142]5	0.0	null
			[
				child-0:*n:River -> ({ river ( *n:River ) })	#children:4[16,129]4	0.0	null
				[
					child-0:*n:River -> ({ traverse_2 ( *n:State ) })	#children:3[15,163]3	0.0	null
					[
						child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[14,123]2	0.0	null
						[
							child-0:*n:StateName -> ({ ' texas ' })	#children:1[13,92]1	0.0	null
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:8[20,1000]8	4.0253768535191117E24	info:[14, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:7[19,144]7	2.2360274285466285E25	info:[13, 13, 19, 144, 27, 1]what_0 is_1 the_2 length_3 of_4 the_5 longest_6 river_7 that_8 runs_9 through_10 texas_11 ?_12
	[
		child-0:*n:Num -> ({ len ( *n:River ) })	#children:6[18,151]6	1.005281783915786E28	info:[13, 12, 18, 151, 27, 1]is_1 the_2 length_3 of_4 the_5 longest_6 river_7 that_8 runs_9 through_10 texas_11 ?_12
		[
			child-0:*n:River -> ({ longest ( *n:River ) })	#children:5[17,142]5	4.268900172585135E20	info:[12, 6, 17, 142, 27, 1]longest_6 river_7 that_8 runs_9 through_10 texas_11
			[
				child-0:*n:River -> ({ river ( *n:River ) })	#children:4[16,129]4	3.7404461863357357E17	info:[12, 5, 16, 129, 27, 1]river_7 that_8 runs_9 through_10 texas_11
				[
					child-0:*n:River -> ({ traverse_2 ( *n:State ) })	#children:3[15,163]3	1.2579823833568478E16	info:[12, 4, 15, 163, 27, 1]that_8 runs_9 through_10 texas_11
					[
						child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[14,123]2	3.273583459538019E9	info:[12, 1, 14, 123, 27, 1]texas_11
						[
							child-0:*n:StateName -> ({ ' texas ' })	#children:1[13,92]1	1.0	info:[12, 1, 13, 92, 26, 1]texas_11
						]
					]
				]
			]
		]
	]
]

output:	answer(len(longest(river(traverse_2(stateid('texas'))))))
predic:	answer(len(longest(river(traverse_2(stateid('texas'))))))
147:	false
=INPUT=
what is the maximum elevation of san francisco ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	0.0	null
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	0.0	null
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	0.0	null
			[
				child-0:*n:Place -> ({ loc_2 ( *n:City ) })	#children:3[16,0]3	0.0	null
				[
					child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[15,147]2	0.0	null
					[
						child-0:*n:CityName -> ({ ' san francisco ' })	#children:1[14,100]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	1.0991249465281671E8	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	6.105449544899737E8	info:[9, 9, 19, 144, 27, 1]what_0 is_1 the_2 maximum_3 elevation_4 of_5 san_6 francisco_7 ?_8
	[
		child-0:*n:Num -> ({ area_1 ( *n:City ) })	#children:3[18,193]3	247.834306779663	info:[9, 3, 18, 193, 27, 1]san_6 francisco_7 ?_8
		[
			child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[17,147]2	80379.87176517058	info:[8, 2, 17, 147, 27, 1]san_6 francisco_7
			[
				child-0:*n:CityName -> ({ ' san francisco ' })	#children:1[16,100]1	1.114801300199857	info:[8, 2, 16, 100, 26, 1]san_6 francisco_7
			]
		]
	]
]

output:	answer(highest(place(loc_2(cityid('sanfrancisco',_)))))
predic:	answer(area_1(cityid('sanfrancisco',_)))
163:	true
=INPUT=
what is the population of tempe arizona ?
=OUTPUT=
ROOT	#children:6[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:5[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:4[18,159]3	0.0	null
		[
			child-0:*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })	#children:3[17,164]2	0.0	null
			[
				child-0:*n:CityName -> ({ ' tempe ' })	#children:1[16,2]1	0.0	null
			]
			[
				child-0:*n:StateAbbrev -> ({ ' az ' })	#children:1[16,51]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]5	9.284822444640275E14	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:5[19,144]4	5.157558760554553E15	info:[8, 8, 19, 144, 27, 1]what_0 is_1 the_2 population_3 of_4 tempe_5 arizona_6 ?_7
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:4[18,159]3	1.14505087040025568E17	info:[8, 6, 18, 159, 27, 1]the_2 population_3 of_4 tempe_5 arizona_6 ?_7
		[
			child-0:*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })	#children:3[17,164]2	5.160551165805356E10	info:[8, 3, 17, 164, 28, 1]tempe_5 arizona_6 ?_7
			[
				child-0:*n:CityName -> ({ ' tempe ' })	#children:1[16,2]1	1.0	info:[6, 1, 16, 2, 26, 1]tempe_5
			]
			[
				child-0:*n:StateAbbrev -> ({ ' az ' })	#children:1[16,51]1	1.0	info:[7, 1, 16, 51, 26, 1]arizona_6
			]
		]
	]
]

output:	answer(population_1(cityid('tempe','az')))
predic:	answer(population_1(cityid('tempe','az')))
179:	true
=INPUT=
what length is the mississippi ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ len ( *n:River ) })	#children:3[18,151]3	0.0	null
		[
			child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[17,152]2	0.0	null
			[
				child-0:*n:RiverName -> ({ ' mississippi ' })	#children:1[16,84]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	7883592.133351072	info:[7, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	4.379199485443581E7	info:[6, 6, 19, 144, 27, 1]what_0 length_1 is_2 the_3 mississippi_4 ?_5
	[
		child-0:*n:Num -> ({ len ( *n:River ) })	#children:3[18,151]3	3.2718879882054706E9	info:[6, 5, 18, 151, 27, 1]length_1 is_2 the_3 mississippi_4 ?_5
		[
			child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[17,152]2	3.1615342236304545E9	info:[5, 2, 17, 152, 27, 1]the_3 mississippi_4
			[
				child-0:*n:RiverName -> ({ ' mississippi ' })	#children:1[16,84]1	1.0	info:[5, 1, 16, 84, 26, 1]mississippi_4
			]
		]
	]
]

output:	answer(len(riverid('mississippi')))
predic:	answer(len(riverid('mississippi')))
195:	true
=INPUT=
what state has the longest river ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	0.0	null
		[
			child-0:*n:State -> ({ loc_1 ( *n:River ) })	#children:3[17,182]3	0.0	null
			[
				child-0:*n:River -> ({ longest ( *n:River ) })	#children:2[16,142]2	0.0	null
				[
					child-0:*n:River -> ({ river ( all ) })	#children:1[15,171]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	0.3869227149206209	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.17286537117520043	info:[7, 7, 19, 135, 27, 1]what_0 state_1 has_2 the_3 longest_4 river_5 ?_6
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	2.3426057919501055E-4	info:[7, 6, 18, 126, 27, 1]state_1 has_2 the_3 longest_4 river_5 ?_6
		[
			child-0:*n:State -> ({ loc_1 ( *n:River ) })	#children:3[17,182]3	4.069083560982678E-6	info:[7, 5, 17, 182, 27, 1]has_2 the_3 longest_4 river_5 ?_6
			[
				child-0:*n:River -> ({ longest ( *n:River ) })	#children:2[16,142]2	0.027388596258310804	info:[6, 3, 16, 142, 27, 1]the_3 longest_4 river_5
				[
					child-0:*n:River -> ({ river ( all ) })	#children:1[15,171]1	7.648417624634367E-7	info:[6, 1, 15, 171, 26, 1]river_5
				]
			]
		]
	]
]

output:	answer(state(loc_1(longest(river(all)))))
predic:	answer(state(loc_1(longest(river(all)))))
211:	false
=INPUT=
what states border texas and have a major river ?
=OUTPUT=
ROOT	#children:10[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:9[19,135]6	0.0	null
	[
		child-0:*n:State -> ({ intersection ( *n:State , *n:State ) })	#children:8[18,178]5	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	0.0	null
			[
				child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[16,127]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' texas ' })	#children:1[14,92]1	0.0	null
					]
				]
			]
		]
		[
			child-0:*n:State -> ({ loc_1 ( *n:River ) })	#children:3[17,182]3	0.0	null
			[
				child-0:*n:River -> ({ major ( *n:River ) })	#children:2[16,162]2	0.0	null
				[
					child-0:*n:River -> ({ river ( all ) })	#children:1[15,171]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:10[20,1000]7	93270.31680563603	info:[11, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:9[19,135]6	41670.35770319809	info:[10, 10, 19, 135, 27, 1]what_0 states_1 border_2 texas_3 and_4 have_5 a_6 major_7 river_8 ?_9
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:8[18,126]5	0.3316341336819785	info:[10, 9, 18, 126, 27, 1]states_1 border_2 texas_3 and_4 have_5 a_6 major_7 river_8 ?_9
		[
			child-0:*n:State -> ({ intersection ( *n:State , *n:State ) })	#children:7[17,178]4	0.9265602040616121	info:[10, 8, 17, 178, 28, 1]border_2 texas_3 and_4 have_5 a_6 major_7 river_8 ?_9
			[
				child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[16,127]3	2.5038054897282947E11	info:[4, 2, 16, 127, 27, 1]border_2 texas_3
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[4, 1, 15, 123, 27, 1]texas_3
					[
						child-0:*n:StateName -> ({ ' texas ' })	#children:1[14,92]1	1.0	info:[4, 1, 14, 92, 26, 1]texas_3
					]
				]
			]
			[
				child-0:*n:State -> ({ loc_1 ( *n:River ) })	#children:3[16,182]3	2.0373123459465067E-11	info:[10, 5, 16, 182, 27, 1]have_5 a_6 major_7 river_8 ?_9
				[
					child-0:*n:River -> ({ major ( *n:River ) })	#children:2[15,162]2	7.731055559826006E-6	info:[9, 2, 15, 162, 27, 1]major_7 river_8
					[
						child-0:*n:River -> ({ river ( all ) })	#children:1[14,171]1	2.870460686610229E-7	info:[9, 1, 14, 171, 26, 1]river_8
					]
				]
			]
		]
	]
]

output:	answer(intersection(state(next_to_2(stateid('texas'))),loc_1(major(river(all)))))
predic:	answer(state(intersection(next_to_2(stateid('texas')),loc_1(major(river(all))))))
227:	true
=INPUT=
what states surround kentucky ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	0.0	null
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[17,127]3	0.0	null
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	0.0	null
				[
					child-0:*n:StateName -> ({ ' kentucky ' })	#children:1[15,97]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	2.2894198534587744E16	info:[6, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	1.022843574394993E16	info:[5, 5, 19, 135, 27, 1]what_0 states_1 surround_2 kentucky_3 ?_4
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	6.398144662550136E16	info:[4, 4, 18, 126, 27, 1]what_0 states_1 surround_2 kentucky_3
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[17,127]3	5.858850243761762E12	info:[4, 2, 17, 127, 27, 1]surround_2 kentucky_3
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	3.273583459538019E9	info:[4, 1, 16, 123, 27, 1]kentucky_3
				[
					child-0:*n:StateName -> ({ ' kentucky ' })	#children:1[15,97]1	1.0	info:[4, 1, 15, 97, 26, 1]kentucky_3
				]
			]
		]
	]
]

output:	answer(state(next_to_2(stateid('kentucky'))))
predic:	answer(state(next_to_2(stateid('kentucky'))))
243:	true
=INPUT=
which river goes through the most states ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:5[19,128]5	0.0	null
	[
		child-0:*n:River -> ({ most ( *n:River ) })	#children:4[18,202]4	0.0	null
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:3[17,129]3	0.0	null
			[
				child-0:*n:River -> ({ traverse_2 ( *n:State ) })	#children:2[16,163]2	0.0	null
				[
					child-0:*n:State -> ({ state ( all ) })	#children:1[15,141]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	67241.55310028384	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:5[19,128]5	29221.267581276443	info:[8, 8, 19, 128, 27, 1]which_0 river_1 goes_2 through_3 the_4 most_5 states_6 ?_7
	[
		child-0:*n:River -> ({ most ( *n:River ) })	#children:4[18,202]4	118.25316667993711	info:[8, 7, 18, 202, 27, 1]river_1 goes_2 through_3 the_4 most_5 states_6 ?_7
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:3[17,129]3	0.4877530122010811	info:[4, 3, 17, 129, 27, 1]river_1 goes_2 through_3
			[
				child-0:*n:River -> ({ traverse_2 ( *n:State ) })	#children:2[16,163]2	0.019414297523398464	info:[4, 2, 16, 163, 27, 1]goes_2 through_3
				[
					child-0:*n:State -> ({ state ( all ) })	#children:1[15,141]1	5.303907502780991E-4	info:[3, 1, 15, 141, 26, 1]goes_2
				]
			]
		]
	]
]

output:	answer(most(river(traverse_2(state(all)))))
predic:	answer(most(river(traverse_2(state(all)))))
259:	false
=INPUT=
which state has the lowest point that borders idaho ?
=OUTPUT=
ROOT	#children:10[20,1000]10	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:9[19,135]9	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:8[18,126]8	0.0	null
		[
			child-0:*n:State -> ({ loc_1 ( *n:Place ) })	#children:7[17,167]7	0.0	null
			[
				child-0:*n:Place -> ({ lowest ( *n:Place ) })	#children:6[16,186]6	0.0	null
				[
					child-0:*n:Place -> ({ place ( *n:Place ) })	#children:5[15,133]5	0.0	null
					[
						child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:4[14,134]4	0.0	null
						[
							child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[13,127]3	0.0	null
							[
								child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[12,123]2	0.0	null
								[
									child-0:*n:StateName -> ({ ' idaho ' })	#children:1[11,41]1	0.0	null
								]
							]
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:11[20,1000]11	5.540012656271544E23	info:[11, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:10[19,135]10	2.4751101633776077E23	info:[10, 10, 19, 135, 27, 1]which_0 state_1 has_2 the_3 lowest_4 point_5 that_6 borders_7 idaho_8 ?_9
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:9[18,126]9	1.6547410721039784E19	info:[10, 9, 18, 126, 27, 1]state_1 has_2 the_3 lowest_4 point_5 that_6 borders_7 idaho_8 ?_9
		[
			child-0:*n:State -> ({ loc_1 ( *n:Place ) })	#children:8[17,167]8	5.58523416997482E15	info:[10, 7, 17, 167, 27, 1]the_3 lowest_4 point_5 that_6 borders_7 idaho_8 ?_9
			[
				child-0:*n:Place -> ({ lowest ( *n:Place ) })	#children:7[16,186]7	5.338887270384654E22	info:[9, 6, 16, 186, 27, 1]the_3 lowest_4 point_5 that_6 borders_7 idaho_8
				[
					child-0:*n:Place -> ({ place ( *n:Place ) })	#children:6[15,133]6	1.4595509398553306E16	info:[9, 4, 15, 133, 27, 1]point_5 that_6 borders_7 idaho_8
					[
						child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:5[14,134]5	8.540867231808605E11	info:[9, 3, 14, 134, 27, 1]that_6 borders_7 idaho_8
						[
							child-0:*n:State -> ({ state ( *n:State ) })	#children:4[13,126]4	1.5620056550455545E13	info:[9, 3, 13, 126, 27, 1]that_6 borders_7 idaho_8
							[
								child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[12,127]3	4.123591077597181E12	info:[9, 2, 12, 127, 27, 1]borders_7 idaho_8
								[
									child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[11,123]2	3.273583459538019E9	info:[9, 1, 11, 123, 27, 1]idaho_8
									[
										child-0:*n:StateName -> ({ ' idaho ' })	#children:1[10,41]1	1.0	info:[9, 1, 10, 41, 26, 1]idaho_8
									]
								]
							]
						]
					]
				]
			]
		]
	]
]

output:	answer(state(loc_1(lowest(place(loc_2(next_to_2(stateid('idaho'))))))))
predic:	answer(state(loc_1(lowest(place(loc_2(state(next_to_2(stateid('idaho')))))))))
275:	true
=INPUT=
which states does the chattahoochee river run through ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:5[18,126]5	0.0	null
		[
			child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:4[17,181]4	0.0	null
			[
				child-0:*n:River -> ({ river ( *n:River ) })	#children:3[16,129]3	0.0	null
				[
					child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[15,152]2	0.0	null
					[
						child-0:*n:RiverName -> ({ ' chattahoochee ' })	#children:1[14,82]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	8.319159005004251E21	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	3.71674872993848E21	info:[9, 9, 19, 135, 27, 1]which_0 states_1 does_2 the_3 chattahoochee_4 river_5 run_6 through_7 ?_8
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:5[18,126]5	2.1834188964018317E22	info:[8, 8, 18, 126, 27, 1]which_0 states_1 does_2 the_3 chattahoochee_4 river_5 run_6 through_7
		[
			child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:4[17,181]4	1.1176195883307672E16	info:[8, 6, 17, 181, 27, 1]does_2 the_3 chattahoochee_4 river_5 run_6 through_7
			[
				child-0:*n:River -> ({ river ( *n:River ) })	#children:3[16,129]3	9.776177875974937E10	info:[6, 3, 16, 129, 27, 1]the_3 chattahoochee_4 river_5
				[
					child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[15,152]2	5.877014208553535E9	info:[5, 2, 15, 152, 27, 1]the_3 chattahoochee_4
					[
						child-0:*n:RiverName -> ({ ' chattahoochee ' })	#children:1[14,82]1	1.0	info:[5, 1, 14, 82, 26, 1]chattahoochee_4
					]
				]
			]
		]
	]
]

output:	answer(state(traverse_1(river(riverid('chattahoochee')))))
predic:	answer(state(traverse_1(river(riverid('chattahoochee')))))
4:	true
=INPUT=
give me the states that border utah .
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	0.0	null
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[17,127]3	0.0	null
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	0.0	null
				[
					child-0:*n:StateName -> ({ ' utah ' })	#children:1[15,65]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	5.394877312647302E9	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	2.4102680797294855E9	info:[8, 8, 19, 135, 27, 1]give_0 me_1 the_2 states_3 that_4 border_5 utah_6 ._7
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	2.3337252796676068E11	info:[7, 4, 18, 126, 27, 1]states_3 that_4 border_5 utah_6
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[17,127]3	8.558212650640082E7	info:[7, 2, 17, 127, 27, 1]border_5 utah_6
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	3.273583459538019E9	info:[7, 1, 16, 123, 27, 1]utah_6
				[
					child-0:*n:StateName -> ({ ' utah ' })	#children:1[15,65]1	1.0	info:[7, 1, 15, 65, 26, 1]utah_6
				]
			]
		]
	]
]

output:	answer(state(next_to_2(stateid('utah'))))
predic:	answer(state(next_to_2(stateid('utah'))))
20:	true
=INPUT=
how many people live in detroit ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:3[18,159]3	0.0	null
		[
			child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[17,147]2	0.0	null
			[
				child-0:*n:CityName -> ({ ' detroit ' })	#children:1[16,119]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	3.5024823376538754E8	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	1.9455685417745366E9	info:[7, 7, 19, 144, 27, 1]how_0 many_1 people_2 live_3 in_4 detroit_5 ?_6
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:3[18,159]3	25.52091406570124	info:[7, 5, 18, 159, 27, 1]people_2 live_3 in_4 detroit_5 ?_6
		[
			child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[17,147]2	72102.42018085228	info:[6, 1, 17, 147, 27, 1]detroit_5
			[
				child-0:*n:CityName -> ({ ' detroit ' })	#children:1[16,119]1	1.0	info:[6, 1, 16, 119, 26, 1]detroit_5
			]
		]
	]
]

output:	answer(population_1(cityid('detroit',_)))
predic:	answer(population_1(cityid('detroit',_)))
36:	true
=INPUT=
how many states are there in the usa ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	0.0	null
	[
		child-0:*n:Num -> ({ count ( *n:State ) })	#children:5[18,176]5	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	0.0	null
			[
				child-0:*n:State -> ({ loc_2 ( *n:Country ) })	#children:3[16,136]3	0.0	null
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	0.0	null
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	4.187695773660269E14	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	2.326192789658196E15	info:[9, 9, 19, 144, 27, 1]how_0 many_1 states_2 are_3 there_4 in_5 the_6 usa_7 ?_8
	[
		child-0:*n:Num -> ({ count ( *n:State ) })	#children:5[18,176]5	145909.2894606137	info:[9, 7, 18, 176, 27, 1]states_2 are_3 there_4 in_5 the_6 usa_7 ?_8
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	181.56422347650053	info:[9, 7, 17, 126, 27, 1]states_2 are_3 there_4 in_5 the_6 usa_7 ?_8
			[
				child-0:*n:State -> ({ loc_2 ( *n:Country ) })	#children:3[16,136]3	0.06616932245365631	info:[9, 6, 16, 136, 27, 1]are_3 there_4 in_5 the_6 usa_7 ?_8
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	8.074868111621592	info:[8, 1, 15, 137, 27, 1]usa_7
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	1.0	info:[8, 1, 14, 34, 26, 1]usa_7
					]
				]
			]
		]
	]
]

output:	answer(count(state(loc_2(countryid('usa')))))
predic:	answer(count(state(loc_2(countryid('usa')))))
52:	true
=INPUT=
tell me what cities are in texas .
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:5[19,120]5	0.0	null
	[
		child-0:*n:City -> ({ city ( *n:City ) })	#children:4[18,121]4	0.0	null
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[17,122]3	0.0	null
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	0.0	null
				[
					child-0:*n:StateName -> ({ ' texas ' })	#children:1[15,92]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	2.2042316023147147E7	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:5[19,120]5	1.8725917811796196E7	info:[8, 8, 19, 120, 27, 1]tell_0 me_1 what_2 cities_3 are_4 in_5 texas_6 ._7
	[
		child-0:*n:City -> ({ city ( *n:City ) })	#children:4[18,121]4	8.943548412683481E7	info:[8, 5, 18, 121, 27, 1]cities_3 are_4 in_5 texas_6 ._7
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[17,122]3	1845938.3269874083	info:[8, 4, 17, 122, 27, 1]are_4 in_5 texas_6 ._7
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	3.273583459538019E9	info:[7, 1, 16, 123, 27, 1]texas_6
				[
					child-0:*n:StateName -> ({ ' texas ' })	#children:1[15,92]1	1.0	info:[7, 1, 15, 92, 26, 1]texas_6
				]
			]
		]
	]
]

output:	answer(city(loc_2(stateid('texas'))))
predic:	answer(city(loc_2(stateid('texas'))))
68:	false
=INPUT=
what are the population densities of each us state ?
=OUTPUT=
ROOT	#children:4[20,1000]4	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:3[19,144]3	0.0	null
	[
		child-0:*n:Num -> ({ density_1 ( *n:State ) })	#children:2[18,196]2	0.0	null
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	0.0	null
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	0.001480004359264467	info:[11, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	0.008221169003818361	info:[10, 10, 19, 144, 27, 1]what_0 are_1 the_2 population_3 densities_4 of_5 each_6 us_7 state_8 ?_9
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:5[18,158]5	33945.68631537741	info:[9, 9, 18, 158, 27, 1]what_0 are_1 the_2 population_3 densities_4 of_5 each_6 us_7 state_8
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	3.2396974550429037E-4	info:[9, 3, 17, 126, 27, 1]each_6 us_7 state_8
			[
				child-0:*n:State -> ({ loc_2 ( *n:Country ) })	#children:3[16,136]3	14.6434770521209	info:[8, 2, 16, 136, 27, 1]each_6 us_7
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	8.074868111621592	info:[8, 1, 15, 137, 27, 1]us_7
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	1.0	info:[8, 1, 14, 34, 26, 1]us_7
					]
				]
			]
		]
	]
]

output:	answer(density_1(state(all)))
predic:	answer(population_1(state(loc_2(countryid('usa')))))
84:	true
=INPUT=
what is the biggest city in kansas ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	0.0	null
	[
		child-0:*n:City -> ({ largest ( *n:City ) })	#children:5[18,150]5	0.0	null
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	0.0	null
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[16,122]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' kansas ' })	#children:1[14,67]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	6.3056085561751424E16	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	5.356892054913732E16	info:[8, 8, 19, 120, 27, 1]what_0 is_1 the_2 biggest_3 city_4 in_5 kansas_6 ?_7
	[
		child-0:*n:City -> ({ largest ( *n:City ) })	#children:5[18,150]5	6.09078454138425E12	info:[8, 5, 18, 150, 27, 1]biggest_3 city_4 in_5 kansas_6 ?_7
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	7.555381848564961E8	info:[8, 4, 17, 121, 27, 1]city_4 in_5 kansas_6 ?_7
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[16,122]3	122283.1394393353	info:[8, 3, 16, 122, 27, 1]in_5 kansas_6 ?_7
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[7, 1, 15, 123, 27, 1]kansas_6
					[
						child-0:*n:StateName -> ({ ' kansas ' })	#children:1[14,67]1	1.0	info:[7, 1, 14, 67, 26, 1]kansas_6
					]
				]
			]
		]
	]
]

output:	answer(largest(city(loc_2(stateid('kansas')))))
predic:	answer(largest(city(loc_2(stateid('kansas')))))
100:	true
=INPUT=
what is the capital of the state with the longest river ?
=OUTPUT=
ROOT	#children:8[20,1000]8	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:7[19,120]7	0.0	null
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:6[18,131]6	0.0	null
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:5[17,122]5	0.0	null
			[
				child-0:*n:State -> ({ state ( *n:State ) })	#children:4[16,126]4	0.0	null
				[
					child-0:*n:State -> ({ loc_1 ( *n:River ) })	#children:3[15,182]3	0.0	null
					[
						child-0:*n:River -> ({ longest ( *n:River ) })	#children:2[14,142]2	0.0	null
						[
							child-0:*n:River -> ({ river ( all ) })	#children:1[13,171]1	0.0	null
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:8[20,1000]8	1.4798277142139915	info:[13, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:7[19,120]7	1.2571787884217498	info:[12, 12, 19, 120, 27, 1]what_0 is_1 the_2 capital_3 of_4 the_5 state_6 with_7 the_8 longest_9 river_10 ?_11
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:6[18,131]6	0.0016586760467198506	info:[12, 9, 18, 131, 27, 1]capital_3 of_4 the_5 state_6 with_7 the_8 longest_9 river_10 ?_11
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:5[17,122]5	1.349775286831589E-7	info:[12, 8, 17, 122, 27, 1]of_4 the_5 state_6 with_7 the_8 longest_9 river_10 ?_11
			[
				child-0:*n:State -> ({ state ( *n:State ) })	#children:4[16,126]4	1.2788005622974764E-5	info:[11, 5, 16, 126, 27, 1]state_6 with_7 the_8 longest_9 river_10
				[
					child-0:*n:State -> ({ loc_1 ( *n:River ) })	#children:3[15,182]3	3.137455400521024E-7	info:[11, 4, 15, 182, 27, 1]with_7 the_8 longest_9 river_10
					[
						child-0:*n:River -> ({ longest ( *n:River ) })	#children:2[14,142]2	2.4217881427568776E-5	info:[11, 4, 14, 142, 27, 1]with_7 the_8 longest_9 river_10
						[
							child-0:*n:River -> ({ river ( all ) })	#children:1[13,171]1	4.288997827741815E-4	info:[8, 1, 13, 171, 26, 1]with_7
						]
					]
				]
			]
		]
	]
]

output:	answer(capital(loc_2(state(loc_1(longest(river(all)))))))
predic:	answer(capital(loc_2(state(loc_1(longest(river(all)))))))
116:	true
=INPUT=
what is the highest point in the states bordering colorado ?
=OUTPUT=
ROOT	#children:9[20,1000]9	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:8[19,124]8	0.0	null
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:7[18,132]7	0.0	null
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:6[17,133]6	0.0	null
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:5[16,134]5	0.0	null
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:4[15,126]4	0.0	null
					[
						child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[14,127]3	0.0	null
						[
							child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[13,123]2	0.0	null
							[
								child-0:*n:StateName -> ({ ' colorado ' })	#children:1[12,109]1	0.0	null
							]
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:9[20,1000]9	3.2128161998570514E23	info:[12, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:8[19,124]8	4.447562812878004E23	info:[11, 11, 19, 124, 27, 1]what_0 is_1 the_2 highest_3 point_4 in_5 the_6 states_7 bordering_8 colorado_9 ?_10
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:7[18,132]7	6.359307728839502E22	info:[11, 10, 18, 132, 27, 1]is_1 the_2 highest_3 point_4 in_5 the_6 states_7 bordering_8 colorado_9 ?_10
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:6[17,133]6	1.92724611685239808E17	info:[11, 7, 17, 133, 27, 1]point_4 in_5 the_6 states_7 bordering_8 colorado_9 ?_10
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:5[16,134]5	4.329517345082146E13	info:[11, 6, 16, 134, 27, 1]in_5 the_6 states_7 bordering_8 colorado_9 ?_10
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:4[15,126]4	5.774581406117769E13	info:[10, 3, 15, 126, 27, 1]states_7 bordering_8 colorado_9
					[
						child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[14,127]3	2.7303057860345226E10	info:[10, 2, 14, 127, 27, 1]bordering_8 colorado_9
						[
							child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[13,123]2	3.273583459538019E9	info:[10, 1, 13, 123, 27, 1]colorado_9
							[
								child-0:*n:StateName -> ({ ' colorado ' })	#children:1[12,109]1	1.0	info:[10, 1, 12, 109, 26, 1]colorado_9
							]
						]
					]
				]
			]
		]
	]
]

output:	answer(highest(place(loc_2(state(next_to_2(stateid('colorado')))))))
predic:	answer(highest(place(loc_2(state(next_to_2(stateid('colorado')))))))
132:	true
=INPUT=
what is the length of the mississippi river ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:5[19,144]5	0.0	null
	[
		child-0:*n:Num -> ({ len ( *n:River ) })	#children:4[18,151]4	0.0	null
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:3[17,129]3	0.0	null
			[
				child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[16,152]2	0.0	null
				[
					child-0:*n:RiverName -> ({ ' mississippi ' })	#children:1[15,84]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	7.500827250546252E10	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:5[19,144]5	4.166580193441688E11	info:[9, 9, 19, 144, 27, 1]what_0 is_1 the_2 length_3 of_4 the_5 mississippi_6 river_7 ?_8
	[
		child-0:*n:Num -> ({ len ( *n:River ) })	#children:4[18,151]4	1.873227097403595E14	info:[9, 8, 18, 151, 27, 1]is_1 the_2 length_3 of_4 the_5 mississippi_6 river_7 ?_8
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:3[17,129]3	2.069192856732439E8	info:[8, 3, 17, 129, 27, 1]the_5 mississippi_6 river_7
			[
				child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[16,152]2	9.296441786954811E9	info:[7, 2, 16, 152, 27, 1]the_5 mississippi_6
				[
					child-0:*n:RiverName -> ({ ' mississippi ' })	#children:1[15,84]1	1.0	info:[7, 1, 15, 84, 26, 1]mississippi_6
				]
			]
		]
	]
]

output:	answer(len(river(riverid('mississippi'))))
predic:	answer(len(river(riverid('mississippi'))))
148:	false
=INPUT=
what is the most dense state in the usa ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	0.0	null
	[
		child-0:*n:State -> ({ largest_one ( density_1 ( *n:State ) ) })	#children:5[18,166]5	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	0.0	null
			[
				child-0:*n:State -> ({ loc_2 ( *n:Country ) })	#children:3[16,136]3	0.0	null
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	0.0	null
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	0.030650871880207667	info:[11, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	0.013693882886929033	info:[10, 10, 19, 135, 27, 1]what_0 is_1 the_2 most_3 dense_4 state_5 in_6 the_7 usa_8 ?_9
	[
		child-0:*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })	#children:5[18,169]5	0.001095652042428758	info:[10, 9, 18, 169, 27, 1]is_1 the_2 most_3 dense_4 state_5 in_6 the_7 usa_8 ?_9
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	388.7454334369457	info:[9, 4, 17, 126, 27, 1]state_5 in_6 the_7 usa_8
			[
				child-0:*n:State -> ({ loc_2 ( *n:Country ) })	#children:3[16,136]3	82.1880381808124	info:[9, 3, 16, 136, 27, 1]in_6 the_7 usa_8
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	8.074868111621592	info:[9, 1, 15, 137, 27, 1]usa_8
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	1.0	info:[9, 1, 14, 34, 26, 1]usa_8
					]
				]
			]
		]
	]
]

output:	answer(largest_one(density_1(state(loc_2(countryid('usa'))))))
predic:	answer(largest_one(population_1(state(loc_2(countryid('usa'))))))
164:	true
=INPUT=
what is the population of the largest city in the state with the largest area ?
=OUTPUT=
ROOT	#children:8[20,1000]8	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:7[19,144]7	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:6[18,159]6	0.0	null
		[
			child-0:*n:City -> ({ largest ( *n:City ) })	#children:5[17,150]5	0.0	null
			[
				child-0:*n:City -> ({ city ( *n:City ) })	#children:4[16,121]4	0.0	null
				[
					child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[15,122]3	0.0	null
					[
						child-0:*n:State -> ({ largest_one ( area_1 ( *n:State ) ) })	#children:2[14,187]2	0.0	null
						[
							child-0:*n:State -> ({ state ( all ) })	#children:1[13,141]1	0.0	null
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:8[20,1000]8	9.336305727918278E7	info:[17, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:7[19,144]7	5.1861568366379225E8	info:[16, 16, 19, 144, 27, 1]what_0 is_1 the_2 population_3 of_4 the_5 largest_6 city_7 in_8 the_9 state_10 with_11 the_12 largest_13 area_14 ?_15
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:6[18,159]6	1.1514000471001822E10	info:[16, 14, 18, 159, 27, 1]the_2 population_3 of_4 the_5 largest_6 city_7 in_8 the_9 state_10 with_11 the_12 largest_13 area_14 ?_15
		[
			child-0:*n:City -> ({ largest ( *n:City ) })	#children:5[17,150]5	2322.9355219376644	info:[16, 10, 17, 150, 27, 1]largest_6 city_7 in_8 the_9 state_10 with_11 the_12 largest_13 area_14 ?_15
			[
				child-0:*n:City -> ({ city ( *n:City ) })	#children:4[16,121]4	0.1572043275744082	info:[16, 9, 16, 121, 27, 1]city_7 in_8 the_9 state_10 with_11 the_12 largest_13 area_14 ?_15
				[
					child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[15,122]3	1.9702680026286982E-5	info:[16, 8, 15, 122, 27, 1]in_8 the_9 state_10 with_11 the_12 largest_13 area_14 ?_15
					[
						child-0:*n:State -> ({ largest_one ( area_1 ( *n:State ) ) })	#children:2[14,187]2	0.01074183002896908	info:[15, 5, 14, 187, 27, 1]state_10 with_11 the_12 largest_13 area_14
						[
							child-0:*n:State -> ({ state ( all ) })	#children:1[13,141]1	0.044366595542175494	info:[11, 1, 13, 141, 26, 1]state_10
						]
					]
				]
			]
		]
	]
]

output:	answer(population_1(largest(city(loc_2(largest_one(area_1(state(all))))))))
predic:	answer(population_1(largest(city(loc_2(largest_one(area_1(state(all))))))))
180:	true
=INPUT=
what major cities are located in pennsylvania ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	0.0	null
	[
		child-0:*n:City -> ({ major ( *n:City ) })	#children:5[18,156]5	0.0	null
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	0.0	null
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[16,122]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' pennsylvania ' })	#children:1[14,58]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	4.987927209533754E12	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	4.2374637437765537E12	info:[8, 8, 19, 120, 27, 1]what_0 major_1 cities_2 are_3 located_4 in_5 pennsylvania_6 ?_7
	[
		child-0:*n:City -> ({ major ( *n:City ) })	#children:5[18,156]5	1.3496487322033473E11	info:[8, 7, 18, 156, 27, 1]major_1 cities_2 are_3 located_4 in_5 pennsylvania_6 ?_7
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	5.925556014428844E8	info:[8, 6, 17, 121, 27, 1]cities_2 are_3 located_4 in_5 pennsylvania_6 ?_7
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[16,122]3	1.0319019324871063E7	info:[8, 5, 16, 122, 27, 1]are_3 located_4 in_5 pennsylvania_6 ?_7
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[7, 1, 15, 123, 27, 1]pennsylvania_6
					[
						child-0:*n:StateName -> ({ ' pennsylvania ' })	#children:1[14,58]1	1.0	info:[7, 1, 14, 58, 26, 1]pennsylvania_6
					]
				]
			]
		]
	]
]

output:	answer(major(city(loc_2(stateid('pennsylvania')))))
predic:	answer(major(city(loc_2(stateid('pennsylvania')))))
196:	true
=INPUT=
what state has the lowest population density ?
=OUTPUT=
ROOT	#children:4[20,1000]4	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	0.0	null
	[
		child-0:*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })	#children:2[18,194]2	0.0	null
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	0.0	null
		]
	]
]

=PREDICTION=
ROOT	#children:4[20,1000]4	1.008415734497989	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	0.4505296626967735	info:[8, 8, 19, 135, 27, 1]what_0 state_1 has_2 the_3 lowest_4 population_5 density_6 ?_7
	[
		child-0:*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })	#children:2[18,194]2	0.006803123520542291	info:[8, 7, 18, 194, 27, 1]state_1 has_2 the_3 lowest_4 population_5 density_6 ?_7
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	0.06102155556752424	info:[2, 1, 17, 141, 26, 1]state_1
		]
	]
]

output:	answer(smallest_one(density_1(state(all))))
predic:	answer(smallest_one(density_1(state(all))))
212:	true
=INPUT=
what states border the most populous state ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	0.0	null
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[17,127]3	0.0	null
			[
				child-0:*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })	#children:2[16,169]2	0.0	null
				[
					child-0:*n:State -> ({ state ( all ) })	#children:1[15,141]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	2.5985711292611587E-6	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	1.1609630178394833E-6	info:[8, 8, 19, 135, 27, 1]what_0 states_1 border_2 the_3 most_4 populous_5 state_6 ?_7
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	9.239540668220933E-12	info:[8, 7, 18, 126, 27, 1]states_1 border_2 the_3 most_4 populous_5 state_6 ?_7
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[17,127]3	3.1241577659023123E-11	info:[8, 6, 17, 127, 27, 1]border_2 the_3 most_4 populous_5 state_6 ?_7
			[
				child-0:*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })	#children:2[16,169]2	3.2567506598740726E-11	info:[8, 5, 16, 169, 27, 1]the_3 most_4 populous_5 state_6 ?_7
				[
					child-0:*n:State -> ({ state ( all ) })	#children:1[15,141]1	4.8513837125525205E-6	info:[7, 1, 15, 141, 26, 1]state_6
				]
			]
		]
	]
]

output:	answer(state(next_to_2(largest_one(population_1(state(all))))))
predic:	answer(state(next_to_2(largest_one(population_1(state(all))))))
228:	false
=INPUT=
where are mountains ?
=OUTPUT=
ROOT	#children:4[20,1000]4	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	0.0	null
	[
		child-0:*n:State -> ({ loc_1 ( *n:Place ) })	#children:2[18,167]2	0.0	null
		[
			child-0:*n:Place -> ({ mountain ( all ) })	#children:1[17,0]1	0.0	null
		]
	]
]

=PREDICTION=
ROOT	#children:3[20,1000]3	3.1742274669640377E-10	info:[5, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:2[19,135]2	1.4181488656819392E-10	info:[4, 4, 19, 135, 27, 1]where_0 are_1 mountains_2 ?_3
	[
		child-0:*n:State -> ({ state ( all ) })	#children:1[18,141]1	1.079800432349688E-4	info:[1, 1, 18, 141, 26, 1]where_0
	]
]

output:	answer(loc_1(mountain(all)))
predic:	answer(state(all))
244:	true
=INPUT=
which river runs through most states ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:5[19,128]5	0.0	null
	[
		child-0:*n:River -> ({ most ( *n:River ) })	#children:4[18,202]4	0.0	null
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:3[17,129]3	0.0	null
			[
				child-0:*n:River -> ({ traverse_2 ( *n:State ) })	#children:2[16,163]2	0.0	null
				[
					child-0:*n:State -> ({ state ( all ) })	#children:1[15,141]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	792672.500438783	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:5[19,128]5	344472.93632697745	info:[7, 7, 19, 128, 27, 1]which_0 river_1 runs_2 through_3 most_4 states_5 ?_6
	[
		child-0:*n:River -> ({ most ( *n:River ) })	#children:4[18,202]4	1394.0194566474738	info:[7, 6, 18, 202, 27, 1]river_1 runs_2 through_3 most_4 states_5 ?_6
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:3[17,129]3	1540.409458090719	info:[4, 3, 17, 129, 27, 1]river_1 runs_2 through_3
			[
				child-0:*n:River -> ({ traverse_2 ( *n:State ) })	#children:2[16,163]2	6.086360226732306	info:[4, 2, 16, 163, 27, 1]runs_2 through_3
				[
					child-0:*n:State -> ({ state ( all ) })	#children:1[15,141]1	0.052902426057452816	info:[3, 1, 15, 141, 26, 1]runs_2
				]
			]
		]
	]
]

output:	answer(most(river(traverse_2(state(all)))))
predic:	answer(most(river(traverse_2(state(all)))))
260:	true
=INPUT=
which state has the lowest population density ?
=OUTPUT=
ROOT	#children:4[20,1000]4	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	0.0	null
	[
		child-0:*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })	#children:2[18,194]2	0.0	null
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	0.0	null
		]
	]
]

=PREDICTION=
ROOT	#children:4[20,1000]4	1006.2260101723132	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	449.5513600700926	info:[8, 8, 19, 135, 27, 1]which_0 state_1 has_2 the_3 lowest_4 population_5 density_6 ?_7
	[
		child-0:*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })	#children:2[18,194]2	0.3348949398758358	info:[8, 7, 18, 194, 27, 1]state_1 has_2 the_3 lowest_4 population_5 density_6 ?_7
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	3.003886394420056	info:[2, 1, 17, 141, 26, 1]state_1
		]
	]
]

output:	answer(smallest_one(density_1(state(all))))
predic:	answer(smallest_one(density_1(state(all))))
276:	true
=INPUT=
which states does the longest river run through ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	0.0	null
		[
			child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:3[17,181]3	0.0	null
			[
				child-0:*n:River -> ({ longest ( *n:River ) })	#children:2[16,142]2	0.0	null
				[
					child-0:*n:River -> ({ river ( all ) })	#children:1[15,171]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	2.0938471783366238E12	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	9.354676159076453E11	info:[9, 9, 19, 135, 27, 1]which_0 states_1 does_2 the_3 longest_4 river_5 run_6 through_7 ?_8
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	5.495441898162743E12	info:[8, 8, 18, 126, 27, 1]which_0 states_1 does_2 the_3 longest_4 river_5 run_6 through_7
		[
			child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:3[17,181]3	2812934.119990298	info:[8, 6, 17, 181, 27, 1]does_2 the_3 longest_4 river_5 run_6 through_7
			[
				child-0:*n:River -> ({ longest ( *n:River ) })	#children:2[16,142]2	34.54047098794447	info:[6, 3, 16, 142, 27, 1]the_3 longest_4 river_5
				[
					child-0:*n:River -> ({ river ( all ) })	#children:1[15,171]1	0.0010020942909158188	info:[6, 1, 15, 171, 26, 1]river_5
				]
			]
		]
	]
]

output:	answer(state(traverse_1(longest(river(all)))))
predic:	answer(state(traverse_1(longest(river(all)))))
5:	true
=INPUT=
how high is mount mckinley ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ elevation_1 ( *n:Place ) })	#children:3[18,148]3	0.0	null
		[
			child-0:*n:Place -> ({ placeid ( *n:PlaceName ) })	#children:2[17,149]2	0.0	null
			[
				child-0:*n:PlaceName -> ({ ' mount mckinley ' })	#children:1[16,98]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	1.7848750585082487	info:[7, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	9.914673166225716	info:[6, 6, 19, 144, 27, 1]how_0 high_1 is_2 mount_3 mckinley_4 ?_5
	[
		child-0:*n:Num -> ({ elevation_1 ( *n:Place ) })	#children:3[18,148]3	0.014860073525562761	info:[6, 5, 18, 148, 27, 1]high_1 is_2 mount_3 mckinley_4 ?_5
		[
			child-0:*n:Place -> ({ placeid ( *n:PlaceName ) })	#children:2[17,149]2	0.0010877749373137864	info:[6, 4, 17, 149, 27, 1]is_2 mount_3 mckinley_4 ?_5
			[
				child-0:*n:PlaceName -> ({ ' mount mckinley ' })	#children:1[16,98]1	25.13727960597382	info:[5, 2, 16, 98, 26, 1]mount_3 mckinley_4
			]
		]
	]
]

output:	answer(elevation_1(placeid('mountmckinley')))
predic:	answer(elevation_1(placeid('mountmckinley')))
21:	true
=INPUT=
how many people live in houston ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:3[18,159]3	0.0	null
		[
			child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[17,147]2	0.0	null
			[
				child-0:*n:CityName -> ({ ' houston ' })	#children:1[16,108]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	2.9791733260920153E9	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	1.6548794097905409E10	info:[7, 7, 19, 144, 27, 1]how_0 many_1 people_2 live_3 in_4 houston_5 ?_6
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:3[18,159]3	217.07811521171763	info:[7, 5, 18, 159, 27, 1]people_2 live_3 in_4 houston_5 ?_6
		[
			child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[17,147]2	72102.42018085228	info:[6, 1, 17, 147, 27, 1]houston_5
			[
				child-0:*n:CityName -> ({ ' houston ' })	#children:1[16,108]1	1.0	info:[6, 1, 16, 108, 26, 1]houston_5
			]
		]
	]
]

output:	answer(population_1(cityid('houston',_)))
predic:	answer(population_1(cityid('houston',_)))
37:	true
=INPUT=
how many states border iowa ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	0.0	null
	[
		child-0:*n:Num -> ({ count ( *n:State ) })	#children:5[18,176]5	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	0.0	null
			[
				child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[16,127]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' iowa ' })	#children:1[14,17]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	1.4144234011078076E12	info:[7, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	7.85687809003605E12	info:[6, 6, 19, 144, 27, 1]how_0 many_1 states_2 border_3 iowa_4 ?_5
	[
		child-0:*n:Num -> ({ count ( *n:State ) })	#children:5[18,176]5	8.604220915619739E11	info:[5, 3, 18, 176, 27, 1]states_2 border_3 iowa_4
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	1.0706780184728831E9	info:[5, 3, 17, 126, 27, 1]states_2 border_3 iowa_4
			[
				child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[16,127]3	8.038512512165947E8	info:[5, 2, 16, 127, 27, 1]border_3 iowa_4
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[5, 1, 15, 123, 27, 1]iowa_4
					[
						child-0:*n:StateName -> ({ ' iowa ' })	#children:1[14,17]1	1.0	info:[5, 1, 14, 17, 26, 1]iowa_4
					]
				]
			]
		]
	]
]

output:	answer(count(state(next_to_2(stateid('iowa')))))
predic:	answer(count(state(next_to_2(stateid('iowa')))))
53:	true
=INPUT=
through which states does the longest river in texas run ?
=OUTPUT=
ROOT	#children:9[20,1000]9	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:8[19,135]8	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:7[18,126]7	0.0	null
		[
			child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:6[17,181]6	0.0	null
			[
				child-0:*n:River -> ({ longest ( *n:River ) })	#children:5[16,142]5	0.0	null
				[
					child-0:*n:River -> ({ river ( *n:River ) })	#children:4[15,129]4	0.0	null
					[
						child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:3[14,130]3	0.0	null
						[
							child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[13,123]2	0.0	null
							[
								child-0:*n:StateName -> ({ ' texas ' })	#children:1[12,92]1	0.0	null
							]
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:9[20,1000]9	5.240913351943316E23	info:[12, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:8[19,135]8	2.341481636886082E23	info:[11, 11, 19, 135, 27, 1]through_0 which_1 states_2 does_3 the_4 longest_5 river_6 in_7 texas_8 run_9 ?_10
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:7[18,126]7	2.3898691149842277E24	info:[10, 10, 18, 126, 27, 1]through_0 which_1 states_2 does_3 the_4 longest_5 river_6 in_7 texas_8 run_9
		[
			child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:6[17,181]6	4.4171517169882832E16	info:[10, 7, 17, 181, 27, 1]does_3 the_4 longest_5 river_6 in_7 texas_8 run_9
			[
				child-0:*n:River -> ({ longest ( *n:River ) })	#children:5[16,142]5	5.892311160718196E14	info:[9, 5, 16, 142, 27, 1]the_4 longest_5 river_6 in_7 texas_8
				[
					child-0:*n:River -> ({ river ( *n:River ) })	#children:4[15,129]4	1.2813571569919355E10	info:[9, 3, 15, 129, 27, 1]river_6 in_7 texas_8
					[
						child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:3[14,130]3	1.8411271790828302E9	info:[9, 2, 14, 130, 27, 1]in_7 texas_8
						[
							child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[13,123]2	3.273583459538019E9	info:[9, 1, 13, 123, 27, 1]texas_8
							[
								child-0:*n:StateName -> ({ ' texas ' })	#children:1[12,92]1	1.0	info:[9, 1, 12, 92, 26, 1]texas_8
							]
						]
					]
				]
			]
		]
	]
]

output:	answer(state(traverse_1(longest(river(loc_2(stateid('texas')))))))
predic:	answer(state(traverse_1(longest(river(loc_2(stateid('texas')))))))
69:	true
=INPUT=
what is the population of mississippi ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:3[18,158]3	0.0	null
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	0.0	null
			[
				child-0:*n:StateName -> ({ ' mississippi ' })	#children:1[16,83]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	7.991734396712123E8	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	4.439270647935857E9	info:[7, 7, 19, 144, 27, 1]what_0 is_1 the_2 population_3 of_4 mississippi_5 ?_6
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:3[18,158]3	1.8960768277771576E16	info:[6, 6, 18, 158, 27, 1]what_0 is_1 the_2 population_3 of_4 mississippi_5
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	3.273583459538019E9	info:[6, 1, 17, 123, 27, 1]mississippi_5
			[
				child-0:*n:StateName -> ({ ' mississippi ' })	#children:1[16,83]1	1.0	info:[6, 1, 16, 83, 26, 1]mississippi_5
			]
		]
	]
]

output:	answer(population_1(stateid('mississippi')))
predic:	answer(population_1(stateid('mississippi')))
85:	true
=INPUT=
what is the biggest city in louisiana ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	0.0	null
	[
		child-0:*n:City -> ({ largest ( *n:City ) })	#children:5[18,150]5	0.0	null
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	0.0	null
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[16,122]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' louisiana ' })	#children:1[14,56]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	1.6592001925467188E16	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	1.4095636051274696E16	info:[8, 8, 19, 120, 27, 1]what_0 is_1 the_2 biggest_3 city_4 in_5 louisiana_6 ?_7
	[
		child-0:*n:City -> ({ largest ( *n:City ) })	#children:5[18,150]5	1.602673365115345E12	info:[8, 5, 18, 150, 27, 1]biggest_3 city_4 in_5 louisiana_6 ?_7
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	1.988054111863073E8	info:[8, 4, 17, 121, 27, 1]city_4 in_5 louisiana_6 ?_7
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[16,122]3	32176.467456779905	info:[8, 3, 16, 122, 27, 1]in_5 louisiana_6 ?_7
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[7, 1, 15, 123, 27, 1]louisiana_6
					[
						child-0:*n:StateName -> ({ ' louisiana ' })	#children:1[14,56]1	1.0	info:[7, 1, 14, 56, 26, 1]louisiana_6
					]
				]
			]
		]
	]
]

output:	answer(largest(city(loc_2(stateid('louisiana')))))
predic:	answer(largest(city(loc_2(stateid('louisiana')))))
101:	true
=INPUT=
what is the capital of the state with the most inhabitants ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:5[19,120]5	0.0	null
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:4[18,131]4	0.0	null
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[17,122]3	0.0	null
			[
				child-0:*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })	#children:2[16,169]2	0.0	null
				[
					child-0:*n:State -> ({ state ( all ) })	#children:1[15,141]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	0.1331676357833581	info:[13, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:5[19,120]5	0.11313176892354225	info:[12, 12, 19, 120, 27, 1]what_0 is_1 the_2 capital_3 of_4 the_5 state_6 with_7 the_8 most_9 inhabitants_10 ?_11
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:4[18,131]4	1.4926194823259586E-4	info:[12, 9, 18, 131, 27, 1]capital_3 of_4 the_5 state_6 with_7 the_8 most_9 inhabitants_10 ?_11
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[17,122]3	1.2146439890243522E-8	info:[12, 8, 17, 122, 27, 1]of_4 the_5 state_6 with_7 the_8 most_9 inhabitants_10 ?_11
			[
				child-0:*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })	#children:2[16,169]2	3.844092542041015E-6	info:[11, 5, 16, 169, 27, 1]state_6 with_7 the_8 most_9 inhabitants_10
				[
					child-0:*n:State -> ({ state ( all ) })	#children:1[15,141]1	0.044366595542175494	info:[7, 1, 15, 141, 26, 1]state_6
				]
			]
		]
	]
]

output:	answer(capital(loc_2(largest_one(population_1(state(all))))))
predic:	answer(capital(loc_2(largest_one(population_1(state(all))))))
117:	true
=INPUT=
what is the highest point in the usa ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	0.0	null
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	0.0	null
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	0.0	null
			[
				child-0:*n:Place -> ({ loc_2 ( *n:Country ) })	#children:3[16,183]3	0.0	null
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	0.0	null
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	5.398779884171871E8	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	7.473634081160626E8	info:[9, 9, 19, 124, 27, 1]what_0 is_1 the_2 highest_3 point_4 in_5 the_6 usa_7 ?_8
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	1.0686108544038396E8	info:[9, 8, 18, 132, 27, 1]is_1 the_2 highest_3 point_4 in_5 the_6 usa_7 ?_8
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	323.8522504951895	info:[9, 5, 17, 133, 27, 1]point_4 in_5 the_6 usa_7 ?_8
			[
				child-0:*n:Place -> ({ loc_2 ( *n:Country ) })	#children:3[16,183]3	0.11515161049530315	info:[9, 4, 16, 183, 27, 1]in_5 the_6 usa_7 ?_8
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	8.074868111621592	info:[8, 1, 15, 137, 27, 1]usa_7
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	1.0	info:[8, 1, 14, 34, 26, 1]usa_7
					]
				]
			]
		]
	]
]

output:	answer(highest(place(loc_2(countryid('usa')))))
predic:	answer(highest(place(loc_2(countryid('usa')))))
133:	true
=INPUT=
what is the length of the river that flows through the most states ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	0.0	null
	[
		child-0:*n:Num -> ({ len ( *n:River ) })	#children:5[18,151]5	0.0	null
		[
			child-0:*n:River -> ({ most ( *n:River ) })	#children:4[17,202]4	0.0	null
			[
				child-0:*n:River -> ({ river ( *n:River ) })	#children:3[16,129]3	0.0	null
				[
					child-0:*n:River -> ({ traverse_2 ( *n:State ) })	#children:2[15,163]2	0.0	null
					[
						child-0:*n:State -> ({ state ( all ) })	#children:1[14,141]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	1.096624146296696E12	info:[15, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	6.091558030851812E12	info:[14, 14, 19, 144, 27, 1]what_0 is_1 the_2 length_3 of_4 the_5 river_6 that_7 flows_8 through_9 the_10 most_11 states_12 ?_13
	[
		child-0:*n:Num -> ({ len ( *n:River ) })	#children:5[18,151]5	2.7386660136193145E15	info:[14, 13, 18, 151, 27, 1]is_1 the_2 length_3 of_4 the_5 river_6 that_7 flows_8 through_9 the_10 most_11 states_12 ?_13
		[
			child-0:*n:River -> ({ most ( *n:River ) })	#children:4[17,202]4	3.8974357509564805E8	info:[13, 7, 17, 202, 27, 1]river_6 that_7 flows_8 through_9 the_10 most_11 states_12
			[
				child-0:*n:River -> ({ river ( *n:River ) })	#children:3[16,129]3	311.8333674571099	info:[10, 4, 16, 129, 27, 1]river_6 that_7 flows_8 through_9
				[
					child-0:*n:River -> ({ traverse_2 ( *n:State ) })	#children:2[15,163]2	14.42065710760065	info:[10, 3, 15, 163, 27, 1]that_7 flows_8 through_9
					[
						child-0:*n:State -> ({ state ( all ) })	#children:1[14,141]1	0.005333899419646457	info:[9, 1, 14, 141, 26, 1]flows_8
					]
				]
			]
		]
	]
]

output:	answer(len(most(river(traverse_2(state(all))))))
predic:	answer(len(most(river(traverse_2(state(all))))))
149:	true
=INPUT=
what is the most populous city ?
=OUTPUT=
ROOT	#children:4[20,1000]4	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:3[19,120]3	0.0	null
	[
		child-0:*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })	#children:2[18,188]2	0.0	null
		[
			child-0:*n:City -> ({ city ( all ) })	#children:1[17,160]1	0.0	null
		]
	]
]

=PREDICTION=
ROOT	#children:4[20,1000]4	1.534865633024337E-4	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:3[19,120]3	1.303935923338631E-4	info:[7, 7, 19, 120, 27, 1]what_0 is_1 the_2 most_3 populous_4 city_5 ?_6
	[
		child-0:*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })	#children:2[18,188]2	1.7493450073754114E-6	info:[7, 4, 18, 188, 27, 1]most_3 populous_4 city_5 ?_6
		[
			child-0:*n:City -> ({ city ( all ) })	#children:1[17,160]1	1.1062812637211526E-4	info:[6, 1, 17, 160, 26, 1]city_5
		]
	]
]

output:	answer(largest_one(population_1(city(all))))
predic:	answer(largest_one(population_1(city(all))))
165:	false
=INPUT=
what is the population of the smallest state ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ smallest ( *n:Num ) })	#children:3[18,0]3	0.0	null
		[
			child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:2[17,158]2	0.0	null
			[
				child-0:*n:State -> ({ state ( all ) })	#children:1[16,141]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	0.09291168955223433	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.5161084137744283	info:[9, 9, 19, 144, 27, 1]what_0 is_1 the_2 population_3 of_4 the_5 smallest_6 state_7 ?_8
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:3[18,158]3	69.92786609256694	info:[9, 9, 18, 158, 27, 1]what_0 is_1 the_2 population_3 of_4 the_5 smallest_6 state_7 ?_8
		[
			child-0:*n:State -> ({ smallest ( *n:State ) })	#children:2[17,165]2	2.489539775243449E-7	info:[9, 3, 17, 165, 27, 1]smallest_6 state_7 ?_8
			[
				child-0:*n:State -> ({ state ( all ) })	#children:1[16,141]1	4.774503173171653E-6	info:[8, 1, 16, 141, 26, 1]state_7
			]
		]
	]
]

output:	answer(smallest(population_1(state(all))))
predic:	answer(population_1(smallest(state(all))))
181:	true
=INPUT=
what river flows through the most states ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:5[19,128]5	0.0	null
	[
		child-0:*n:River -> ({ most ( *n:River ) })	#children:4[18,202]4	0.0	null
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:3[17,129]3	0.0	null
			[
				child-0:*n:River -> ({ traverse_2 ( *n:State ) })	#children:2[16,163]2	0.0	null
				[
					child-0:*n:State -> ({ state ( all ) })	#children:1[15,141]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	1579.872530626836	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:5[19,128]5	686.5676926424273	info:[8, 8, 19, 128, 27, 1]what_0 river_1 flows_2 through_3 the_4 most_5 states_6 ?_7
	[
		child-0:*n:River -> ({ most ( *n:River ) })	#children:4[18,202]4	27.433317109121536	info:[8, 7, 18, 202, 27, 1]river_1 flows_2 through_3 the_4 most_5 states_6 ?_7
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:3[17,129]3	0.1131528518881656	info:[4, 3, 17, 129, 27, 1]river_1 flows_2 through_3
			[
				child-0:*n:River -> ({ traverse_2 ( *n:State ) })	#children:2[16,163]2	0.17001614347231975	info:[4, 2, 16, 163, 27, 1]flows_2 through_3
				[
					child-0:*n:State -> ({ state ( all ) })	#children:1[15,141]1	0.0012617996429947758	info:[3, 1, 15, 141, 26, 1]flows_2
				]
			]
		]
	]
]

output:	answer(most(river(traverse_2(state(all)))))
predic:	answer(most(river(traverse_2(state(all)))))
197:	false
=INPUT=
what state has the most major cities ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	0.0	null
	[
		child-0:*n:State -> ({ most ( *n:State ) })	#children:5[18,179]5	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	0.0	null
			[
				child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:3[16,172]3	0.0	null
				[
					child-0:*n:City -> ({ major ( *n:City ) })	#children:2[15,156]2	0.0	null
					[
						child-0:*n:City -> ({ city ( all ) })	#children:1[14,160]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	3.266200087527654E-4	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	1.45923945193751E-4	info:[8, 8, 19, 135, 27, 1]what_0 state_1 has_2 the_3 most_4 major_5 cities_6 ?_7
	[
		child-0:*n:State -> ({ most ( *n:State ) })	#children:4[18,179]4	0.046646901546286805	info:[7, 7, 18, 179, 27, 1]what_0 state_1 has_2 the_3 most_4 major_5 cities_6
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:3[17,126]3	0.03514437401031152	info:[4, 3, 17, 126, 27, 1]state_1 has_2 the_3
			[
				child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:2[16,172]2	8.627050791785631E-4	info:[4, 2, 16, 172, 27, 1]has_2 the_3
				[
					child-0:*n:City -> ({ city ( all ) })	#children:1[15,160]1	0.023885228644923158	info:[4, 1, 15, 160, 26, 1]the_3
				]
			]
		]
	]
]

output:	answer(most(state(loc_1(major(city(all))))))
predic:	answer(most(state(loc_1(city(all)))))
213:	true
=INPUT=
what states border the state that borders the most states ?
=OUTPUT=
ROOT	#children:8[20,1000]8	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:7[19,135]7	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:6[18,126]6	0.0	null
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:5[17,127]5	0.0	null
			[
				child-0:*n:State -> ({ most ( *n:State ) })	#children:4[16,179]4	0.0	null
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:3[15,126]3	0.0	null
					[
						child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:2[14,127]2	0.0	null
						[
							child-0:*n:State -> ({ state ( all ) })	#children:1[13,141]1	0.0	null
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:8[20,1000]8	1.3399150984741344E9	info:[12, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:7[19,135]7	5.986335562865715E8	info:[11, 11, 19, 135, 27, 1]what_0 states_1 border_2 the_3 state_4 that_5 borders_6 the_7 most_8 states_9 ?_10
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:6[18,126]6	7.460376430654709E8	info:[10, 10, 18, 126, 27, 1]what_0 states_1 border_2 the_3 state_4 that_5 borders_6 the_7 most_8 states_9
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:5[17,127]5	5.414516815459218E7	info:[10, 8, 17, 127, 27, 1]border_2 the_3 state_4 that_5 borders_6 the_7 most_8 states_9
			[
				child-0:*n:State -> ({ most ( *n:State ) })	#children:4[16,179]4	5107824.892689618	info:[10, 7, 16, 179, 27, 1]the_3 state_4 that_5 borders_6 the_7 most_8 states_9
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:3[15,126]3	736446.8295383671	info:[8, 4, 15, 126, 27, 1]state_4 that_5 borders_6 the_7
					[
						child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:2[14,127]2	30.210379202867184	info:[8, 2, 14, 127, 27, 1]borders_6 the_7
						[
							child-0:*n:State -> ({ state ( all ) })	#children:1[13,141]1	0.0016054145812558192	info:[8, 1, 13, 141, 26, 1]the_7
						]
					]
				]
			]
		]
	]
]

output:	answer(state(next_to_2(most(state(next_to_2(state(all)))))))
predic:	answer(state(next_to_2(most(state(next_to_2(state(all)))))))
229:	true
=INPUT=
where is dallas ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:4[19,135]4	0.0	null
	[
		child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:3[18,172]3	0.0	null
		[
			child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[17,147]2	0.0	null
			[
				child-0:*n:CityName -> ({ ' dallas ' })	#children:1[16,36]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	1.9477536914743234	info:[5, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:4[19,135]4	0.8701974628283357	info:[4, 4, 19, 135, 27, 1]where_0 is_1 dallas_2 ?_3
	[
		child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:3[18,172]3	0.029972830527640434	info:[4, 3, 18, 172, 27, 1]is_1 dallas_2 ?_3
		[
			child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[17,147]2	72102.42018085228	info:[3, 1, 17, 147, 27, 1]dallas_2
			[
				child-0:*n:CityName -> ({ ' dallas ' })	#children:1[16,36]1	1.0	info:[3, 1, 16, 36, 26, 1]dallas_2
			]
		]
	]
]

output:	answer(loc_1(cityid('dallas',_)))
predic:	answer(loc_1(cityid('dallas',_)))
245:	true
=INPUT=
which river traverses most states ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:5[19,128]5	0.0	null
	[
		child-0:*n:River -> ({ most ( *n:River ) })	#children:4[18,202]4	0.0	null
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:3[17,129]3	0.0	null
			[
				child-0:*n:River -> ({ traverse_2 ( *n:State ) })	#children:2[16,163]2	0.0	null
				[
					child-0:*n:State -> ({ state ( all ) })	#children:1[15,141]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	90.67491783470625	info:[7, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:5[19,128]5	39.40474178231055	info:[6, 6, 19, 128, 27, 1]which_0 river_1 traverses_2 most_3 states_4 ?_5
	[
		child-0:*n:River -> ({ most ( *n:River ) })	#children:4[18,202]4	0.1594638386237968	info:[6, 5, 18, 202, 27, 1]river_1 traverses_2 most_3 states_4 ?_5
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:3[17,129]3	0.05562678100571856	info:[3, 2, 17, 129, 27, 1]river_1 traverses_2
			[
				child-0:*n:River -> ({ traverse_2 ( *n:State ) })	#children:2[16,163]2	1.034950125555593E-4	info:[3, 1, 16, 163, 27, 1]traverses_2
				[
					child-0:*n:State -> ({ state ( all ) })	#children:1[15,141]1	0.008246371768805402	info:[3, 1, 15, 141, 26, 1]traverses_2
				]
			]
		]
	]
]

output:	answer(most(river(traverse_2(state(all)))))
predic:	answer(most(river(traverse_2(state(all)))))
261:	false
=INPUT=
which state has the most major cities ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	0.0	null
	[
		child-0:*n:State -> ({ most ( *n:State ) })	#children:5[18,179]5	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	0.0	null
			[
				child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:3[16,172]3	0.0	null
				[
					child-0:*n:City -> ({ major ( *n:City ) })	#children:2[15,156]2	0.0	null
					[
						child-0:*n:City -> ({ city ( all ) })	#children:1[14,160]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	0.813737776253143	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.3635534366601875	info:[8, 8, 19, 135, 27, 1]which_0 state_1 has_2 the_3 most_4 major_5 cities_6 ?_7
	[
		child-0:*n:State -> ({ most ( *n:State ) })	#children:4[18,179]4	116.21561728052977	info:[7, 7, 18, 179, 27, 1]which_0 state_1 has_2 the_3 most_4 major_5 cities_6
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:3[17,126]3	0.8655079900570529	info:[4, 3, 17, 126, 27, 1]state_1 has_2 the_3
			[
				child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:2[16,172]2	8.627050791785631E-4	info:[4, 2, 16, 172, 27, 1]has_2 the_3
				[
					child-0:*n:City -> ({ city ( all ) })	#children:1[15,160]1	0.023885228644923158	info:[4, 1, 15, 160, 26, 1]the_3
				]
			]
		]
	]
]

output:	answer(most(state(loc_1(major(city(all))))))
predic:	answer(most(state(loc_1(city(all)))))
277:	true
=INPUT=
which states does the mississippi run through ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	0.0	null
		[
			child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:3[17,181]3	0.0	null
			[
				child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[16,152]2	0.0	null
				[
					child-0:*n:RiverName -> ({ ' mississippi ' })	#children:1[15,84]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	2.2618653264235085E21	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	1.0105330447728551E21	info:[8, 8, 19, 135, 27, 1]which_0 states_1 does_2 the_3 mississippi_4 run_5 through_6 ?_7
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	5.936416760225948E21	info:[7, 7, 18, 126, 27, 1]which_0 states_1 does_2 the_3 mississippi_4 run_5 through_6
		[
			child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:3[17,181]3	3.0386545003605045E15	info:[7, 5, 17, 181, 27, 1]does_2 the_3 mississippi_4 run_5 through_6
			[
				child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[16,152]2	1.9660190308724983E10	info:[5, 2, 16, 152, 27, 1]the_3 mississippi_4
				[
					child-0:*n:RiverName -> ({ ' mississippi ' })	#children:1[15,84]1	1.0	info:[5, 1, 15, 84, 26, 1]mississippi_4
				]
			]
		]
	]
]

output:	answer(state(traverse_1(riverid('mississippi'))))
predic:	answer(state(traverse_1(riverid('mississippi'))))
6:	true
=INPUT=
how high is the highest point in america ?
=OUTPUT=
ROOT	#children:8[20,1000]8	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:7[19,144]7	0.0	null
	[
		child-0:*n:Num -> ({ elevation_1 ( *n:Place ) })	#children:6[18,148]6	0.0	null
		[
			child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[17,132]5	0.0	null
			[
				child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[16,133]4	0.0	null
				[
					child-0:*n:Place -> ({ loc_2 ( *n:Country ) })	#children:3[15,183]3	0.0	null
					[
						child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[14,137]2	0.0	null
						[
							child-0:*n:CountryName -> ({ ' usa ' })	#children:1[13,34]1	0.0	null
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:8[20,1000]8	4.3502042549201355E9	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:7[19,144]7	2.4164634487024075E10	info:[9, 9, 19, 144, 27, 1]how_0 high_1 is_2 the_3 highest_4 point_5 in_6 america_7 ?_8
	[
		child-0:*n:Num -> ({ elevation_1 ( *n:Place ) })	#children:6[18,148]6	3.621786005198423E7	info:[9, 8, 18, 148, 27, 1]high_1 is_2 the_3 highest_4 point_5 in_6 america_7 ?_8
		[
			child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[17,132]5	7129625.2441784395	info:[9, 7, 17, 132, 27, 1]is_2 the_3 highest_4 point_5 in_6 america_7 ?_8
			[
				child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[16,133]4	193.11834803263474	info:[9, 4, 16, 133, 27, 1]point_5 in_6 america_7 ?_8
				[
					child-0:*n:Place -> ({ loc_2 ( *n:Country ) })	#children:3[15,183]3	0.06866677244992823	info:[9, 3, 15, 183, 27, 1]in_6 america_7 ?_8
					[
						child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[14,137]2	8.074868111621592	info:[8, 1, 14, 137, 27, 1]america_7
						[
							child-0:*n:CountryName -> ({ ' usa ' })	#children:1[13,34]1	1.0	info:[8, 1, 13, 34, 26, 1]america_7
						]
					]
				]
			]
		]
	]
]

output:	answer(elevation_1(highest(place(loc_2(countryid('usa'))))))
predic:	answer(elevation_1(highest(place(loc_2(countryid('usa'))))))
22:	true
=INPUT=
how many people live in minneapolis minnesota ?
=OUTPUT=
ROOT	#children:6[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:5[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:4[18,159]3	0.0	null
		[
			child-0:*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })	#children:3[17,164]2	0.0	null
			[
				child-0:*n:CityName -> ({ ' minneapolis ' })	#children:1[16,48]1	0.0	null
			]
			[
				child-0:*n:StateAbbrev -> ({ ' mn ' })	#children:1[16,11]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]5	1.2937698615851887E21	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:5[19,144]4	7.186668483479723E21	info:[8, 8, 19, 144, 27, 1]how_0 many_1 people_2 live_3 in_4 minneapolis_5 minnesota_6 ?_7
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:4[18,159]3	9.42708235908679E13	info:[8, 6, 18, 159, 27, 1]people_2 live_3 in_4 minneapolis_5 minnesota_6 ?_7
		[
			child-0:*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })	#children:3[17,164]2	4.950616253464773E10	info:[8, 3, 17, 164, 28, 1]minneapolis_5 minnesota_6 ?_7
			[
				child-0:*n:CityName -> ({ ' minneapolis ' })	#children:1[16,48]1	1.0	info:[6, 1, 16, 48, 26, 1]minneapolis_5
			]
			[
				child-0:*n:StateAbbrev -> ({ ' mn ' })	#children:1[16,11]1	1.0	info:[7, 1, 16, 11, 26, 1]minnesota_6
			]
		]
	]
]

output:	answer(population_1(cityid('minneapolis','mn')))
predic:	answer(population_1(cityid('minneapolis','mn')))
38:	true
=INPUT=
how many states border the state with the largest population ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	0.0	null
	[
		child-0:*n:Num -> ({ count ( *n:State ) })	#children:5[18,176]5	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	0.0	null
			[
				child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[16,127]3	0.0	null
				[
					child-0:*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })	#children:2[15,169]2	0.0	null
					[
						child-0:*n:State -> ({ state ( all ) })	#children:1[14,141]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	13778.148168691036	info:[12, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	76535.23717372945	info:[11, 11, 19, 144, 27, 1]how_0 many_1 states_2 border_3 the_4 state_5 with_6 the_7 largest_8 population_9 ?_10
	[
		child-0:*n:Num -> ({ count ( *n:State ) })	#children:5[18,176]5	4.800634807383849E-6	info:[11, 9, 18, 176, 27, 1]states_2 border_3 the_4 state_5 with_6 the_7 largest_8 population_9 ?_10
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	5.9737356971516875E-9	info:[11, 9, 17, 126, 27, 1]states_2 border_3 the_4 state_5 with_6 the_7 largest_8 population_9 ?_10
			[
				child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[16,127]3	4.48500373757719E-9	info:[11, 8, 16, 127, 27, 1]border_3 the_4 state_5 with_6 the_7 largest_8 population_9 ?_10
				[
					child-0:*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })	#children:2[15,169]2	4.675352519424885E-9	info:[11, 7, 15, 169, 27, 1]the_4 state_5 with_6 the_7 largest_8 population_9 ?_10
					[
						child-0:*n:State -> ({ state ( all ) })	#children:1[14,141]1	0.044366595542175494	info:[6, 1, 14, 141, 26, 1]state_5
					]
				]
			]
		]
	]
]

output:	answer(count(state(next_to_2(largest_one(population_1(state(all)))))))
predic:	answer(count(state(next_to_2(largest_one(population_1(state(all)))))))
54:	true
=INPUT=
what are all the rivers in texas ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:5[19,128]5	0.0	null
	[
		child-0:*n:River -> ({ river ( *n:River ) })	#children:4[18,129]4	0.0	null
		[
			child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:3[17,130]3	0.0	null
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	0.0	null
				[
					child-0:*n:StateName -> ({ ' texas ' })	#children:1[15,92]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	7.053425321113441E10	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:5[19,128]5	3.0652181451760212E10	info:[8, 8, 19, 128, 27, 1]what_0 are_1 all_2 the_3 rivers_4 in_5 texas_6 ?_7
	[
		child-0:*n:River -> ({ river ( *n:River ) })	#children:4[18,129]4	1015250.446362465	info:[8, 4, 18, 129, 27, 1]rivers_4 in_5 texas_6 ?_7
		[
			child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:3[17,130]3	504676.8113171724	info:[8, 3, 17, 130, 27, 1]in_5 texas_6 ?_7
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	3.273583459538019E9	info:[7, 1, 16, 123, 27, 1]texas_6
				[
					child-0:*n:StateName -> ({ ' texas ' })	#children:1[15,92]1	1.0	info:[7, 1, 15, 92, 26, 1]texas_6
				]
			]
		]
	]
]

output:	answer(river(loc_2(stateid('texas'))))
predic:	answer(river(loc_2(stateid('texas'))))
70:	true
=INPUT=
what are the populations of states through which the mississippi river runs ?
=OUTPUT=
ROOT	#children:8[20,1000]8	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:7[19,144]7	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:6[18,158]6	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:5[17,126]5	0.0	null
			[
				child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:4[16,181]4	0.0	null
				[
					child-0:*n:River -> ({ river ( *n:River ) })	#children:3[15,129]3	0.0	null
					[
						child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[14,152]2	0.0	null
						[
							child-0:*n:RiverName -> ({ ' mississippi ' })	#children:1[13,84]1	0.0	null
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:8[20,1000]8	1.6032220689302062E25	info:[14, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:7[19,144]7	8.905622133354363E25	info:[13, 13, 19, 144, 27, 1]what_0 are_1 the_2 populations_3 of_4 states_5 through_6 which_7 the_8 mississippi_9 river_10 runs_11 ?_12
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:6[18,158]6	5.897930773602904E31	info:[12, 12, 18, 158, 27, 1]what_0 are_1 the_2 populations_3 of_4 states_5 through_6 which_7 the_8 mississippi_9 river_10 runs_11
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:5[17,126]5	1.9434569663932405E22	info:[12, 7, 17, 126, 27, 1]states_5 through_6 which_7 the_8 mississippi_9 river_10 runs_11
			[
				child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:4[16,181]4	2.397176142981467E19	info:[12, 6, 16, 181, 27, 1]through_6 which_7 the_8 mississippi_9 river_10 runs_11
				[
					child-0:*n:River -> ({ river ( *n:River ) })	#children:3[15,129]3	1.3610470367587244E13	info:[11, 3, 15, 129, 27, 1]the_8 mississippi_9 river_10
					[
						child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[14,152]2	1.1954283726525978E11	info:[10, 2, 14, 152, 27, 1]the_8 mississippi_9
						[
							child-0:*n:RiverName -> ({ ' mississippi ' })	#children:1[13,84]1	1.0	info:[10, 1, 13, 84, 26, 1]mississippi_9
						]
					]
				]
			]
		]
	]
]

output:	answer(population_1(state(traverse_1(river(riverid('mississippi'))))))
predic:	answer(population_1(state(traverse_1(river(riverid('mississippi'))))))
86:	true
=INPUT=
what is the capital of california ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:5[19,120]5	0.0	null
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:4[18,131]4	0.0	null
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[17,122]3	0.0	null
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	0.0	null
				[
					child-0:*n:StateName -> ({ ' california ' })	#children:1[15,19]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	3.6611913090071156E14	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:5[19,120]5	3.11034319051293E14	info:[7, 7, 19, 120, 27, 1]what_0 is_1 the_2 capital_3 of_4 california_5 ?_6
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:4[18,131]4	4.1036738725592444E11	info:[7, 4, 18, 131, 27, 1]capital_3 of_4 california_5 ?_6
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[17,122]3	3.3394330311520446E7	info:[7, 3, 17, 122, 27, 1]of_4 california_5 ?_6
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	3.273583459538019E9	info:[6, 1, 16, 123, 27, 1]california_5
				[
					child-0:*n:StateName -> ({ ' california ' })	#children:1[15,19]1	1.0	info:[6, 1, 15, 19, 26, 1]california_5
				]
			]
		]
	]
]

output:	answer(capital(loc_2(stateid('california'))))
predic:	answer(capital(loc_2(stateid('california'))))
102:	true
=INPUT=
what is the combined area of all 50 states ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ sum ( *n:Num ) })	#children:3[18,192]3	0.0	null
		[
			child-0:*n:Num -> ({ area_1 ( *n:State ) })	#children:2[17,191]2	0.0	null
			[
				child-0:*n:State -> ({ state ( all ) })	#children:1[16,141]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	2.1587394234143996E-4	info:[11, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.001199142524412244	info:[10, 10, 19, 144, 27, 1]what_0 is_1 the_2 combined_3 area_4 of_5 all_6 50_7 states_8 ?_9
	[
		child-0:*n:Num -> ({ sum ( *n:Num ) })	#children:3[18,192]3	0.12806960799598288	info:[10, 8, 18, 192, 27, 1]the_2 combined_3 area_4 of_5 all_6 50_7 states_8 ?_9
		[
			child-0:*n:Num -> ({ area_1 ( *n:State ) })	#children:2[17,191]2	2.5767045887986035	info:[7, 3, 17, 191, 27, 1]area_4 of_5 all_6
			[
				child-0:*n:State -> ({ state ( all ) })	#children:1[16,141]1	0.0016782483328316236	info:[7, 1, 16, 141, 26, 1]all_6
			]
		]
	]
]

output:	answer(sum(area_1(state(all))))
predic:	answer(sum(area_1(state(all))))
118:	true
=INPUT=
what is the highest point in virginia ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	0.0	null
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	0.0	null
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	0.0	null
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[16,134]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' virginia ' })	#children:1[14,14]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	3.1207129455548595E15	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	4.320062519273378E15	info:[8, 8, 19, 124, 27, 1]what_0 is_1 the_2 highest_3 point_4 in_5 virginia_6 ?_7
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	6.177002579556061E14	info:[8, 7, 18, 132, 27, 1]is_1 the_2 highest_3 point_4 in_5 virginia_6 ?_7
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	1.87199688124058E9	info:[8, 4, 17, 133, 27, 1]point_4 in_5 virginia_6 ?_7
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[16,134]3	420540.1114263312	info:[8, 3, 16, 134, 27, 1]in_5 virginia_6 ?_7
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[7, 1, 15, 123, 27, 1]virginia_6
					[
						child-0:*n:StateName -> ({ ' virginia ' })	#children:1[14,14]1	1.0	info:[7, 1, 14, 14, 26, 1]virginia_6
					]
				]
			]
		]
	]
]

output:	answer(highest(place(loc_2(stateid('virginia')))))
predic:	answer(highest(place(loc_2(stateid('virginia')))))
134:	true
=INPUT=
what is the length of the river that runs through the most states ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	0.0	null
	[
		child-0:*n:Num -> ({ len ( *n:River ) })	#children:5[18,151]5	0.0	null
		[
			child-0:*n:River -> ({ most ( *n:River ) })	#children:4[17,202]4	0.0	null
			[
				child-0:*n:River -> ({ river ( *n:River ) })	#children:3[16,129]3	0.0	null
				[
					child-0:*n:River -> ({ traverse_2 ( *n:State ) })	#children:2[15,163]2	0.0	null
					[
						child-0:*n:State -> ({ state ( all ) })	#children:1[14,141]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	1.742608179574343E15	info:[15, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	9.679887942246896E15	info:[14, 14, 19, 144, 27, 1]what_0 is_1 the_2 length_3 of_4 the_5 river_6 that_7 runs_8 through_9 the_10 most_11 states_12 ?_13
	[
		child-0:*n:Num -> ({ len ( *n:River ) })	#children:5[18,151]5	4.3519211322965852E18	info:[14, 13, 18, 151, 27, 1]is_1 the_2 length_3 of_4 the_5 river_6 that_7 runs_8 through_9 the_10 most_11 states_12 ?_13
		[
			child-0:*n:River -> ({ most ( *n:River ) })	#children:4[17,202]4	6.193282759565247E11	info:[13, 7, 17, 202, 27, 1]river_6 that_7 runs_8 through_9 the_10 most_11 states_12
			[
				child-0:*n:River -> ({ river ( *n:River ) })	#children:3[16,129]3	495523.8115356575	info:[10, 4, 16, 129, 27, 1]river_6 that_7 runs_8 through_9
				[
					child-0:*n:River -> ({ traverse_2 ( *n:State ) })	#children:2[15,163]2	22915.376353333595	info:[10, 3, 15, 163, 27, 1]that_7 runs_8 through_9
					[
						child-0:*n:State -> ({ state ( all ) })	#children:1[14,141]1	0.18068117876760434	info:[9, 1, 14, 141, 26, 1]runs_8
					]
				]
			]
		]
	]
]

output:	answer(len(most(river(traverse_2(state(all))))))
predic:	answer(len(most(river(traverse_2(state(all))))))
150:	true
=INPUT=
what is the most populous state ?
=OUTPUT=
ROOT	#children:4[20,1000]4	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	0.0	null
	[
		child-0:*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })	#children:2[18,169]2	0.0	null
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	0.0	null
		]
	]
]

=PREDICTION=
ROOT	#children:4[20,1000]4	1.1825531189918416E-6	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	5.283289813854791E-7	info:[7, 7, 19, 135, 27, 1]what_0 is_1 the_2 most_3 populous_4 state_5 ?_6
	[
		child-0:*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })	#children:2[18,169]2	4.22717743615172E-8	info:[7, 6, 18, 169, 27, 1]is_1 the_2 most_3 populous_4 state_5 ?_6
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	4.8513837125525205E-6	info:[6, 1, 17, 141, 26, 1]state_5
		]
	]
]

output:	answer(largest_one(population_1(state(all))))
predic:	answer(largest_one(population_1(state(all))))
166:	true
=INPUT=
what is the population of the state that borders the most states ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:5[18,158]5	0.0	null
		[
			child-0:*n:State -> ({ most ( *n:State ) })	#children:4[17,179]4	0.0	null
			[
				child-0:*n:State -> ({ state ( *n:State ) })	#children:3[16,126]3	0.0	null
				[
					child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:2[15,127]2	0.0	null
					[
						child-0:*n:State -> ({ state ( all ) })	#children:1[14,141]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	4.289257676788879E10	info:[14, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	2.3826086755130573E11	info:[13, 13, 19, 144, 27, 1]what_0 is_1 the_2 population_3 of_4 the_5 state_6 that_7 borders_8 the_9 most_10 states_11 ?_12
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:5[18,158]5	4.575570603942892E16	info:[12, 12, 18, 158, 27, 1]what_0 is_1 the_2 population_3 of_4 the_5 state_6 that_7 borders_8 the_9 most_10 states_11
		[
			child-0:*n:State -> ({ most ( *n:State ) })	#children:4[17,179]4	1.7680413449402735E9	info:[12, 7, 17, 179, 27, 1]the_5 state_6 that_7 borders_8 the_9 most_10 states_11
			[
				child-0:*n:State -> ({ state ( *n:State ) })	#children:3[16,126]3	736446.8295383671	info:[10, 4, 16, 126, 27, 1]state_6 that_7 borders_8 the_9
				[
					child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:2[15,127]2	30.210379202867184	info:[10, 2, 15, 127, 27, 1]borders_8 the_9
					[
						child-0:*n:State -> ({ state ( all ) })	#children:1[14,141]1	0.0016054145812558192	info:[10, 1, 14, 141, 26, 1]the_9
					]
				]
			]
		]
	]
]

output:	answer(population_1(most(state(next_to_2(state(all))))))
predic:	answer(population_1(most(state(next_to_2(state(all))))))
182:	false
=INPUT=
what river runs through the state with the most cities ?
=OUTPUT=
ROOT	#children:8[20,1000]8	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:7[19,128]7	0.0	null
	[
		child-0:*n:River -> ({ river ( *n:River ) })	#children:6[18,129]6	0.0	null
		[
			child-0:*n:River -> ({ traverse_2 ( *n:State ) })	#children:5[17,163]5	0.0	null
			[
				child-0:*n:State -> ({ most ( *n:State ) })	#children:4[16,179]4	0.0	null
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:3[15,126]3	0.0	null
					[
						child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:2[14,172]2	0.0	null
						[
							child-0:*n:City -> ({ city ( all ) })	#children:1[13,160]1	0.0	null
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:8[20,1000]8	16.498817455402147	info:[12, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:7[19,128]7	7.1699170737462605	info:[11, 11, 19, 128, 27, 1]what_0 river_1 runs_2 through_3 the_4 state_5 with_6 the_7 most_8 cities_9 ?_10
	[
		child-0:*n:River -> ({ river ( *n:River ) })	#children:6[18,129]6	0.0256497529048678	info:[11, 10, 18, 129, 27, 1]river_1 runs_2 through_3 the_4 state_5 with_6 the_7 most_8 cities_9 ?_10
		[
			child-0:*n:River -> ({ traverse_2 ( *n:State ) })	#children:5[17,163]5	0.0038140385965361634	info:[11, 9, 17, 163, 27, 1]runs_2 through_3 the_4 state_5 with_6 the_7 most_8 cities_9 ?_10
			[
				child-0:*n:State -> ({ most ( *n:State ) })	#children:4[16,179]4	0.001839135763063959	info:[10, 6, 16, 179, 27, 1]the_4 state_5 with_6 the_7 most_8 cities_9
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:3[15,126]3	2.5895588161345963E-5	info:[8, 3, 15, 126, 27, 1]state_5 with_6 the_7
					[
						child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:2[14,181]2	2.824750926520238E-6	info:[8, 2, 14, 181, 27, 1]with_6 the_7
						[
							child-0:*n:River -> ({ river ( all ) })	#children:1[13,171]1	4.288997827741815E-4	info:[7, 1, 13, 171, 26, 1]with_6
						]
					]
				]
			]
		]
	]
]

output:	answer(river(traverse_2(most(state(loc_1(city(all)))))))
predic:	answer(river(traverse_2(most(state(traverse_1(river(all)))))))
198:	false
=INPUT=
what state has the most rivers ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ most ( *n:State ) })	#children:4[18,179]4	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:3[17,126]3	0.0	null
			[
				child-0:*n:State -> ({ loc_1 ( *n:River ) })	#children:2[16,182]2	0.0	null
				[
					child-0:*n:River -> ({ river ( all ) })	#children:1[15,171]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	2.2275108973662802E-5	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	9.951845245090425E-6	info:[7, 7, 19, 135, 27, 1]what_0 state_1 has_2 the_3 most_4 rivers_5 ?_6
	[
		child-0:*n:State -> ({ most ( *n:State ) })	#children:4[18,179]4	0.006184152228911194	info:[6, 6, 18, 179, 27, 1]what_0 state_1 has_2 the_3 most_4 rivers_5
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:3[17,126]3	0.03514437401031152	info:[4, 3, 17, 126, 27, 1]state_1 has_2 the_3
			[
				child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:2[16,172]2	8.627050791785631E-4	info:[4, 2, 16, 172, 27, 1]has_2 the_3
				[
					child-0:*n:City -> ({ city ( all ) })	#children:1[15,160]1	0.023885228644923158	info:[4, 1, 15, 160, 26, 1]the_3
				]
			]
		]
	]
]

output:	answer(most(state(loc_1(river(all)))))
predic:	answer(most(state(loc_1(city(all)))))
214:	false
=INPUT=
what states border the state with the most cities ?
=OUTPUT=
ROOT	#children:8[20,1000]8	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:7[19,135]7	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:6[18,126]6	0.0	null
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:5[17,127]5	0.0	null
			[
				child-0:*n:State -> ({ most ( *n:State ) })	#children:4[16,179]4	0.0	null
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:3[15,126]3	0.0	null
					[
						child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:2[14,172]2	0.0	null
						[
							child-0:*n:City -> ({ city ( all ) })	#children:1[13,160]1	0.0	null
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:8[20,1000]8	1.8396680213508493E-5	info:[11, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:7[19,135]7	8.219080531759515E-6	info:[10, 10, 19, 135, 27, 1]what_0 states_1 border_2 the_3 state_4 with_5 the_6 most_7 cities_8 ?_9
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:6[18,126]6	9.10473458401097E-5	info:[9, 9, 18, 126, 27, 1]what_0 states_1 border_2 the_3 state_4 with_5 the_6 most_7 cities_8
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:5[17,127]5	6.6079425031230235E-6	info:[9, 7, 17, 127, 27, 1]border_2 the_3 state_4 with_5 the_6 most_7 cities_8
			[
				child-0:*n:State -> ({ most ( *n:State ) })	#children:4[16,179]4	6.233651931885434E-7	info:[9, 6, 16, 179, 27, 1]the_3 state_4 with_5 the_6 most_7 cities_8
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:3[15,126]3	2.5895588161345963E-5	info:[7, 3, 15, 126, 27, 1]state_4 with_5 the_6
					[
						child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:2[14,181]2	2.824750926520238E-6	info:[7, 2, 14, 181, 27, 1]with_5 the_6
						[
							child-0:*n:River -> ({ river ( all ) })	#children:1[13,171]1	4.288997827741815E-4	info:[6, 1, 13, 171, 26, 1]with_5
						]
					]
				]
			]
		]
	]
]

output:	answer(state(next_to_2(most(state(loc_1(city(all)))))))
predic:	answer(state(next_to_2(most(state(traverse_1(river(all)))))))
230:	true
=INPUT=
where is portland ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:4[19,135]4	0.0	null
	[
		child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:3[18,172]3	0.0	null
		[
			child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[17,147]2	0.0	null
			[
				child-0:*n:CityName -> ({ ' portland ' })	#children:1[16,18]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	11.222991135957189	info:[5, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:4[19,135]4	5.0140931343646695	info:[4, 4, 19, 135, 27, 1]where_0 is_1 portland_2 ?_3
	[
		child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:3[18,172]3	0.1727039783334381	info:[4, 3, 18, 172, 27, 1]is_1 portland_2 ?_3
		[
			child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[17,147]2	72102.42018085228	info:[3, 1, 17, 147, 27, 1]portland_2
			[
				child-0:*n:CityName -> ({ ' portland ' })	#children:1[16,18]1	1.0	info:[3, 1, 16, 18, 26, 1]portland_2
			]
		]
	]
]

output:	answer(loc_1(cityid('portland',_)))
predic:	answer(loc_1(cityid('portland',_)))
246:	true
=INPUT=
which rivers do not run through texas ?
=OUTPUT=
ROOT	#children:7[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:6[19,128]5	0.0	null
	[
		child-0:*n:River -> ({ exclude ( *n:River , *n:River ) })	#children:5[18,170]4	0.0	null
		[
			child-0:*n:River -> ({ river ( all ) })	#children:1[17,171]1	0.0	null
		]
		[
			child-0:*n:River -> ({ traverse_2 ( *n:State ) })	#children:3[17,163]3	0.0	null
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	0.0	null
				[
					child-0:*n:StateName -> ({ ' texas ' })	#children:1[15,92]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]6	1.6336965826200106E14	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:6[19,128]5	7.099580956459888E13	info:[8, 8, 19, 128, 27, 1]which_0 rivers_1 do_2 not_3 run_4 through_5 texas_6 ?_7
	[
		child-0:*n:River -> ({ exclude ( *n:River , *n:River ) })	#children:5[18,170]4	6.188055704208277E10	info:[8, 7, 18, 170, 28, 1]rivers_1 do_2 not_3 run_4 through_5 texas_6 ?_7
		[
			child-0:*n:River -> ({ river ( all ) })	#children:1[17,171]1	0.001147574388336706	info:[3, 2, 17, 171, 26, 1]rivers_1 do_2
		]
		[
			child-0:*n:River -> ({ traverse_2 ( *n:State ) })	#children:3[17,163]3	6.074999538947507E9	info:[8, 4, 17, 163, 27, 1]run_4 through_5 texas_6 ?_7
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	3.273583459538019E9	info:[7, 1, 16, 123, 27, 1]texas_6
				[
					child-0:*n:StateName -> ({ ' texas ' })	#children:1[15,92]1	1.0	info:[7, 1, 15, 92, 26, 1]texas_6
				]
			]
		]
	]
]

output:	answer(exclude(river(all),traverse_2(stateid('texas'))))
predic:	answer(exclude(river(all),traverse_2(stateid('texas'))))
262:	false
=INPUT=
which state has the most major rivers ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	0.0	null
	[
		child-0:*n:State -> ({ most ( *n:State ) })	#children:5[18,179]5	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	0.0	null
			[
				child-0:*n:State -> ({ loc_1 ( *n:River ) })	#children:3[16,182]3	0.0	null
				[
					child-0:*n:River -> ({ major ( *n:River ) })	#children:2[15,162]2	0.0	null
					[
						child-0:*n:River -> ({ river ( all ) })	#children:1[14,171]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	0.08664189426044865	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.03870897890739655	info:[8, 8, 19, 135, 27, 1]which_0 state_1 has_2 the_3 most_4 major_5 rivers_6 ?_7
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	2.5878984380180717E-6	info:[8, 7, 18, 126, 27, 1]state_1 has_2 the_3 most_4 major_5 rivers_6 ?_7
		[
			child-0:*n:State -> ({ loc_1 ( *n:River ) })	#children:3[17,182]3	1.8252794100155952E-9	info:[8, 6, 17, 182, 27, 1]has_2 the_3 most_4 major_5 rivers_6 ?_7
			[
				child-0:*n:River -> ({ major ( *n:River ) })	#children:2[16,162]2	1.832223734253061E-5	info:[7, 2, 16, 162, 27, 1]major_5 rivers_6
				[
					child-0:*n:River -> ({ river ( all ) })	#children:1[15,171]1	5.127226851991763E-7	info:[7, 1, 15, 171, 26, 1]rivers_6
				]
			]
		]
	]
]

output:	answer(most(state(loc_1(major(river(all))))))
predic:	answer(state(loc_1(major(river(all)))))
278:	true
=INPUT=
which states have a river ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:4[19,135]4	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:3[18,126]3	0.0	null
		[
			child-0:*n:State -> ({ loc_1 ( *n:River ) })	#children:2[17,182]2	0.0	null
			[
				child-0:*n:River -> ({ river ( all ) })	#children:1[16,171]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	24.14198521576585	info:[7, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:4[19,135]4	10.78590910871113	info:[6, 6, 19, 135, 27, 1]which_0 states_1 have_2 a_3 river_4 ?_5
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:3[18,126]3	1.079783399690514E-5	info:[6, 5, 18, 126, 27, 1]states_1 have_2 a_3 river_4 ?_5
		[
			child-0:*n:State -> ({ loc_1 ( *n:River ) })	#children:2[17,182]2	4.690087468749886E-10	info:[6, 4, 17, 182, 27, 1]have_2 a_3 river_4 ?_5
			[
				child-0:*n:River -> ({ river ( all ) })	#children:1[16,171]1	2.944108160269007E-7	info:[5, 1, 16, 171, 26, 1]river_4
			]
		]
	]
]

output:	answer(state(loc_1(river(all))))
predic:	answer(state(loc_1(river(all))))
7:	true
=INPUT=
how high is the highest point of alabama ?
=OUTPUT=
ROOT	#children:8[20,1000]8	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:7[19,144]7	0.0	null
	[
		child-0:*n:Num -> ({ elevation_1 ( *n:Place ) })	#children:6[18,148]6	0.0	null
		[
			child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[17,132]5	0.0	null
			[
				child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[16,133]4	0.0	null
				[
					child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[15,134]3	0.0	null
					[
						child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[14,123]2	0.0	null
						[
							child-0:*n:StateName -> ({ ' alabama ' })	#children:1[13,96]1	0.0	null
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:8[20,1000]8	1.982245857417488E17	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:7[19,144]7	1.10110339195534618E18	info:[9, 9, 19, 144, 27, 1]how_0 high_1 is_2 the_3 highest_4 point_5 of_6 alabama_7 ?_8
	[
		child-0:*n:Num -> ({ elevation_1 ( *n:Place ) })	#children:6[18,148]6	1.6503294752510615E15	info:[9, 8, 18, 148, 27, 1]high_1 is_2 the_3 highest_4 point_5 of_6 alabama_7 ?_8
		[
			child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[17,132]5	3.248737134406449E14	info:[9, 7, 17, 132, 27, 1]is_2 the_3 highest_4 point_5 of_6 alabama_7 ?_8
			[
				child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[16,133]4	8.799771756602896E9	info:[9, 4, 16, 133, 27, 1]point_5 of_6 alabama_7 ?_8
				[
					child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[15,134]3	443616.9562566315	info:[9, 3, 15, 134, 27, 1]of_6 alabama_7 ?_8
					[
						child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[14,123]2	3.273583459538019E9	info:[8, 1, 14, 123, 27, 1]alabama_7
						[
							child-0:*n:StateName -> ({ ' alabama ' })	#children:1[13,96]1	1.0	info:[8, 1, 13, 96, 26, 1]alabama_7
						]
					]
				]
			]
		]
	]
]

output:	answer(elevation_1(highest(place(loc_2(stateid('alabama'))))))
predic:	answer(elevation_1(highest(place(loc_2(stateid('alabama'))))))
23:	true
=INPUT=
how many people live in mississippi ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:3[18,158]3	0.0	null
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	0.0	null
			[
				child-0:*n:StateName -> ({ ' mississippi ' })	#children:1[16,83]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	1.5077031537227515E15	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	8.375031030655078E15	info:[7, 7, 19, 144, 27, 1]how_0 many_1 people_2 live_3 in_4 mississippi_5 ?_6
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:3[18,158]3	9.792100820284307E7	info:[7, 5, 18, 158, 27, 1]people_2 live_3 in_4 mississippi_5 ?_6
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	3.273583459538019E9	info:[6, 1, 17, 123, 27, 1]mississippi_5
			[
				child-0:*n:StateName -> ({ ' mississippi ' })	#children:1[16,83]1	1.0	info:[6, 1, 16, 83, 26, 1]mississippi_5
			]
		]
	]
]

output:	answer(population_1(stateid('mississippi')))
predic:	answer(population_1(stateid('mississippi')))
39:	false
=INPUT=
how many states do not have rivers ?
=OUTPUT=
ROOT	#children:7[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]5	0.0	null
	[
		child-0:*n:Num -> ({ count ( *n:State ) })	#children:5[18,176]4	0.0	null
		[
			child-0:*n:State -> ({ exclude ( *n:State , *n:State ) })	#children:4[17,185]3	0.0	null
			[
				child-0:*n:State -> ({ state ( all ) })	#children:1[16,141]1	0.0	null
			]
			[
				child-0:*n:State -> ({ loc_1 ( *n:River ) })	#children:2[16,182]2	0.0	null
				[
					child-0:*n:River -> ({ river ( all ) })	#children:1[15,171]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	2842348.922318469	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:5[19,144]5	1.57887581289384E7	info:[8, 8, 19, 144, 27, 1]how_0 many_1 states_2 do_3 not_4 have_5 rivers_6 ?_7
	[
		child-0:*n:Num -> ({ count ( *n:State ) })	#children:4[18,176]4	9.90342025949365E-4	info:[8, 6, 18, 176, 27, 1]states_2 do_3 not_4 have_5 rivers_6 ?_7
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:3[17,126]3	1.2323456688902455E-6	info:[8, 6, 17, 126, 27, 1]states_2 do_3 not_4 have_5 rivers_6 ?_7
			[
				child-0:*n:State -> ({ loc_1 ( *n:River ) })	#children:2[16,182]2	4.526623158757478E-9	info:[8, 5, 16, 182, 27, 1]do_3 not_4 have_5 rivers_6 ?_7
				[
					child-0:*n:River -> ({ river ( all ) })	#children:1[15,171]1	6.960563767277131E-7	info:[7, 1, 15, 171, 26, 1]rivers_6
				]
			]
		]
	]
]

output:	answer(count(exclude(state(all),loc_1(river(all)))))
predic:	answer(count(state(loc_1(river(all)))))
55:	true
=INPUT=
what is the capital city in texas ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	0.0	null
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:5[18,131]5	0.0	null
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	0.0	null
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[16,122]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' texas ' })	#children:1[14,92]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	1.44041504749331392E17	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	1.22369599301222432E17	info:[8, 8, 19, 120, 27, 1]what_0 is_1 the_2 capital_3 city_4 in_5 texas_6 ?_7
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:5[18,131]5	1.614500062178528E14	info:[8, 5, 18, 131, 27, 1]capital_3 city_4 in_5 texas_6 ?_7
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	3.227146746684838E10	info:[8, 4, 17, 121, 27, 1]city_4 in_5 texas_6 ?_7
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[16,122]3	1.3073086225277133E7	info:[8, 3, 16, 122, 27, 1]in_5 texas_6 ?_7
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[7, 1, 15, 123, 27, 1]texas_6
					[
						child-0:*n:StateName -> ({ ' texas ' })	#children:1[14,92]1	1.0	info:[7, 1, 14, 92, 26, 1]texas_6
					]
				]
			]
		]
	]
]

output:	answer(capital(city(loc_2(stateid('texas')))))
predic:	answer(capital(city(loc_2(stateid('texas')))))
71:	true
=INPUT=
what are the populations of states through which the mississippi runs ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:5[18,158]5	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	0.0	null
			[
				child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:3[16,181]3	0.0	null
				[
					child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[15,152]2	0.0	null
					[
						child-0:*n:RiverName -> ({ ' mississippi ' })	#children:1[14,84]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	3.155995690629235E23	info:[13, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	1.753101184166787E24	info:[12, 12, 19, 144, 27, 1]what_0 are_1 the_2 populations_3 of_4 states_5 through_6 which_7 the_8 mississippi_9 runs_10 ?_11
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:5[18,158]5	1.161027188051429E30	info:[11, 11, 18, 158, 27, 1]what_0 are_1 the_2 populations_3 of_4 states_5 through_6 which_7 the_8 mississippi_9 runs_10
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	3.8257593440895684E20	info:[11, 6, 17, 126, 27, 1]states_5 through_6 which_7 the_8 mississippi_9 runs_10
			[
				child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:3[16,181]3	4.7189205560131078E17	info:[11, 5, 16, 181, 27, 1]through_6 which_7 the_8 mississippi_9 runs_10
				[
					child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[15,152]2	1.1954283726525978E11	info:[10, 2, 15, 152, 27, 1]the_8 mississippi_9
					[
						child-0:*n:RiverName -> ({ ' mississippi ' })	#children:1[14,84]1	1.0	info:[10, 1, 14, 84, 26, 1]mississippi_9
					]
				]
			]
		]
	]
]

output:	answer(population_1(state(traverse_1(riverid('mississippi')))))
predic:	answer(population_1(state(traverse_1(riverid('mississippi')))))
87:	true
=INPUT=
what is the capital of colorado ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:5[19,120]5	0.0	null
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:4[18,131]4	0.0	null
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[17,122]3	0.0	null
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	0.0	null
				[
					child-0:*n:StateName -> ({ ' colorado ' })	#children:1[15,109]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	8.855003238707247E9	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:5[19,120]5	7.522715067558764E9	info:[7, 7, 19, 120, 27, 1]what_0 is_1 the_2 capital_3 of_4 colorado_5 ?_6
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:4[18,131]4	9925197.118957672	info:[7, 4, 18, 131, 27, 1]capital_3 of_4 colorado_5 ?_6
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[17,122]3	807.67946306298	info:[7, 3, 17, 122, 27, 1]of_4 colorado_5 ?_6
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	3.273583459538019E9	info:[6, 1, 16, 123, 27, 1]colorado_5
				[
					child-0:*n:StateName -> ({ ' colorado ' })	#children:1[15,109]1	1.0	info:[6, 1, 15, 109, 26, 1]colorado_5
				]
			]
		]
	]
]

output:	answer(capital(loc_2(stateid('colorado'))))
predic:	answer(capital(loc_2(stateid('colorado'))))
103:	true
=INPUT=
what is the density of the new york ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ density_1 ( *n:State ) })	#children:3[18,196]3	0.0	null
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	0.0	null
			[
				child-0:*n:StateName -> ({ ' new york ' })	#children:1[16,112]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	1.3842698841190336E7	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	7.68938050283474E7	info:[9, 9, 19, 144, 27, 1]what_0 is_1 the_2 density_3 of_4 the_5 new_6 york_7 ?_8
	[
		child-0:*n:Num -> ({ density_1 ( *n:State ) })	#children:3[18,196]3	3.341633457371646E14	info:[8, 8, 18, 196, 27, 1]what_0 is_1 the_2 density_3 of_4 the_5 new_6 york_7
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	4.1405535583285764E7	info:[8, 2, 17, 123, 27, 1]new_6 york_7
			[
				child-0:*n:StateName -> ({ ' new york ' })	#children:1[16,112]1	0.012648382451544106	info:[8, 2, 16, 112, 26, 1]new_6 york_7
			]
		]
	]
]

output:	answer(density_1(stateid('newyork')))
predic:	answer(density_1(stateid('newyork')))
119:	true
=INPUT=
what is the highest point of the state with the smallest population density ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	0.0	null
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	0.0	null
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	0.0	null
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[16,134]3	0.0	null
				[
					child-0:*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })	#children:2[15,194]2	0.0	null
					[
						child-0:*n:State -> ({ state ( all ) })	#children:1[14,141]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	124347.87384122457	info:[15, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	172137.136130378	info:[14, 14, 19, 124, 27, 1]what_0 is_1 the_2 highest_3 point_4 of_5 the_6 state_7 with_8 the_9 smallest_10 population_11 density_12 ?_13
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	24612.873752891344	info:[14, 13, 18, 132, 27, 1]is_1 the_2 highest_3 point_4 of_5 the_6 state_7 with_8 the_9 smallest_10 population_11 density_12 ?_13
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	0.0745915552249816	info:[14, 10, 17, 133, 27, 1]point_4 of_5 the_6 state_7 with_8 the_9 smallest_10 population_11 density_12 ?_13
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[16,134]3	3.7603337457617225E-6	info:[14, 9, 16, 134, 27, 1]of_5 the_6 state_7 with_8 the_9 smallest_10 population_11 density_12 ?_13
				[
					child-0:*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })	#children:2[15,194]2	0.001404330154026774	info:[13, 7, 15, 194, 27, 1]the_6 state_7 with_8 the_9 smallest_10 population_11 density_12
					[
						child-0:*n:State -> ({ state ( all ) })	#children:1[14,141]1	0.044366595542175494	info:[8, 1, 14, 141, 26, 1]state_7
					]
				]
			]
		]
	]
]

output:	answer(highest(place(loc_2(smallest_one(density_1(state(all)))))))
predic:	answer(highest(place(loc_2(smallest_one(density_1(state(all)))))))
135:	true
=INPUT=
what is the longest river in florida ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:6[19,128]6	0.0	null
	[
		child-0:*n:River -> ({ longest ( *n:River ) })	#children:5[18,142]5	0.0	null
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:4[17,129]4	0.0	null
			[
				child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:3[16,130]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' florida ' })	#children:1[14,13]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	2.722542796166829E12	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:6[19,128]6	1.1831397087098484E12	info:[8, 8, 19, 128, 27, 1]what_0 is_1 the_2 longest_3 river_4 in_5 florida_6 ?_7
	[
		child-0:*n:River -> ({ longest ( *n:River ) })	#children:5[18,142]5	7.582450608025322E9	info:[8, 7, 18, 142, 27, 1]is_1 the_2 longest_3 river_4 in_5 florida_6 ?_7
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:4[17,129]4	836605.6150533453	info:[8, 4, 17, 129, 27, 1]river_4 in_5 florida_6 ?_7
			[
				child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:3[16,130]3	120208.27508108346	info:[8, 3, 16, 130, 27, 1]in_5 florida_6 ?_7
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[7, 1, 15, 123, 27, 1]florida_6
					[
						child-0:*n:StateName -> ({ ' florida ' })	#children:1[14,13]1	1.0	info:[7, 1, 14, 13, 26, 1]florida_6
					]
				]
			]
		]
	]
]

output:	answer(longest(river(loc_2(stateid('florida')))))
predic:	answer(longest(river(loc_2(stateid('florida')))))
151:	true
=INPUT=
what is the most populous state through which the mississippi runs ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	0.0	null
	[
		child-0:*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })	#children:5[18,169]5	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	0.0	null
			[
				child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:3[16,181]3	0.0	null
				[
					child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[15,152]2	0.0	null
					[
						child-0:*n:RiverName -> ({ ' mississippi ' })	#children:1[14,84]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	8.586824246647789E15	info:[13, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	3.836333467569876E15	info:[12, 12, 19, 135, 27, 1]what_0 is_1 the_2 most_3 populous_4 state_5 through_6 which_7 the_8 mississippi_9 runs_10 ?_11
	[
		child-0:*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })	#children:5[18,169]5	3.0694629374936725E14	info:[12, 11, 18, 169, 27, 1]is_1 the_2 most_3 populous_4 state_5 through_6 which_7 the_8 mississippi_9 runs_10 ?_11
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	6.9951584022288904E16	info:[11, 6, 17, 126, 27, 1]state_5 through_6 which_7 the_8 mississippi_9 runs_10
			[
				child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:3[16,181]3	1.8017933801119995E15	info:[11, 5, 16, 181, 27, 1]through_6 which_7 the_8 mississippi_9 runs_10
				[
					child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[15,152]2	1.1954283726525978E11	info:[10, 2, 15, 152, 27, 1]the_8 mississippi_9
					[
						child-0:*n:RiverName -> ({ ' mississippi ' })	#children:1[14,84]1	1.0	info:[10, 1, 14, 84, 26, 1]mississippi_9
					]
				]
			]
		]
	]
]

output:	answer(largest_one(population_1(state(traverse_1(riverid('mississippi'))))))
predic:	answer(largest_one(population_1(state(traverse_1(riverid('mississippi'))))))
167:	true
=INPUT=
what is the population of the state with the highest population density ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:3[18,158]3	0.0	null
		[
			child-0:*n:State -> ({ largest_one ( density_1 ( *n:State ) ) })	#children:2[17,166]2	0.0	null
			[
				child-0:*n:State -> ({ state ( all ) })	#children:1[16,141]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	0.07061303360044806	info:[14, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.39224322514164467	info:[13, 13, 19, 144, 27, 1]what_0 is_1 the_2 population_3 of_4 the_5 state_6 with_7 the_8 highest_9 population_10 density_11 ?_12
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:3[18,158]3	848700.6361726847	info:[12, 12, 18, 158, 27, 1]what_0 is_1 the_2 population_3 of_4 the_5 state_6 with_7 the_8 highest_9 population_10 density_11
		[
			child-0:*n:State -> ({ largest_one ( density_1 ( *n:State ) ) })	#children:2[17,166]2	0.01596100488881659	info:[12, 6, 17, 166, 27, 1]state_6 with_7 the_8 highest_9 population_10 density_11
			[
				child-0:*n:State -> ({ state ( all ) })	#children:1[16,141]1	0.044366595542175494	info:[7, 1, 16, 141, 26, 1]state_6
			]
		]
	]
]

output:	answer(population_1(largest_one(density_1(state(all)))))
predic:	answer(population_1(largest_one(density_1(state(all)))))
183:	false
=INPUT=
what river traverses the state which borders the most states ?
=OUTPUT=
ROOT	#children:8[20,1000]8	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:7[19,128]7	0.0	null
	[
		child-0:*n:River -> ({ river ( *n:River ) })	#children:6[18,129]6	0.0	null
		[
			child-0:*n:River -> ({ traverse_2 ( *n:State ) })	#children:5[17,163]5	0.0	null
			[
				child-0:*n:State -> ({ most ( *n:State ) })	#children:4[16,179]4	0.0	null
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:3[15,126]3	0.0	null
					[
						child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:2[14,127]2	0.0	null
						[
							child-0:*n:State -> ({ state ( all ) })	#children:1[13,141]1	0.0	null
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:8[20,1000]8	1.2036267004116309E12	info:[12, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:7[19,128]7	5.2306194992614954E11	info:[11, 11, 19, 128, 27, 1]what_0 river_1 traverses_2 the_3 state_4 which_5 borders_6 the_7 most_8 states_9 ?_10
	[
		child-0:*n:River -> ({ river ( *n:River ) })	#children:6[18,129]6	1.8712084995613525E9	info:[11, 10, 18, 129, 27, 1]river_1 traverses_2 the_3 state_4 which_5 borders_6 the_7 most_8 states_9 ?_10
		[
			child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:5[17,130]5	8.575581916997777E7	info:[11, 9, 17, 130, 27, 1]traverses_2 the_3 state_4 which_5 borders_6 the_7 most_8 states_9 ?_10
			[
				child-0:*n:State -> ({ most ( *n:State ) })	#children:4[16,179]4	8.338396730494878E10	info:[10, 7, 16, 179, 27, 1]the_3 state_4 which_5 borders_6 the_7 most_8 states_9
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:3[15,126]3	2147031.337228599	info:[8, 4, 15, 126, 27, 1]state_4 which_5 borders_6 the_7
					[
						child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:2[14,127]2	204.05245303194923	info:[8, 2, 14, 127, 27, 1]borders_6 the_7
						[
							child-0:*n:State -> ({ state ( all ) })	#children:1[13,141]1	0.0016054145812558192	info:[8, 1, 13, 141, 26, 1]the_7
						]
					]
				]
			]
		]
	]
]

output:	answer(river(traverse_2(most(state(next_to_2(state(all)))))))
predic:	answer(river(loc_2(most(state(next_to_2(state(all)))))))
199:	true
=INPUT=
what state has the smallest urban population ?
=OUTPUT=
ROOT	#children:4[20,1000]4	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	0.0	null
	[
		child-0:*n:State -> ({ smallest_one ( population_1 ( *n:State ) ) })	#children:2[18,200]2	0.0	null
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	0.0	null
		]
	]
]

=PREDICTION=
ROOT	#children:4[20,1000]4	1.542321084470589E-4	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	6.89062431480776E-5	info:[8, 8, 19, 135, 27, 1]what_0 state_1 has_2 the_3 smallest_4 urban_5 population_6 ?_7
	[
		child-0:*n:State -> ({ smallest_one ( population_1 ( *n:State ) ) })	#children:2[18,200]2	7.041753340346809E-7	info:[8, 7, 18, 200, 27, 1]state_1 has_2 the_3 smallest_4 urban_5 population_6 ?_7
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	0.06102155556752424	info:[2, 1, 17, 141, 26, 1]state_1
		]
	]
]

output:	answer(smallest_one(population_1(state(all))))
predic:	answer(smallest_one(population_1(state(all))))
215:	false
=INPUT=
what states border the state with the most major cities ?
=OUTPUT=
ROOT	#children:9[20,1000]9	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:8[19,135]8	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:7[18,126]7	0.0	null
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:6[17,127]6	0.0	null
			[
				child-0:*n:State -> ({ most ( *n:State ) })	#children:5[16,179]5	0.0	null
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:4[15,126]4	0.0	null
					[
						child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:3[14,172]3	0.0	null
						[
							child-0:*n:City -> ({ major ( *n:City ) })	#children:2[13,156]2	0.0	null
							[
								child-0:*n:City -> ({ city ( all ) })	#children:1[12,160]1	0.0	null
							]
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:8[20,1000]8	8.661634420445884E-6	info:[12, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:7[19,135]7	3.8697563914836275E-6	info:[11, 11, 19, 135, 27, 1]what_0 states_1 border_2 the_3 state_4 with_5 the_6 most_7 major_8 cities_9 ?_10
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:6[18,126]6	4.2867453011433E-5	info:[10, 10, 18, 126, 27, 1]what_0 states_1 border_2 the_3 state_4 with_5 the_6 most_7 major_8 cities_9
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:5[17,127]5	3.1111908001395936E-6	info:[10, 8, 17, 127, 27, 1]border_2 the_3 state_4 with_5 the_6 most_7 major_8 cities_9
			[
				child-0:*n:State -> ({ most ( *n:State ) })	#children:4[16,179]4	2.934965086725316E-7	info:[10, 7, 16, 179, 27, 1]the_3 state_4 with_5 the_6 most_7 major_8 cities_9
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:3[15,126]3	2.5895588161345963E-5	info:[7, 3, 15, 126, 27, 1]state_4 with_5 the_6
					[
						child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:2[14,181]2	2.824750926520238E-6	info:[7, 2, 14, 181, 27, 1]with_5 the_6
						[
							child-0:*n:River -> ({ river ( all ) })	#children:1[13,171]1	4.288997827741815E-4	info:[6, 1, 13, 171, 26, 1]with_5
						]
					]
				]
			]
		]
	]
]

output:	answer(state(next_to_2(most(state(loc_1(major(city(all))))))))
predic:	answer(state(next_to_2(most(state(traverse_1(river(all)))))))
231:	false
=INPUT=
where is the chattahoochee river ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ loc_1 ( *n:River ) })	#children:4[18,182]4	0.0	null
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:3[17,129]3	0.0	null
			[
				child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[16,152]2	0.0	null
				[
					child-0:*n:RiverName -> ({ ' chattahoochee ' })	#children:1[15,82]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	13032.490778082116	info:[7, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:4[19,128]4	5663.5500329519855	info:[6, 6, 19, 128, 27, 1]where_0 is_1 the_2 chattahoochee_3 river_4 ?_5
	[
		child-0:*n:River -> ({ river ( *n:River ) })	#children:3[18,129]3	1.1373715612264391E7	info:[5, 4, 18, 129, 27, 1]is_1 the_2 chattahoochee_3 river_4
		[
			child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[17,152]2	4.2916637724314195E8	info:[4, 3, 17, 152, 27, 1]is_1 the_2 chattahoochee_3
			[
				child-0:*n:RiverName -> ({ ' chattahoochee ' })	#children:1[16,82]1	1.0	info:[4, 1, 16, 82, 26, 1]chattahoochee_3
			]
		]
	]
]

output:	answer(loc_1(river(riverid('chattahoochee'))))
predic:	answer(river(riverid('chattahoochee')))
247:	true
=INPUT=
which rivers do not run through usa ?
=OUTPUT=
ROOT	#children:7[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:6[19,128]5	0.0	null
	[
		child-0:*n:River -> ({ exclude ( *n:River , *n:River ) })	#children:5[18,170]4	0.0	null
		[
			child-0:*n:River -> ({ river ( all ) })	#children:1[17,171]1	0.0	null
		]
		[
			child-0:*n:River -> ({ traverse_2 ( *n:Country ) })	#children:3[17,143]3	0.0	null
			[
				child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[16,137]2	0.0	null
				[
					child-0:*n:CountryName -> ({ ' usa ' })	#children:1[15,34]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]6	102.70360612802362	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:6[19,128]5	44.63206778928988	info:[8, 8, 19, 128, 27, 1]which_0 rivers_1 do_2 not_3 run_4 through_5 usa_6 ?_7
	[
		child-0:*n:River -> ({ exclude ( *n:River , *n:River ) })	#children:5[18,170]4	0.03890169340527418	info:[8, 7, 18, 170, 28, 1]rivers_1 do_2 not_3 run_4 through_5 usa_6 ?_7
		[
			child-0:*n:River -> ({ river ( all ) })	#children:1[17,171]1	0.001147574388336706	info:[3, 2, 17, 171, 26, 1]rivers_1 do_2
		]
		[
			child-0:*n:River -> ({ traverse_2 ( *n:Country ) })	#children:3[17,143]3	0.00724202993619734	info:[8, 4, 17, 143, 27, 1]run_4 through_5 usa_6 ?_7
			[
				child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[16,137]2	8.074868111621592	info:[7, 1, 16, 137, 27, 1]usa_6
				[
					child-0:*n:CountryName -> ({ ' usa ' })	#children:1[15,34]1	1.0	info:[7, 1, 15, 34, 26, 1]usa_6
				]
			]
		]
	]
]

output:	answer(exclude(river(all),traverse_2(countryid('usa'))))
predic:	answer(exclude(river(all),traverse_2(countryid('usa'))))
263:	true
=INPUT=
which state has the most major rivers running through it ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	0.0	null
	[
		child-0:*n:State -> ({ most ( *n:State ) })	#children:5[18,179]5	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	0.0	null
			[
				child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:3[16,181]3	0.0	null
				[
					child-0:*n:River -> ({ major ( *n:River ) })	#children:2[15,162]2	0.0	null
					[
						child-0:*n:River -> ({ river ( all ) })	#children:1[14,171]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	1.358090073366854E8	info:[12, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	6.0675358558382906E7	info:[11, 11, 19, 135, 27, 1]which_0 state_1 has_2 the_3 most_4 major_5 rivers_6 running_7 through_8 it_9 ?_10
	[
		child-0:*n:State -> ({ most ( *n:State ) })	#children:5[18,179]5	1.6196467740112875E10	info:[10, 10, 18, 179, 27, 1]which_0 state_1 has_2 the_3 most_4 major_5 rivers_6 running_7 through_8 it_9
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	1.5109958633501256E9	info:[9, 8, 17, 126, 27, 1]state_1 has_2 the_3 most_4 major_5 rivers_6 running_7 through_8
			[
				child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:3[16,181]3	2518061.2742788084	info:[9, 6, 16, 181, 27, 1]the_3 most_4 major_5 rivers_6 running_7 through_8
				[
					child-0:*n:River -> ({ major ( *n:River ) })	#children:2[15,162]2	0.06715344976422025	info:[7, 2, 15, 162, 27, 1]major_5 rivers_6
					[
						child-0:*n:River -> ({ river ( all ) })	#children:1[14,171]1	0.0018791971984543372	info:[7, 1, 14, 171, 26, 1]rivers_6
					]
				]
			]
		]
	]
]

output:	answer(most(state(traverse_1(major(river(all))))))
predic:	answer(most(state(traverse_1(major(river(all))))))
279:	true
=INPUT=
which states have cities named austin ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:5[18,126]5	0.0	null
		[
			child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:4[17,172]4	0.0	null
			[
				child-0:*n:City -> ({ city ( *n:City ) })	#children:3[16,121]3	0.0	null
				[
					child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[15,147]2	0.0	null
					[
						child-0:*n:CityName -> ({ ' austin ' })	#children:1[14,30]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	1.2481054606732325E15	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	5.576157858019145E14	info:[7, 7, 19, 135, 27, 1]which_0 states_1 have_2 cities_3 named_4 austin_5 ?_6
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:5[18,126]5	5.582322851469287E8	info:[7, 6, 18, 126, 27, 1]states_1 have_2 cities_3 named_4 austin_5 ?_6
		[
			child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:4[17,172]4	34266.39312577866	info:[7, 5, 17, 172, 27, 1]have_2 cities_3 named_4 austin_5 ?_6
			[
				child-0:*n:City -> ({ city ( *n:City ) })	#children:3[16,121]3	7256217.029423095	info:[6, 3, 16, 121, 27, 1]cities_3 named_4 austin_5
				[
					child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[15,147]2	72102.42018085228	info:[6, 1, 15, 147, 27, 1]austin_5
					[
						child-0:*n:CityName -> ({ ' austin ' })	#children:1[14,30]1	1.0	info:[6, 1, 14, 30, 26, 1]austin_5
					]
				]
			]
		]
	]
]

output:	answer(state(loc_1(city(cityid('austin',_)))))
predic:	answer(state(loc_1(city(cityid('austin',_)))))
8:	true
=INPUT=
how large is alaska ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ size ( *n:State ) })	#children:3[18,145]3	0.0	null
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	0.0	null
			[
				child-0:*n:StateName -> ({ ' alaska ' })	#children:1[16,80]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	1.0554198040727152E15	info:[6, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	5.862675015072835E15	info:[5, 5, 19, 144, 27, 1]how_0 large_1 is_2 alaska_3 ?_4
	[
		child-0:*n:Num -> ({ size ( *n:State ) })	#children:3[18,145]3	3464701.682739164	info:[5, 2, 18, 145, 27, 1]alaska_3 ?_4
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	3.273583459538019E9	info:[4, 1, 17, 123, 27, 1]alaska_3
			[
				child-0:*n:StateName -> ({ ' alaska ' })	#children:1[16,80]1	1.0	info:[4, 1, 16, 80, 26, 1]alaska_3
			]
		]
	]
]

output:	answer(size(stateid('alaska')))
predic:	answer(size(stateid('alaska')))
24:	true
=INPUT=
how many people live in rhode island ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:3[18,158]3	0.0	null
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	0.0	null
			[
				child-0:*n:StateName -> ({ ' rhode island ' })	#children:1[16,25]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	8.125889108989787E15	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	4.5137912772427632E16	info:[8, 8, 19, 144, 27, 1]how_0 many_1 people_2 live_3 in_4 rhode_5 island_6 ?_7
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:3[18,158]3	5.277532597395501E8	info:[8, 6, 18, 158, 27, 1]people_2 live_3 in_4 rhode_5 island_6 ?_7
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	4.440454602683865E9	info:[7, 2, 17, 123, 27, 1]rhode_5 island_6
			[
				child-0:*n:StateName -> ({ ' rhode island ' })	#children:1[16,25]1	1.3564507083960262	info:[7, 2, 16, 25, 26, 1]rhode_5 island_6
			]
		]
	]
]

output:	answer(population_1(stateid('rhodeisland')))
predic:	answer(population_1(stateid('rhodeisland')))
40:	true
=INPUT=
how many states does tennessee border ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	0.0	null
	[
		child-0:*n:Num -> ({ count ( *n:State ) })	#children:5[18,176]5	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	0.0	null
			[
				child-0:*n:State -> ({ next_to_1 ( *n:State ) })	#children:3[16,180]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' tennessee ' })	#children:1[14,57]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	1.06523989629375373E18	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	5.9172239339843727E18	info:[7, 7, 19, 144, 27, 1]how_0 many_1 states_2 does_3 tennessee_4 border_5 ?_6
	[
		child-0:*n:Num -> ({ count ( *n:State ) })	#children:5[18,176]5	3.711549376412028E8	info:[7, 5, 18, 176, 27, 1]states_2 does_3 tennessee_4 border_5 ?_6
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	461851.73193160247	info:[7, 5, 17, 126, 27, 1]states_2 does_3 tennessee_4 border_5 ?_6
			[
				child-0:*n:State -> ({ next_to_1 ( *n:State ) })	#children:3[16,180]3	1344.7367570560098	info:[7, 4, 16, 180, 27, 1]does_3 tennessee_4 border_5 ?_6
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[5, 1, 15, 123, 27, 1]tennessee_4
					[
						child-0:*n:StateName -> ({ ' tennessee ' })	#children:1[14,57]1	1.0	info:[5, 1, 14, 57, 26, 1]tennessee_4
					]
				]
			]
		]
	]
]

output:	answer(count(state(next_to_1(stateid('tennessee')))))
predic:	answer(count(state(next_to_1(stateid('tennessee')))))
56:	true
=INPUT=
what are the capitals of states that border missouri ?
=OUTPUT=
ROOT	#children:8[20,1000]8	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:7[19,120]7	0.0	null
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:6[18,131]6	0.0	null
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:5[17,122]5	0.0	null
			[
				child-0:*n:State -> ({ state ( *n:State ) })	#children:4[16,126]4	0.0	null
				[
					child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[15,127]3	0.0	null
					[
						child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[14,123]2	0.0	null
						[
							child-0:*n:StateName -> ({ ' missouri ' })	#children:1[13,116]1	0.0	null
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:8[20,1000]8	5.419278648864064E13	info:[11, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:7[19,120]7	4.603915780505228E13	info:[10, 10, 19, 120, 27, 1]what_0 are_1 the_2 capitals_3 of_4 states_5 that_6 border_7 missouri_8 ?_9
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:6[18,131]6	1.9931240178296745E10	info:[10, 7, 18, 131, 27, 1]capitals_3 of_4 states_5 that_6 border_7 missouri_8 ?_9
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:5[17,122]5	1.526232606093598E8	info:[10, 6, 17, 122, 27, 1]of_4 states_5 that_6 border_7 missouri_8 ?_9
			[
				child-0:*n:State -> ({ state ( *n:State ) })	#children:4[16,126]4	5.921441927563098E10	info:[9, 4, 16, 126, 27, 1]states_5 that_6 border_7 missouri_8
				[
					child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[15,127]3	6.1277687610501915E7	info:[9, 2, 15, 127, 27, 1]border_7 missouri_8
					[
						child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[14,123]2	3.273583459538019E9	info:[9, 1, 14, 123, 27, 1]missouri_8
						[
							child-0:*n:StateName -> ({ ' missouri ' })	#children:1[13,116]1	1.0	info:[9, 1, 13, 116, 26, 1]missouri_8
						]
					]
				]
			]
		]
	]
]

output:	answer(capital(loc_2(state(next_to_2(stateid('missouri'))))))
predic:	answer(capital(loc_2(state(next_to_2(stateid('missouri'))))))
72:	true
=INPUT=
what are the populations of states which border texas ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:5[18,158]5	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	0.0	null
			[
				child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[16,127]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' texas ' })	#children:1[14,92]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	4.766138316351877E15	info:[11, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	2.647507647462366E16	info:[10, 10, 19, 144, 27, 1]what_0 are_1 the_2 populations_3 of_4 states_5 which_6 border_7 texas_8 ?_9
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:5[18,158]5	2.995600823758007E22	info:[9, 9, 18, 158, 27, 1]what_0 are_1 the_2 populations_3 of_4 states_5 which_6 border_7 texas_8
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	9.87095561637014E12	info:[9, 4, 17, 126, 27, 1]states_5 which_6 border_7 texas_8
			[
				child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[16,127]3	2.4264231310963684E10	info:[9, 2, 16, 127, 27, 1]border_7 texas_8
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[9, 1, 15, 123, 27, 1]texas_8
					[
						child-0:*n:StateName -> ({ ' texas ' })	#children:1[14,92]1	1.0	info:[9, 1, 14, 92, 26, 1]texas_8
					]
				]
			]
		]
	]
]

output:	answer(population_1(state(next_to_2(stateid('texas')))))
predic:	answer(population_1(state(next_to_2(stateid('texas')))))
88:	true
=INPUT=
what is the capital of illinois ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:5[19,120]5	0.0	null
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:4[18,131]4	0.0	null
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[17,122]3	0.0	null
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	0.0	null
				[
					child-0:*n:StateName -> ({ ' illinois ' })	#children:1[15,90]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	1.035000351582023E11	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:5[19,120]5	8.792783616092041E10	info:[7, 7, 19, 120, 27, 1]what_0 is_1 the_2 capital_3 of_4 illinois_5 ?_6
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:4[18,131]4	1.1600879447156228E8	info:[7, 4, 18, 131, 27, 1]capital_3 of_4 illinois_5 ?_6
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[17,122]3	9440.409062547164	info:[7, 3, 17, 122, 27, 1]of_4 illinois_5 ?_6
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	3.273583459538019E9	info:[6, 1, 16, 123, 27, 1]illinois_5
				[
					child-0:*n:StateName -> ({ ' illinois ' })	#children:1[15,90]1	1.0	info:[6, 1, 15, 90, 26, 1]illinois_5
				]
			]
		]
	]
]

output:	answer(capital(loc_2(stateid('illinois'))))
predic:	answer(capital(loc_2(stateid('illinois'))))
104:	false
=INPUT=
what is the high point of wyoming ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:4[19,124]4	0.0	null
	[
		child-0:*n:Place -> ({ high_point_1 ( *n:State ) })	#children:3[18,125]3	0.0	null
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	0.0	null
			[
				child-0:*n:StateName -> ({ ' wyoming ' })	#children:1[16,69]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	7.967494096529136E8	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	1.1029554213877742E9	info:[8, 8, 19, 124, 27, 1]what_0 is_1 the_2 high_3 point_4 of_5 wyoming_6 ?_7
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	1.5770508997618726E8	info:[8, 7, 18, 132, 27, 1]is_1 the_2 high_3 point_4 of_5 wyoming_6 ?_7
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	9.373607413940696E8	info:[8, 4, 17, 133, 27, 1]point_4 of_5 wyoming_6 ?_7
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[16,134]3	9316072.798251636	info:[8, 3, 16, 134, 27, 1]of_5 wyoming_6 ?_7
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[7, 1, 15, 123, 27, 1]wyoming_6
					[
						child-0:*n:StateName -> ({ ' wyoming ' })	#children:1[14,69]1	1.0	info:[7, 1, 14, 69, 26, 1]wyoming_6
					]
				]
			]
		]
	]
]

output:	answer(high_point_1(stateid('wyoming')))
predic:	answer(highest(place(loc_2(stateid('wyoming')))))
120:	true
=INPUT=
what is the highest point of the usa ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	0.0	null
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	0.0	null
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	0.0	null
			[
				child-0:*n:Place -> ({ loc_2 ( *n:Country ) })	#children:3[16,183]3	0.0	null
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	0.0	null
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	2.978619387087619E10	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	4.1233596930685905E10	info:[9, 9, 19, 124, 27, 1]what_0 is_1 the_2 highest_3 point_4 of_5 the_6 usa_7 ?_8
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	5.895748810784839E9	info:[9, 8, 18, 132, 27, 1]is_1 the_2 highest_3 point_4 of_5 the_6 usa_7 ?_8
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	17867.603654393082	info:[9, 5, 17, 133, 27, 1]point_4 of_5 the_6 usa_7 ?_8
			[
				child-0:*n:Place -> ({ loc_2 ( *n:Country ) })	#children:3[16,183]3	1.4256858279532971	info:[9, 4, 16, 183, 27, 1]of_5 the_6 usa_7 ?_8
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	8.074868111621592	info:[8, 1, 15, 137, 27, 1]usa_7
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	1.0	info:[8, 1, 14, 34, 26, 1]usa_7
					]
				]
			]
		]
	]
]

output:	answer(highest(place(loc_2(countryid('usa')))))
predic:	answer(highest(place(loc_2(countryid('usa')))))
136:	true
=INPUT=
what is the longest river in the largest state ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:6[19,128]6	0.0	null
	[
		child-0:*n:River -> ({ longest ( *n:River ) })	#children:5[18,142]5	0.0	null
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:4[17,129]4	0.0	null
			[
				child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:3[16,130]3	0.0	null
				[
					child-0:*n:State -> ({ largest ( *n:State ) })	#children:2[15,140]2	0.0	null
					[
						child-0:*n:State -> ({ state ( all ) })	#children:1[14,141]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	1068.9294963726388	info:[11, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:6[19,128]6	464.52637392892257	info:[10, 10, 19, 128, 27, 1]what_0 is_1 the_2 longest_3 river_4 in_5 the_6 largest_7 state_8 ?_9
	[
		child-0:*n:River -> ({ longest ( *n:River ) })	#children:5[18,142]5	2.977034969337635	info:[10, 9, 18, 142, 27, 1]is_1 the_2 longest_3 river_4 in_5 the_6 largest_7 state_8 ?_9
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:4[17,129]4	3.284695542786603E-4	info:[10, 6, 17, 129, 27, 1]river_4 in_5 the_6 largest_7 state_8 ?_9
			[
				child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:3[16,130]3	4.7196382412485284E-5	info:[10, 5, 16, 130, 27, 1]in_5 the_6 largest_7 state_8 ?_9
				[
					child-0:*n:State -> ({ largest ( *n:State ) })	#children:2[15,140]2	0.4016323622860939	info:[9, 3, 15, 140, 27, 1]the_6 largest_7 state_8
					[
						child-0:*n:State -> ({ state ( all ) })	#children:1[14,141]1	1.903936515818124E-5	info:[9, 1, 14, 141, 26, 1]state_8
					]
				]
			]
		]
	]
]

output:	answer(longest(river(loc_2(largest(state(all))))))
predic:	answer(longest(river(loc_2(largest(state(all))))))
152:	true
=INPUT=
what is the population density of maine ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ density_1 ( *n:State ) })	#children:3[18,196]3	0.0	null
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	0.0	null
			[
				child-0:*n:StateName -> ({ ' maine ' })	#children:1[16,105]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	1.5524378041072092E9	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	8.62352429949929E9	info:[8, 8, 19, 144, 27, 1]what_0 is_1 the_2 population_3 density_4 of_5 maine_6 ?_7
	[
		child-0:*n:Num -> ({ density_1 ( *n:State ) })	#children:3[18,196]3	8.400497424235488E16	info:[7, 7, 18, 196, 27, 1]what_0 is_1 the_2 population_3 density_4 of_5 maine_6
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	3.273583459538019E9	info:[7, 1, 17, 123, 27, 1]maine_6
			[
				child-0:*n:StateName -> ({ ' maine ' })	#children:1[16,105]1	1.0	info:[7, 1, 16, 105, 26, 1]maine_6
			]
		]
	]
]

output:	answer(density_1(stateid('maine')))
predic:	answer(density_1(stateid('maine')))
168:	true
=INPUT=
what is the population of tucson ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:3[18,159]3	0.0	null
		[
			child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[17,147]2	0.0	null
			[
				child-0:*n:CityName -> ({ ' tucson ' })	#children:1[16,53]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	379.15064058225477	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	2106.1164277122994	info:[7, 7, 19, 144, 27, 1]what_0 is_1 the_2 population_3 of_4 tucson_5 ?_6
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:3[18,159]3	46758.75856539804	info:[7, 5, 18, 159, 27, 1]the_2 population_3 of_4 tucson_5 ?_6
		[
			child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[17,147]2	72102.42018085228	info:[6, 1, 17, 147, 27, 1]tucson_5
			[
				child-0:*n:CityName -> ({ ' tucson ' })	#children:1[16,53]1	1.0	info:[6, 1, 16, 53, 26, 1]tucson_5
			]
		]
	]
]

output:	answer(population_1(cityid('tucson',_)))
predic:	answer(population_1(cityid('tucson',_)))
184:	true
=INPUT=
what rivers are in states that border texas ?
=OUTPUT=
ROOT	#children:8[20,1000]8	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:7[19,128]7	0.0	null
	[
		child-0:*n:River -> ({ river ( *n:River ) })	#children:6[18,129]6	0.0	null
		[
			child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:5[17,130]5	0.0	null
			[
				child-0:*n:State -> ({ state ( *n:State ) })	#children:4[16,126]4	0.0	null
				[
					child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[15,127]3	0.0	null
					[
						child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[14,123]2	0.0	null
						[
							child-0:*n:StateName -> ({ ' texas ' })	#children:1[13,92]1	0.0	null
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:8[20,1000]8	2.3845440976745984E11	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:7[19,128]7	1.0362550822343935E11	info:[9, 9, 19, 128, 27, 1]what_0 rivers_1 are_2 in_3 states_4 that_5 border_6 texas_7 ?_8
	[
		child-0:*n:River -> ({ river ( *n:River ) })	#children:6[18,129]6	2.4028804211525717E8	info:[9, 8, 18, 129, 27, 1]rivers_1 are_2 in_3 states_4 that_5 border_6 texas_7 ?_8
		[
			child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:5[17,130]5	3.014130097481419E8	info:[9, 7, 17, 130, 27, 1]are_2 in_3 states_4 that_5 border_6 texas_7 ?_8
			[
				child-0:*n:State -> ({ state ( *n:State ) })	#children:4[16,126]4	7.038538774198396E11	info:[8, 4, 16, 126, 27, 1]states_4 that_5 border_6 texas_7
				[
					child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[15,127]3	3.160393642744703E9	info:[8, 2, 15, 127, 27, 1]border_6 texas_7
					[
						child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[14,123]2	3.273583459538019E9	info:[8, 1, 14, 123, 27, 1]texas_7
						[
							child-0:*n:StateName -> ({ ' texas ' })	#children:1[13,92]1	1.0	info:[8, 1, 13, 92, 26, 1]texas_7
						]
					]
				]
			]
		]
	]
]

output:	answer(river(loc_2(state(next_to_2(stateid('texas'))))))
predic:	answer(river(loc_2(state(next_to_2(stateid('texas'))))))
200:	true
=INPUT=
what state is austin in ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	0.0	null
		[
			child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:3[17,172]3	0.0	null
			[
				child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[16,147]2	0.0	null
				[
					child-0:*n:CityName -> ({ ' austin ' })	#children:1[15,30]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	0.07833114160988833	info:[7, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.03499598588247393	info:[6, 6, 19, 135, 27, 1]what_0 state_1 is_2 austin_3 in_4 ?_5
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	4.742522962577527E-5	info:[6, 5, 18, 126, 27, 1]state_1 is_2 austin_3 in_4 ?_5
		[
			child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:3[17,172]3	3.300755548516047E-5	info:[6, 4, 17, 172, 27, 1]is_2 austin_3 in_4 ?_5
			[
				child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[16,147]2	72102.42018085228	info:[4, 1, 16, 147, 27, 1]austin_3
				[
					child-0:*n:CityName -> ({ ' austin ' })	#children:1[15,30]1	1.0	info:[4, 1, 15, 30, 26, 1]austin_3
				]
			]
		]
	]
]

output:	answer(state(loc_1(cityid('austin',_))))
predic:	answer(state(loc_1(cityid('austin',_))))
216:	true
=INPUT=
what states border the state with the smallest area ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	0.0	null
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[17,127]3	0.0	null
			[
				child-0:*n:State -> ({ smallest_one ( area_1 ( *n:State ) ) })	#children:2[16,203]2	0.0	null
				[
					child-0:*n:State -> ({ state ( all ) })	#children:1[15,141]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	8.705139005333173E-7	info:[11, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	3.8891929247352545E-7	info:[10, 10, 19, 135, 27, 1]what_0 states_1 border_2 the_3 state_4 with_5 the_6 smallest_7 area_8 ?_9
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	3.0952197135031254E-12	info:[10, 9, 18, 126, 27, 1]states_1 border_2 the_3 state_4 with_5 the_6 smallest_7 area_8 ?_9
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[17,127]3	1.0465839214685402E-11	info:[10, 8, 17, 127, 27, 1]border_2 the_3 state_4 with_5 the_6 smallest_7 area_8 ?_9
			[
				child-0:*n:State -> ({ smallest_one ( area_1 ( *n:State ) ) })	#children:2[16,203]2	3.456357600072685E-11	info:[10, 7, 16, 203, 27, 1]the_3 state_4 with_5 the_6 smallest_7 area_8 ?_9
				[
					child-0:*n:State -> ({ state ( all ) })	#children:1[15,141]1	0.044366595542175494	info:[5, 1, 15, 141, 26, 1]state_4
				]
			]
		]
	]
]

output:	answer(state(next_to_2(smallest_one(area_1(state(all))))))
predic:	answer(state(next_to_2(smallest_one(area_1(state(all))))))
232:	true
=INPUT=
where is the highest mountain of the united states ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	0.0	null
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	0.0	null
		[
			child-0:*n:Place -> ({ mountain ( *n:Place ) })	#children:4[17,197]4	0.0	null
			[
				child-0:*n:Place -> ({ loc_2 ( *n:Country ) })	#children:3[16,183]3	0.0	null
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	0.0	null
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	1.608078312341067E8	info:[11, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	2.2260935133737084E8	info:[10, 10, 19, 124, 27, 1]where_0 is_1 the_2 highest_3 mountain_4 of_5 the_6 united_7 states_8 ?_9
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	2.6890024202352397E7	info:[10, 9, 18, 132, 27, 1]is_1 the_2 highest_3 mountain_4 of_5 the_6 united_7 states_8 ?_9
		[
			child-0:*n:Place -> ({ mountain ( *n:Place ) })	#children:4[17,197]4	2967.2293108918334	info:[10, 6, 17, 197, 27, 1]mountain_4 of_5 the_6 united_7 states_8 ?_9
			[
				child-0:*n:Place -> ({ loc_2 ( *n:Country ) })	#children:3[16,183]3	17.217231415063242	info:[10, 5, 16, 183, 27, 1]of_5 the_6 united_7 states_8 ?_9
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	1725.6227480932034	info:[9, 2, 15, 137, 27, 1]united_7 states_8
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	213.70290192227841	info:[9, 2, 14, 34, 26, 1]united_7 states_8
					]
				]
			]
		]
	]
]

output:	answer(highest(mountain(loc_2(countryid('usa')))))
predic:	answer(highest(mountain(loc_2(countryid('usa')))))
248:	true
=INPUT=
which rivers run through states that border the state with the capital austin ?
=OUTPUT=
ROOT	#children:11[20,1000]11	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:10[19,128]10	0.0	null
	[
		child-0:*n:River -> ({ river ( *n:River ) })	#children:9[18,129]9	0.0	null
		[
			child-0:*n:River -> ({ traverse_2 ( *n:State ) })	#children:8[17,163]8	0.0	null
			[
				child-0:*n:State -> ({ state ( *n:State ) })	#children:7[16,126]7	0.0	null
				[
					child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:6[15,127]6	0.0	null
					[
						child-0:*n:State -> ({ state ( *n:State ) })	#children:5[14,126]5	0.0	null
						[
							child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:4[13,172]4	0.0	null
							[
								child-0:*n:City -> ({ capital ( *n:City ) })	#children:3[12,131]3	0.0	null
								[
									child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[11,147]2	0.0	null
									[
										child-0:*n:CityName -> ({ ' austin ' })	#children:1[10,30]1	0.0	null
									]
								]
							]
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:11[20,1000]11	6.896649178644185E9	info:[15, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:10[19,128]10	2.9970876901488733E9	info:[14, 14, 19, 128, 27, 1]which_0 rivers_1 run_2 through_3 states_4 that_5 border_6 the_7 state_8 with_9 the_10 capital_11 austin_12 ?_13
	[
		child-0:*n:River -> ({ river ( *n:River ) })	#children:9[18,129]9	732920.0889740355	info:[14, 13, 18, 129, 27, 1]rivers_1 run_2 through_3 states_4 that_5 border_6 the_7 state_8 with_9 the_10 capital_11 austin_12 ?_13
		[
			child-0:*n:River -> ({ traverse_2 ( *n:State ) })	#children:8[17,163]8	62875.38924073327	info:[14, 12, 17, 163, 27, 1]run_2 through_3 states_4 that_5 border_6 the_7 state_8 with_9 the_10 capital_11 austin_12 ?_13
			[
				child-0:*n:State -> ({ state ( *n:State ) })	#children:7[16,126]7	3.480881455471023	info:[14, 10, 16, 126, 27, 1]states_4 that_5 border_6 the_7 state_8 with_9 the_10 capital_11 austin_12 ?_13
				[
					child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:6[15,127]6	7.29125980755924E-4	info:[14, 8, 15, 127, 27, 1]border_6 the_7 state_8 with_9 the_10 capital_11 austin_12 ?_13
					[
						child-0:*n:State -> ({ state ( *n:State ) })	#children:5[14,126]5	598.635130425486	info:[14, 6, 14, 126, 27, 1]state_8 with_9 the_10 capital_11 austin_12 ?_13
						[
							child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:4[13,172]4	20.75611599270351	info:[14, 5, 13, 172, 27, 1]with_9 the_10 capital_11 austin_12 ?_13
							[
								child-0:*n:City -> ({ capital ( *n:City ) })	#children:3[12,131]3	8.505764129720376E8	info:[13, 2, 12, 131, 27, 1]capital_11 austin_12
								[
									child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[11,147]2	72102.42018085228	info:[13, 1, 11, 147, 27, 1]austin_12
									[
										child-0:*n:CityName -> ({ ' austin ' })	#children:1[10,30]1	1.0	info:[13, 1, 10, 30, 26, 1]austin_12
									]
								]
							]
						]
					]
				]
			]
		]
	]
]

output:	answer(river(traverse_2(state(next_to_2(state(loc_1(capital(cityid('austin',_)))))))))
predic:	answer(river(traverse_2(state(next_to_2(state(loc_1(capital(cityid('austin',_)))))))))
264:	true
=INPUT=
which state has the most population ?
=OUTPUT=
ROOT	#children:4[20,1000]4	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	0.0	null
	[
		child-0:*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })	#children:2[18,169]2	0.0	null
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	0.0	null
		]
	]
]

=PREDICTION=
ROOT	#children:4[20,1000]4	16.34699712412773	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	7.303344095582515	info:[7, 7, 19, 135, 27, 1]which_0 state_1 has_2 the_3 most_4 population_5 ?_6
	[
		child-0:*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })	#children:2[18,169]2	0.008033913386008406	info:[7, 6, 18, 169, 27, 1]state_1 has_2 the_3 most_4 population_5 ?_6
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	3.003886394420056	info:[2, 1, 17, 141, 26, 1]state_1
		]
	]
]

output:	answer(largest_one(population_1(state(all))))
predic:	answer(largest_one(population_1(state(all))))
280:	false
=INPUT=
which us city has the highest population density ?
=OUTPUT=
ROOT	#children:4[20,1000]4	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:3[19,120]3	0.0	null
	[
		child-0:*n:City -> ({ largest_one ( density_1 ( *n:City ) ) })	#children:2[18,0]2	0.0	null
		[
			child-0:*n:City -> ({ city ( all ) })	#children:1[17,160]1	0.0	null
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	3588.187703001102	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	3048.323413435159	info:[9, 9, 19, 120, 27, 1]which_0 us_1 city_2 has_3 the_4 highest_5 population_6 density_7 ?_8
	[
		child-0:*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })	#children:5[18,188]5	31.076569807932863	info:[9, 8, 18, 188, 27, 1]us_1 city_2 has_3 the_4 highest_5 population_6 density_7 ?_8
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	174.65254302481617	info:[3, 2, 17, 121, 27, 1]us_1 city_2
			[
				child-0:*n:City -> ({ loc_2 ( *n:Country ) })	#children:3[16,138]3	5.814923830733231	info:[2, 1, 16, 138, 27, 1]us_1
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	8.074868111621592	info:[2, 1, 15, 137, 27, 1]us_1
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	1.0	info:[2, 1, 14, 34, 26, 1]us_1
					]
				]
			]
		]
	]
]

output:	answer(largest_one(density_1(city(all))))
predic:	answer(largest_one(population_1(city(loc_2(countryid('usa'))))))
9:	true
=INPUT=
how large is texas ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ size ( *n:State ) })	#children:3[18,145]3	0.0	null
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	0.0	null
			[
				child-0:*n:StateName -> ({ ' texas ' })	#children:1[16,92]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	1.9007654697773003E14	info:[6, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	1.0558424416687181E15	info:[5, 5, 19, 144, 27, 1]how_0 large_1 is_2 texas_3 ?_4
	[
		child-0:*n:Num -> ({ size ( *n:State ) })	#children:3[18,145]3	1811575.0565820553	info:[5, 2, 18, 145, 27, 1]texas_3 ?_4
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	3.273583459538019E9	info:[4, 1, 17, 123, 27, 1]texas_3
			[
				child-0:*n:StateName -> ({ ' texas ' })	#children:1[16,92]1	1.0	info:[4, 1, 16, 92, 26, 1]texas_3
			]
		]
	]
]

output:	answer(size(stateid('texas')))
predic:	answer(size(stateid('texas')))
25:	true
=INPUT=
how many people live in the biggest city in new york state ?
=OUTPUT=
ROOT	#children:9[20,1000]9	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:8[19,144]8	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:7[18,159]7	0.0	null
		[
			child-0:*n:City -> ({ largest ( *n:City ) })	#children:6[17,150]6	0.0	null
			[
				child-0:*n:City -> ({ city ( *n:City ) })	#children:5[16,121]5	0.0	null
				[
					child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:4[15,122]4	0.0	null
					[
						child-0:*n:State -> ({ state ( *n:State ) })	#children:3[14,126]3	0.0	null
						[
							child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[13,123]2	0.0	null
							[
								child-0:*n:StateName -> ({ ' new york ' })	#children:1[12,112]1	0.0	null
							]
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:9[20,1000]9	3.172044507617412E14	info:[14, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:8[19,144]8	1.7620160252579798E15	info:[13, 13, 19, 144, 27, 1]how_0 many_1 people_2 live_3 in_4 the_5 biggest_6 city_7 in_8 new_9 york_10 state_11 ?_12
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:7[18,159]7	2.3113171598664004E7	info:[13, 11, 18, 159, 27, 1]people_2 live_3 in_4 the_5 biggest_6 city_7 in_8 new_9 york_10 state_11 ?_12
		[
			child-0:*n:City -> ({ largest ( *n:City ) })	#children:6[17,150]6	3572.734870005083	info:[13, 7, 17, 150, 27, 1]biggest_6 city_7 in_8 new_9 york_10 state_11 ?_12
			[
				child-0:*n:City -> ({ city ( *n:City ) })	#children:5[16,121]5	0.44318389532847724	info:[13, 6, 16, 121, 27, 1]city_7 in_8 new_9 york_10 state_11 ?_12
				[
					child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:4[15,122]4	7.172889359657347E-5	info:[13, 5, 15, 122, 27, 1]in_8 new_9 york_10 state_11 ?_12
					[
						child-0:*n:State -> ({ state ( *n:State ) })	#children:3[14,126]3	2383.470476541846	info:[12, 3, 14, 126, 27, 1]new_9 york_10 state_11
						[
							child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[13,123]2	4.346536493439508E7	info:[11, 2, 13, 123, 27, 1]new_9 york_10
							[
								child-0:*n:StateName -> ({ ' new york ' })	#children:1[12,112]1	0.01327761013935751	info:[11, 2, 12, 112, 26, 1]new_9 york_10
							]
						]
					]
				]
			]
		]
	]
]

output:	answer(population_1(largest(city(loc_2(state(stateid('newyork')))))))
predic:	answer(population_1(largest(city(loc_2(state(stateid('newyork')))))))
41:	true
=INPUT=
how many states does usa have ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	0.0	null
	[
		child-0:*n:Num -> ({ count ( *n:State ) })	#children:5[18,176]5	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	0.0	null
			[
				child-0:*n:State -> ({ loc_2 ( *n:Country ) })	#children:3[16,136]3	0.0	null
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	0.0	null
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	6.997291697446878E9	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	3.88687487666016E10	info:[7, 7, 19, 144, 27, 1]how_0 many_1 states_2 does_3 usa_4 have_5 ?_6
	[
		child-0:*n:Num -> ({ count ( *n:State ) })	#children:5[18,176]5	2.4380229961899738	info:[7, 5, 18, 176, 27, 1]states_2 does_3 usa_4 have_5 ?_6
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	0.0030337873192136486	info:[7, 5, 17, 126, 27, 1]states_2 does_3 usa_4 have_5 ?_6
			[
				child-0:*n:State -> ({ loc_2 ( *n:Country ) })	#children:3[16,136]3	3.153198201592572E-6	info:[7, 4, 16, 136, 27, 1]does_3 usa_4 have_5 ?_6
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	8.074868111621592	info:[5, 1, 15, 137, 27, 1]usa_4
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	1.0	info:[5, 1, 14, 34, 26, 1]usa_4
					]
				]
			]
		]
	]
]

output:	answer(count(state(loc_2(countryid('usa')))))
predic:	answer(count(state(loc_2(countryid('usa')))))
57:	true
=INPUT=
what are the cities in states through which the mississippi runs ?
=OUTPUT=
ROOT	#children:8[20,1000]8	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:7[19,120]7	0.0	null
	[
		child-0:*n:City -> ({ city ( *n:City ) })	#children:6[18,121]6	0.0	null
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:5[17,122]5	0.0	null
			[
				child-0:*n:State -> ({ state ( *n:State ) })	#children:4[16,126]4	0.0	null
				[
					child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:3[15,181]3	0.0	null
					[
						child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[14,152]2	0.0	null
						[
							child-0:*n:RiverName -> ({ ' mississippi ' })	#children:1[13,84]1	0.0	null
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:8[20,1000]8	1.075488324193073E23	info:[13, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:7[19,120]7	9.136746767098769E22	info:[12, 12, 19, 120, 27, 1]what_0 are_1 the_2 cities_3 in_4 states_5 through_6 which_7 the_8 mississippi_9 runs_10 ?_11
	[
		child-0:*n:City -> ({ city ( *n:City ) })	#children:6[18,121]6	1.5624805090335674E20	info:[12, 9, 18, 121, 27, 1]cities_3 in_4 states_5 through_6 which_7 the_8 mississippi_9 runs_10 ?_11
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:5[17,122]5	6.8348265166780083E17	info:[12, 8, 17, 122, 27, 1]in_4 states_5 through_6 which_7 the_8 mississippi_9 runs_10 ?_11
			[
				child-0:*n:State -> ({ state ( *n:State ) })	#children:4[16,126]4	9.556876193461535E19	info:[11, 6, 16, 126, 27, 1]states_5 through_6 which_7 the_8 mississippi_9 runs_10
				[
					child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:3[15,181]3	4.7189205560131078E17	info:[11, 5, 15, 181, 27, 1]through_6 which_7 the_8 mississippi_9 runs_10
					[
						child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[14,152]2	1.1954283726525978E11	info:[10, 2, 14, 152, 27, 1]the_8 mississippi_9
						[
							child-0:*n:RiverName -> ({ ' mississippi ' })	#children:1[13,84]1	1.0	info:[10, 1, 13, 84, 26, 1]mississippi_9
						]
					]
				]
			]
		]
	]
]

output:	answer(city(loc_2(state(traverse_1(riverid('mississippi'))))))
predic:	answer(city(loc_2(state(traverse_1(riverid('mississippi'))))))
73:	true
=INPUT=
what are the populations of the major cities of texas ?
=OUTPUT=
ROOT	#children:8[20,1000]8	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:7[19,144]7	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:6[18,159]6	0.0	null
		[
			child-0:*n:City -> ({ major ( *n:City ) })	#children:5[17,156]5	0.0	null
			[
				child-0:*n:City -> ({ city ( *n:City ) })	#children:4[16,121]4	0.0	null
				[
					child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[15,122]3	0.0	null
					[
						child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[14,123]2	0.0	null
						[
							child-0:*n:StateName -> ({ ' texas ' })	#children:1[13,92]1	0.0	null
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:8[20,1000]8	4.6054826402218094E14	info:[12, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:7[19,144]7	2.558266189717985E15	info:[11, 11, 19, 144, 27, 1]what_0 are_1 the_2 populations_3 of_4 the_5 major_6 cities_7 of_8 texas_9 ?_10
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:6[18,159]6	3.8731268367242611E17	info:[11, 10, 18, 159, 27, 1]are_1 the_2 populations_3 of_4 the_5 major_6 cities_7 of_8 texas_9 ?_10
		[
			child-0:*n:City -> ({ major ( *n:City ) })	#children:5[17,156]5	1.0156721637167927E12	info:[11, 5, 17, 156, 27, 1]major_6 cities_7 of_8 texas_9 ?_10
			[
				child-0:*n:City -> ({ city ( *n:City ) })	#children:4[16,121]4	6.013359708738724E8	info:[11, 4, 16, 121, 27, 1]cities_7 of_8 texas_9 ?_10
				[
					child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[15,122]3	2305015.2642635163	info:[11, 3, 15, 122, 27, 1]of_8 texas_9 ?_10
					[
						child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[14,123]2	3.273583459538019E9	info:[10, 1, 14, 123, 27, 1]texas_9
						[
							child-0:*n:StateName -> ({ ' texas ' })	#children:1[13,92]1	1.0	info:[10, 1, 13, 92, 26, 1]texas_9
						]
					]
				]
			]
		]
	]
]

output:	answer(population_1(major(city(loc_2(stateid('texas'))))))
predic:	answer(population_1(major(city(loc_2(stateid('texas'))))))
89:	true
=INPUT=
what is the capital of iowa ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:5[19,120]5	0.0	null
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:4[18,131]4	0.0	null
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[17,122]3	0.0	null
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	0.0	null
				[
					child-0:*n:StateName -> ({ ' iowa ' })	#children:1[15,17]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	3.697285524983365E10	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:5[19,120]5	3.1410068159297276E10	info:[7, 7, 19, 120, 27, 1]what_0 is_1 the_2 capital_3 of_4 iowa_5 ?_6
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:4[18,131]4	4.1441303465729885E7	info:[7, 4, 18, 131, 27, 1]capital_3 of_4 iowa_5 ?_6
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[17,122]3	3372.355161379991	info:[7, 3, 17, 122, 27, 1]of_4 iowa_5 ?_6
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	3.273583459538019E9	info:[6, 1, 16, 123, 27, 1]iowa_5
				[
					child-0:*n:StateName -> ({ ' iowa ' })	#children:1[15,17]1	1.0	info:[6, 1, 15, 17, 26, 1]iowa_5
				]
			]
		]
	]
]

output:	answer(capital(loc_2(stateid('iowa'))))
predic:	answer(capital(loc_2(stateid('iowa'))))
105:	true
=INPUT=
what is the highest elevation in texas ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	0.0	null
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	0.0	null
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	0.0	null
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[16,134]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' texas ' })	#children:1[14,92]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	8.6157355539326502E17	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	1.19269272412678528E18	info:[8, 8, 19, 124, 27, 1]what_0 is_1 the_2 highest_3 elevation_4 in_5 texas_6 ?_7
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	1.70536097583792608E17	info:[8, 7, 18, 132, 27, 1]is_1 the_2 highest_3 elevation_4 in_5 texas_6 ?_7
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	3.6080487165505725E11	info:[8, 4, 17, 133, 27, 1]elevation_4 in_5 texas_6 ?_7
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[16,134]3	2.361463180408373E8	info:[8, 3, 16, 134, 27, 1]in_5 texas_6 ?_7
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[7, 1, 15, 123, 27, 1]texas_6
					[
						child-0:*n:StateName -> ({ ' texas ' })	#children:1[14,92]1	1.0	info:[7, 1, 14, 92, 26, 1]texas_6
					]
				]
			]
		]
	]
]

output:	answer(highest(place(loc_2(stateid('texas')))))
predic:	answer(highest(place(loc_2(stateid('texas')))))
121:	true
=INPUT=
what is the largest capital city in the usa ?
=OUTPUT=
ROOT	#children:8[20,1000]8	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:7[19,120]7	0.0	null
	[
		child-0:*n:City -> ({ largest ( *n:City ) })	#children:6[18,150]6	0.0	null
		[
			child-0:*n:City -> ({ capital ( *n:City ) })	#children:5[17,131]5	0.0	null
			[
				child-0:*n:City -> ({ city ( *n:City ) })	#children:4[16,121]4	0.0	null
				[
					child-0:*n:City -> ({ loc_2 ( *n:Country ) })	#children:3[15,138]3	0.0	null
					[
						child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[14,137]2	0.0	null
						[
							child-0:*n:CountryName -> ({ ' usa ' })	#children:1[13,34]1	0.0	null
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:8[20,1000]8	4.0259686106298016E11	info:[11, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:7[19,120]7	3.420237566522331E11	info:[10, 10, 19, 120, 27, 1]what_0 is_1 the_2 largest_3 capital_4 city_5 in_6 the_7 usa_8 ?_9
	[
		child-0:*n:City -> ({ largest ( *n:City ) })	#children:6[18,150]6	1.7638086850656137E8	info:[10, 7, 18, 150, 27, 1]largest_3 capital_4 city_5 in_6 the_7 usa_8 ?_9
		[
			child-0:*n:City -> ({ capital ( *n:City ) })	#children:5[17,131]5	206222.88930860546	info:[10, 6, 17, 131, 27, 1]capital_4 city_5 in_6 the_7 usa_8 ?_9
			[
				child-0:*n:City -> ({ city ( *n:City ) })	#children:4[16,121]4	137.44960797032246	info:[10, 5, 16, 121, 27, 1]city_5 in_6 the_7 usa_8 ?_9
				[
					child-0:*n:City -> ({ loc_2 ( *n:Country ) })	#children:3[15,138]3	0.022047161845625423	info:[10, 4, 15, 138, 27, 1]in_6 the_7 usa_8 ?_9
					[
						child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[14,137]2	8.074868111621592	info:[9, 1, 14, 137, 27, 1]usa_8
						[
							child-0:*n:CountryName -> ({ ' usa ' })	#children:1[13,34]1	1.0	info:[9, 1, 13, 34, 26, 1]usa_8
						]
					]
				]
			]
		]
	]
]

output:	answer(largest(capital(city(loc_2(countryid('usa'))))))
predic:	answer(largest(capital(city(loc_2(countryid('usa'))))))
137:	false
=INPUT=
what is the longest river in the state with the most major cities ?
=OUTPUT=
ROOT	#children:10[20,1000]10	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:9[19,128]9	0.0	null
	[
		child-0:*n:River -> ({ longest ( *n:River ) })	#children:8[18,142]8	0.0	null
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:7[17,129]7	0.0	null
			[
				child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:6[16,130]6	0.0	null
				[
					child-0:*n:State -> ({ most ( *n:State ) })	#children:5[15,179]5	0.0	null
					[
						child-0:*n:State -> ({ state ( *n:State ) })	#children:4[14,126]4	0.0	null
						[
							child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:3[13,172]3	0.0	null
							[
								child-0:*n:City -> ({ major ( *n:City ) })	#children:2[12,156]2	0.0	null
								[
									child-0:*n:City -> ({ city ( all ) })	#children:1[11,160]1	0.0	null
								]
							]
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:9[20,1000]9	0.2121991395881265	info:[15, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:8[19,128]8	0.09221571413101558	info:[14, 14, 19, 128, 27, 1]what_0 is_1 the_2 longest_3 river_4 in_5 the_6 state_7 with_8 the_9 most_10 major_11 cities_12 ?_13
	[
		child-0:*n:River -> ({ longest ( *n:River ) })	#children:7[18,142]7	5.90987769690084E-4	info:[14, 13, 18, 142, 27, 1]is_1 the_2 longest_3 river_4 in_5 the_6 state_7 with_8 the_9 most_10 major_11 cities_12 ?_13
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:6[17,129]6	6.520631812982442E-8	info:[14, 10, 17, 129, 27, 1]river_4 in_5 the_6 state_7 with_8 the_9 most_10 major_11 cities_12 ?_13
			[
				child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:5[16,130]5	9.369216373565454E-9	info:[14, 9, 16, 130, 27, 1]in_5 the_6 state_7 with_8 the_9 most_10 major_11 cities_12 ?_13
				[
					child-0:*n:State -> ({ most ( *n:State ) })	#children:4[15,179]4	3.4078774779178044E-5	info:[13, 7, 15, 179, 27, 1]the_6 state_7 with_8 the_9 most_10 major_11 cities_12
					[
						child-0:*n:State -> ({ state ( *n:State ) })	#children:3[14,126]3	2.5895588161345963E-5	info:[10, 3, 14, 126, 27, 1]state_7 with_8 the_9
						[
							child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:2[13,181]2	2.824750926520238E-6	info:[10, 2, 13, 181, 27, 1]with_8 the_9
							[
								child-0:*n:River -> ({ river ( all ) })	#children:1[12,171]1	4.288997827741815E-4	info:[9, 1, 12, 171, 26, 1]with_8
							]
						]
					]
				]
			]
		]
	]
]

output:	answer(longest(river(loc_2(most(state(loc_1(major(city(all)))))))))
predic:	answer(longest(river(loc_2(most(state(traverse_1(river(all))))))))
153:	true
=INPUT=
what is the population density of the largest state ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ density_1 ( *n:State ) })	#children:3[18,196]3	0.0	null
		[
			child-0:*n:State -> ({ largest ( *n:State ) })	#children:2[17,140]2	0.0	null
			[
				child-0:*n:State -> ({ state ( all ) })	#children:1[16,141]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	8.931912040950872	info:[11, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	49.615231168907464	info:[10, 10, 19, 144, 27, 1]what_0 is_1 the_2 population_3 density_4 of_5 the_6 largest_7 state_8 ?_9
	[
		child-0:*n:Num -> ({ density_1 ( *n:State ) })	#children:3[18,196]3	2.9629694212291545E8	info:[9, 9, 18, 196, 27, 1]what_0 is_1 the_2 population_3 density_4 of_5 the_6 largest_7 state_8
		[
			child-0:*n:State -> ({ largest ( *n:State ) })	#children:2[17,140]2	0.0806739344074841	info:[9, 2, 17, 140, 27, 1]largest_7 state_8
			[
				child-0:*n:State -> ({ state ( all ) })	#children:1[16,141]1	1.903936515818124E-5	info:[9, 1, 16, 141, 26, 1]state_8
			]
		]
	]
]

output:	answer(density_1(largest(state(all))))
predic:	answer(density_1(largest(state(all))))
169:	true
=INPUT=
what is the population of utah ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:3[18,158]3	0.0	null
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	0.0	null
			[
				child-0:*n:StateName -> ({ ' utah ' })	#children:1[16,65]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	7.035548587347293E7	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	3.908125919298176E8	info:[7, 7, 19, 144, 27, 1]what_0 is_1 the_2 population_3 of_4 utah_5 ?_6
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:3[18,158]3	4.316357234646732E15	info:[6, 6, 18, 158, 27, 1]what_0 is_1 the_2 population_3 of_4 utah_5
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	3.273583459538019E9	info:[6, 1, 17, 123, 27, 1]utah_5
			[
				child-0:*n:StateName -> ({ ' utah ' })	#children:1[16,65]1	1.0	info:[6, 1, 16, 65, 26, 1]utah_5
			]
		]
	]
]

output:	answer(population_1(stateid('utah')))
predic:	answer(population_1(stateid('utah')))
185:	true
=INPUT=
what rivers are in texas ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:5[19,128]5	0.0	null
	[
		child-0:*n:River -> ({ river ( *n:River ) })	#children:4[18,129]4	0.0	null
		[
			child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:3[17,130]3	0.0	null
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	0.0	null
				[
					child-0:*n:StateName -> ({ ' texas ' })	#children:1[15,92]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	9.218185167685495E7	info:[7, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:5[19,128]5	4.0059612394282274E7	info:[6, 6, 19, 128, 27, 1]what_0 rivers_1 are_2 in_3 texas_4 ?_5
	[
		child-0:*n:River -> ({ river ( *n:River ) })	#children:4[18,129]4	92890.69839216364	info:[6, 5, 18, 129, 27, 1]rivers_1 are_2 in_3 texas_4 ?_5
		[
			child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:3[17,130]3	116520.42579197121	info:[6, 4, 17, 130, 27, 1]are_2 in_3 texas_4 ?_5
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	3.273583459538019E9	info:[5, 1, 16, 123, 27, 1]texas_4
				[
					child-0:*n:StateName -> ({ ' texas ' })	#children:1[15,92]1	1.0	info:[5, 1, 15, 92, 26, 1]texas_4
				]
			]
		]
	]
]

output:	answer(river(loc_2(stateid('texas'))))
predic:	answer(river(loc_2(stateid('texas'))))
201:	true
=INPUT=
what state is miami in ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	0.0	null
		[
			child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:3[17,172]3	0.0	null
			[
				child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[16,147]2	0.0	null
				[
					child-0:*n:CityName -> ({ ' miami ' })	#children:1[15,20]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	8.752145551102655E-4	info:[7, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	3.910194028234105E-4	info:[6, 6, 19, 135, 27, 1]what_0 state_1 is_2 miami_3 in_4 ?_5
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	5.298946293243525E-7	info:[6, 5, 18, 126, 27, 1]state_1 is_2 miami_3 in_4 ?_5
		[
			child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:3[17,172]3	3.688021442748305E-7	info:[6, 4, 17, 172, 27, 1]is_2 miami_3 in_4 ?_5
			[
				child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[16,147]2	72102.42018085228	info:[4, 1, 16, 147, 27, 1]miami_3
				[
					child-0:*n:CityName -> ({ ' miami ' })	#children:1[15,20]1	1.0	info:[4, 1, 15, 20, 26, 1]miami_3
				]
			]
		]
	]
]

output:	answer(state(loc_1(cityid('miami',_))))
predic:	answer(state(loc_1(cityid('miami',_))))
217:	false
=INPUT=
what states contain at least one major rivers ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	0.0	null
		[
			child-0:*n:State -> ({ loc_1 ( *n:River ) })	#children:3[17,182]3	0.0	null
			[
				child-0:*n:River -> ({ major ( *n:River ) })	#children:2[16,162]2	0.0	null
				[
					child-0:*n:River -> ({ river ( all ) })	#children:1[15,171]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	677302.7207216009	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	302598.37869568524	info:[9, 9, 19, 135, 27, 1]what_0 states_1 contain_2 at_3 least_4 one_5 major_6 rivers_7 ?_8
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	2.4082334950681985	info:[9, 8, 18, 126, 27, 1]states_1 contain_2 at_3 least_4 one_5 major_6 rivers_7 ?_8
		[
			child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:3[17,181]3	0.028868983610860613	info:[9, 7, 17, 181, 27, 1]contain_2 at_3 least_4 one_5 major_6 rivers_7 ?_8
			[
				child-0:*n:River -> ({ major ( *n:River ) })	#children:2[16,162]2	5.376479595296805E-4	info:[8, 3, 16, 162, 27, 1]one_5 major_6 rivers_7
				[
					child-0:*n:River -> ({ river ( all ) })	#children:1[15,171]1	5.127226851991763E-7	info:[8, 1, 15, 171, 26, 1]rivers_7
				]
			]
		]
	]
]

output:	answer(state(loc_1(major(river(all)))))
predic:	answer(state(traverse_1(major(river(all)))))
233:	true
=INPUT=
where is the highest point in hawaii ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	0.0	null
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	0.0	null
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	0.0	null
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[16,134]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' hawaii ' })	#children:1[14,101]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	1.29137150352344832E17	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	1.78767023054004448E17	info:[8, 8, 19, 124, 27, 1]where_0 is_1 the_2 highest_3 point_4 in_5 hawaii_6 ?_7
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	2.1594104414865516E16	info:[8, 7, 18, 132, 27, 1]is_1 the_2 highest_3 point_4 in_5 hawaii_6 ?_7
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	1.0583580180852637E11	info:[8, 4, 17, 133, 27, 1]point_4 in_5 hawaii_6 ?_7
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[16,134]3	2.377578741261426E7	info:[8, 3, 16, 134, 27, 1]in_5 hawaii_6 ?_7
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[7, 1, 15, 123, 27, 1]hawaii_6
					[
						child-0:*n:StateName -> ({ ' hawaii ' })	#children:1[14,101]1	1.0	info:[7, 1, 14, 101, 26, 1]hawaii_6
					]
				]
			]
		]
	]
]

output:	answer(highest(place(loc_2(stateid('hawaii')))))
predic:	answer(highest(place(loc_2(stateid('hawaii')))))
249:	false
=INPUT=
which rivers run through states with fewest cities ?
=OUTPUT=
ROOT	#children:8[20,1000]8	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:7[19,128]7	0.0	null
	[
		child-0:*n:River -> ({ river ( *n:River ) })	#children:6[18,129]6	0.0	null
		[
			child-0:*n:River -> ({ traverse_2 ( *n:State ) })	#children:5[17,163]5	0.0	null
			[
				child-0:*n:State -> ({ fewest ( *n:State ) })	#children:4[16,206]4	0.0	null
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:3[15,126]3	0.0	null
					[
						child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:2[14,172]2	0.0	null
						[
							child-0:*n:City -> ({ city ( all ) })	#children:1[13,160]1	0.0	null
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:8[20,1000]8	0.14371543006546073	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:7[19,128]7	0.06245464067788352	info:[9, 9, 19, 128, 27, 1]which_0 rivers_1 run_2 through_3 states_4 with_5 fewest_6 cities_7 ?_8
	[
		child-0:*n:River -> ({ river ( *n:River ) })	#children:6[18,129]6	1.527291341956104E-5	info:[9, 8, 18, 129, 27, 1]rivers_1 run_2 through_3 states_4 with_5 fewest_6 cities_7 ?_8
		[
			child-0:*n:River -> ({ traverse_2 ( *n:State ) })	#children:5[17,163]5	1.3102252080976048E-6	info:[9, 7, 17, 163, 27, 1]run_2 through_3 states_4 with_5 fewest_6 cities_7 ?_8
			[
				child-0:*n:State -> ({ most ( *n:State ) })	#children:4[16,179]4	3.3130121758645632E-6	info:[8, 4, 16, 179, 27, 1]states_4 with_5 fewest_6 cities_7
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:3[15,126]3	0.138796741333926	info:[6, 2, 15, 126, 27, 1]states_4 with_5
					[
						child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:2[14,172]2	1.1143044602441357E-4	info:[6, 1, 14, 172, 27, 1]with_5
						[
							child-0:*n:City -> ({ city ( all ) })	#children:1[13,160]1	0.07218546730895178	info:[6, 1, 13, 160, 26, 1]with_5
						]
					]
				]
			]
		]
	]
]

output:	answer(river(traverse_2(fewest(state(loc_1(city(all)))))))
predic:	answer(river(traverse_2(most(state(loc_1(city(all)))))))
265:	false
=INPUT=
which state has the most rivers ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ most ( *n:State ) })	#children:4[18,179]4	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:3[17,126]3	0.0	null
			[
				child-0:*n:State -> ({ loc_1 ( *n:River ) })	#children:2[16,182]2	0.0	null
				[
					child-0:*n:River -> ({ river ( all ) })	#children:1[15,171]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	0.05549598051644557	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.024793926282346005	info:[7, 7, 19, 135, 27, 1]which_0 state_1 has_2 the_3 most_4 rivers_5 ?_6
	[
		child-0:*n:State -> ({ most ( *n:State ) })	#children:4[18,179]4	15.407134125007872	info:[6, 6, 18, 179, 27, 1]which_0 state_1 has_2 the_3 most_4 rivers_5
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:3[17,126]3	0.8655079900570529	info:[4, 3, 17, 126, 27, 1]state_1 has_2 the_3
			[
				child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:2[16,172]2	8.627050791785631E-4	info:[4, 2, 16, 172, 27, 1]has_2 the_3
				[
					child-0:*n:City -> ({ city ( all ) })	#children:1[15,160]1	0.023885228644923158	info:[4, 1, 15, 160, 26, 1]the_3
				]
			]
		]
	]
]

output:	answer(most(state(loc_1(river(all)))))
predic:	answer(most(state(loc_1(city(all)))))
10:	true
=INPUT=
how long is the colorado river ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:5[19,144]5	0.0	null
	[
		child-0:*n:Num -> ({ len ( *n:River ) })	#children:4[18,151]4	0.0	null
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:3[17,129]3	0.0	null
			[
				child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[16,152]2	0.0	null
				[
					child-0:*n:RiverName -> ({ ' colorado ' })	#children:1[15,110]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	3.523981161045946E7	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:5[19,144]5	1.9575107674432027E8	info:[7, 7, 19, 144, 27, 1]how_0 long_1 is_2 the_3 colorado_4 river_5 ?_6
	[
		child-0:*n:Num -> ({ len ( *n:River ) })	#children:4[18,151]4	90162.27512336032	info:[7, 6, 18, 151, 27, 1]long_1 is_2 the_3 colorado_4 river_5 ?_6
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:3[17,129]3	128921.96416529693	info:[6, 3, 17, 129, 27, 1]the_3 colorado_4 river_5
			[
				child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[16,152]2	4.984674283470749E7	info:[5, 2, 16, 152, 27, 1]the_3 colorado_4
				[
					child-0:*n:RiverName -> ({ ' colorado ' })	#children:1[15,110]1	1.0	info:[5, 1, 15, 110, 26, 1]colorado_4
				]
			]
		]
	]
]

output:	answer(len(river(riverid('colorado'))))
predic:	answer(len(river(riverid('colorado'))))
26:	true
=INPUT=
how many people live in the capital of texas ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:5[18,159]5	0.0	null
		[
			child-0:*n:City -> ({ capital ( *n:City ) })	#children:4[17,131]4	0.0	null
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[16,122]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' texas ' })	#children:1[14,92]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	4.654593452459958E20	info:[11, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	2.585546399049616E21	info:[10, 10, 19, 144, 27, 1]how_0 many_1 people_2 live_3 in_4 the_5 capital_6 of_7 texas_8 ?_9
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:5[18,159]5	3.3915796871819918E13	info:[10, 8, 18, 159, 27, 1]people_2 live_3 in_4 the_5 capital_6 of_7 texas_8 ?_9
		[
			child-0:*n:City -> ({ capital ( *n:City ) })	#children:4[17,131]4	4.972649778836745E10	info:[10, 4, 17, 131, 27, 1]capital_6 of_7 texas_8 ?_9
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[16,122]3	4046576.6626435462	info:[10, 3, 16, 122, 27, 1]of_7 texas_8 ?_9
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[9, 1, 15, 123, 27, 1]texas_8
					[
						child-0:*n:StateName -> ({ ' texas ' })	#children:1[14,92]1	1.0	info:[9, 1, 14, 92, 26, 1]texas_8
					]
				]
			]
		]
	]
]

output:	answer(population_1(capital(loc_2(stateid('texas')))))
predic:	answer(population_1(capital(loc_2(stateid('texas')))))
42:	true
=INPUT=
how many states have a higher point than the highest point of the state with the largest capital city in the us ?
=OUTPUT=
ROOT	#children:18[20,1000]18	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:17[19,144]17	0.0	null
	[
		child-0:*n:Num -> ({ count ( *n:State ) })	#children:16[18,176]16	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:15[17,126]15	0.0	null
			[
				child-0:*n:State -> ({ loc_1 ( *n:Place ) })	#children:14[16,167]14	0.0	null
				[
					child-0:*n:Place -> ({ place ( *n:Place ) })	#children:13[15,133]13	0.0	null
					[
						child-0:*n:Place -> ({ higher_2 ( *n:Place ) })	#children:12[14,210]12	0.0	null
						[
							child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:11[13,132]11	0.0	null
							[
								child-0:*n:Place -> ({ place ( *n:Place ) })	#children:10[12,133]10	0.0	null
								[
									child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:9[11,134]9	0.0	null
									[
										child-0:*n:State -> ({ state ( *n:State ) })	#children:8[10,126]8	0.0	null
										[
											child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:7[9,172]7	0.0	null
											[
												child-0:*n:City -> ({ largest ( *n:City ) })	#children:6[8,150]6	0.0	null
												[
													child-0:*n:City -> ({ capital ( *n:City ) })	#children:5[7,131]5	0.0	null
													[
														child-0:*n:City -> ({ city ( *n:City ) })	#children:4[6,121]4	0.0	null
														[
															child-0:*n:City -> ({ loc_2 ( *n:Country ) })	#children:3[5,138]3	0.0	null
															[
																child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[4,137]2	0.0	null
																[
																	child-0:*n:CountryName -> ({ ' usa ' })	#children:1[3,34]1	0.0	null
																]
															]
														]
													]
												]
											]
										]
									]
								]
							]
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:18[20,1000]18	4.673592883036936E31	info:[24, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:17[19,144]17	2.5961002551090187E32	info:[23, 23, 19, 144, 27, 1]how_0 many_1 states_2 have_3 a_4 higher_5 point_6 than_7 the_8 highest_9 point_10 of_11 the_12 state_13 with_14 the_15 largest_16 capital_17 city_18 in_19 the_20 us_21 ?_22
	[
		child-0:*n:Num -> ({ count ( *n:State ) })	#children:16[18,176]16	1.6283910141735787E22	info:[23, 21, 18, 176, 27, 1]states_2 have_3 a_4 higher_5 point_6 than_7 the_8 highest_9 point_10 of_11 the_12 state_13 with_14 the_15 largest_16 capital_17 city_18 in_19 the_20 us_21 ?_22
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:15[17,126]15	2.02631066944059E19	info:[23, 21, 17, 126, 27, 1]states_2 have_3 a_4 higher_5 point_6 than_7 the_8 highest_9 point_10 of_11 the_12 state_13 with_14 the_15 largest_16 capital_17 city_18 in_19 the_20 us_21 ?_22
			[
				child-0:*n:State -> ({ loc_1 ( *n:Place ) })	#children:14[16,167]14	2.9992032470859755E15	info:[23, 20, 16, 167, 27, 1]have_3 a_4 higher_5 point_6 than_7 the_8 highest_9 point_10 of_11 the_12 state_13 with_14 the_15 largest_16 capital_17 city_18 in_19 the_20 us_21 ?_22
				[
					child-0:*n:Place -> ({ place ( *n:Place ) })	#children:13[15,133]13	1.7592137910621788E16	info:[23, 19, 15, 133, 27, 1]a_4 higher_5 point_6 than_7 the_8 highest_9 point_10 of_11 the_12 state_13 with_14 the_15 largest_16 capital_17 city_18 in_19 the_20 us_21 ?_22
					[
						child-0:*n:Place -> ({ higher_2 ( *n:Place ) })	#children:12[14,210]12	2.6874334415566616E14	info:[23, 16, 14, 210, 27, 1]than_7 the_8 highest_9 point_10 of_11 the_12 state_13 with_14 the_15 largest_16 capital_17 city_18 in_19 the_20 us_21 ?_22
						[
							child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:11[13,132]11	7.354754368816714E14	info:[23, 15, 13, 132, 27, 1]the_8 highest_9 point_10 of_11 the_12 state_13 with_14 the_15 largest_16 capital_17 city_18 in_19 the_20 us_21 ?_22
							[
								child-0:*n:Place -> ({ place ( *n:Place ) })	#children:10[12,133]10	1.0245684460497194E10	info:[23, 13, 12, 133, 27, 1]point_10 of_11 the_12 state_13 with_14 the_15 largest_16 capital_17 city_18 in_19 the_20 us_21 ?_22
								[
									child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:9[11,134]9	516508.7778238324	info:[23, 12, 11, 134, 27, 1]of_11 the_12 state_13 with_14 the_15 largest_16 capital_17 city_18 in_19 the_20 us_21 ?_22
									[
										child-0:*n:State -> ({ state ( *n:State ) })	#children:8[10,126]8	95514.51285600121	info:[23, 10, 10, 126, 27, 1]state_13 with_14 the_15 largest_16 capital_17 city_18 in_19 the_20 us_21 ?_22
										[
											child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:7[9,172]7	3311.7172833085197	info:[23, 9, 9, 172, 27, 1]with_14 the_15 largest_16 capital_17 city_18 in_19 the_20 us_21 ?_22
											[
												child-0:*n:City -> ({ largest ( *n:City ) })	#children:6[8,150]6	5.8160354316764206E7	info:[23, 7, 8, 150, 27, 1]largest_16 capital_17 city_18 in_19 the_20 us_21 ?_22
												[
													child-0:*n:City -> ({ capital ( *n:City ) })	#children:5[7,131]5	68000.5513748174	info:[23, 6, 7, 131, 27, 1]capital_17 city_18 in_19 the_20 us_21 ?_22
													[
														child-0:*n:City -> ({ city ( *n:City ) })	#children:4[6,121]4	45.323044205085715	info:[23, 5, 6, 121, 27, 1]city_18 in_19 the_20 us_21 ?_22
														[
															child-0:*n:City -> ({ loc_2 ( *n:Country ) })	#children:3[5,138]3	0.007269896987568803	info:[23, 4, 5, 138, 27, 1]in_19 the_20 us_21 ?_22
															[
																child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[4,137]2	8.074868111621592	info:[22, 1, 4, 137, 27, 1]us_21
																[
																	child-0:*n:CountryName -> ({ ' usa ' })	#children:1[3,34]1	1.0	info:[22, 1, 3, 34, 26, 1]us_21
																]
															]
														]
													]
												]
											]
										]
									]
								]
							]
						]
					]
				]
			]
		]
	]
]

output:	answer(count(state(loc_1(place(higher_2(highest(place(loc_2(state(loc_1(largest(capital(city(loc_2(countryid('usa'))))))))))))))))
predic:	answer(count(state(loc_1(place(higher_2(highest(place(loc_2(state(loc_1(largest(capital(city(loc_2(countryid('usa'))))))))))))))))
58:	true
=INPUT=
what are the cities of the state with the highest point ?
=OUTPUT=
ROOT	#children:8[20,1000]8	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:7[19,120]7	0.0	null
	[
		child-0:*n:City -> ({ city ( *n:City ) })	#children:6[18,121]6	0.0	null
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:5[17,122]5	0.0	null
			[
				child-0:*n:State -> ({ state ( *n:State ) })	#children:4[16,126]4	0.0	null
				[
					child-0:*n:State -> ({ loc_1 ( *n:Place ) })	#children:3[15,167]3	0.0	null
					[
						child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:2[14,132]2	0.0	null
						[
							child-0:*n:Place -> ({ place ( all ) })	#children:1[13,168]1	0.0	null
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:8[20,1000]8	45762.293667297075	info:[13, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:7[19,120]7	38877.08302490505	info:[12, 12, 19, 120, 27, 1]what_0 are_1 the_2 cities_3 of_4 the_5 state_6 with_7 the_8 highest_9 point_10 ?_11
	[
		child-0:*n:City -> ({ city ( *n:City ) })	#children:6[18,121]6	66.48393134111379	info:[12, 9, 18, 121, 27, 1]cities_3 of_4 the_5 state_6 with_7 the_8 highest_9 point_10 ?_11
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:5[17,122]5	0.06140857153850889	info:[12, 8, 17, 122, 27, 1]of_4 the_5 state_6 with_7 the_8 highest_9 point_10 ?_11
			[
				child-0:*n:State -> ({ state ( *n:State ) })	#children:4[16,126]4	4.902098587928769	info:[11, 5, 16, 126, 27, 1]state_6 with_7 the_8 highest_9 point_10
				[
					child-0:*n:State -> ({ loc_1 ( *n:Place ) })	#children:3[15,167]3	0.10830406131866514	info:[11, 4, 15, 167, 27, 1]with_7 the_8 highest_9 point_10
					[
						child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:2[14,132]2	53.784893334070645	info:[11, 3, 14, 132, 27, 1]the_8 highest_9 point_10
						[
							child-0:*n:Place -> ({ place ( all ) })	#children:1[13,168]1	0.004662022067448813	info:[11, 1, 13, 168, 26, 1]point_10
						]
					]
				]
			]
		]
	]
]

output:	answer(city(loc_2(state(loc_1(highest(place(all)))))))
predic:	answer(city(loc_2(state(loc_1(highest(place(all)))))))
74:	true
=INPUT=
what are the rivers in alaska ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:5[19,128]5	0.0	null
	[
		child-0:*n:River -> ({ river ( *n:River ) })	#children:4[18,129]4	0.0	null
		[
			child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:3[17,130]3	0.0	null
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	0.0	null
				[
					child-0:*n:StateName -> ({ ' alaska ' })	#children:1[15,80]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	8.108448790561992E10	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:5[19,128]5	3.523701355093918E10	info:[7, 7, 19, 128, 27, 1]what_0 are_1 the_2 rivers_3 in_4 alaska_5 ?_6
	[
		child-0:*n:River -> ({ river ( *n:River ) })	#children:4[18,129]4	4457199.785737145	info:[7, 4, 18, 129, 27, 1]rivers_3 in_4 alaska_5 ?_6
		[
			child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:3[17,130]3	2215655.6378073324	info:[7, 3, 17, 130, 27, 1]in_4 alaska_5 ?_6
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	3.273583459538019E9	info:[6, 1, 16, 123, 27, 1]alaska_5
				[
					child-0:*n:StateName -> ({ ' alaska ' })	#children:1[15,80]1	1.0	info:[6, 1, 15, 80, 26, 1]alaska_5
				]
			]
		]
	]
]

output:	answer(river(loc_2(stateid('alaska'))))
predic:	answer(river(loc_2(stateid('alaska'))))
90:	true
=INPUT=
what is the capital of massachusetts ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:5[19,120]5	0.0	null
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:4[18,131]4	0.0	null
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[17,122]3	0.0	null
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	0.0	null
				[
					child-0:*n:StateName -> ({ ' massachusetts ' })	#children:1[15,113]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	3.433276782784147E11	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:5[19,120]5	2.9167197671991565E11	info:[7, 7, 19, 120, 27, 1]what_0 is_1 the_2 capital_3 of_4 massachusetts_5 ?_6
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:4[18,131]4	3.8482141580840653E8	info:[7, 4, 18, 131, 27, 1]capital_3 of_4 massachusetts_5 ?_6
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[17,122]3	31315.484294170925	info:[7, 3, 17, 122, 27, 1]of_4 massachusetts_5 ?_6
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	3.273583459538019E9	info:[6, 1, 16, 123, 27, 1]massachusetts_5
				[
					child-0:*n:StateName -> ({ ' massachusetts ' })	#children:1[15,113]1	1.0	info:[6, 1, 15, 113, 26, 1]massachusetts_5
				]
			]
		]
	]
]

output:	answer(capital(loc_2(stateid('massachusetts'))))
predic:	answer(capital(loc_2(stateid('massachusetts'))))
106:	true
=INPUT=
what is the highest elevation in the united states ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	0.0	null
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	0.0	null
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	0.0	null
			[
				child-0:*n:Place -> ({ loc_2 ( *n:Country ) })	#children:3[16,183]3	0.0	null
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	0.0	null
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	3.478282140050562E10	info:[11, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	4.8150523828518135E10	info:[10, 10, 19, 124, 27, 1]what_0 is_1 the_2 highest_3 elevation_4 in_5 the_6 united_7 states_8 ?_9
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	6.884759388754362E9	info:[10, 9, 18, 132, 27, 1]is_1 the_2 highest_3 elevation_4 in_5 the_6 united_7 states_8 ?_9
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	14566.152051268447	info:[10, 6, 17, 133, 27, 1]elevation_4 in_5 the_6 united_7 states_8 ?_9
			[
				child-0:*n:Place -> ({ loc_2 ( *n:Country ) })	#children:3[16,183]3	15.08948498185285	info:[10, 5, 16, 183, 27, 1]in_5 the_6 united_7 states_8 ?_9
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	1725.6227480932034	info:[9, 2, 15, 137, 27, 1]united_7 states_8
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	213.70290192227841	info:[9, 2, 14, 34, 26, 1]united_7 states_8
					]
				]
			]
		]
	]
]

output:	answer(highest(place(loc_2(countryid('usa')))))
predic:	answer(highest(place(loc_2(countryid('usa')))))
122:	true
=INPUT=
what is the largest city in california ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	0.0	null
	[
		child-0:*n:City -> ({ largest ( *n:City ) })	#children:5[18,150]5	0.0	null
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	0.0	null
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[16,122]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' california ' })	#children:1[14,19]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	2.843316927992785E19	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	2.415522899252931E19	info:[8, 8, 19, 120, 27, 1]what_0 is_1 the_2 largest_3 city_4 in_5 california_6 ?_7
	[
		child-0:*n:City -> ({ largest ( *n:City ) })	#children:5[18,150]5	1.2456796306723374E16	info:[8, 5, 18, 150, 27, 1]largest_3 city_4 in_5 california_6 ?_7
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	8.43011899657181E11	info:[8, 4, 17, 121, 27, 1]city_4 in_5 california_6 ?_7
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[16,122]3	1.0565608449574098E8	info:[8, 3, 16, 122, 27, 1]in_5 california_6 ?_7
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[7, 1, 15, 123, 27, 1]california_6
					[
						child-0:*n:StateName -> ({ ' california ' })	#children:1[14,19]1	1.0	info:[7, 1, 14, 19, 26, 1]california_6
					]
				]
			]
		]
	]
]

output:	answer(largest(city(loc_2(stateid('california')))))
predic:	answer(largest(city(loc_2(stateid('california')))))
138:	true
=INPUT=
what is the longest river in the states that border nebraska ?
=OUTPUT=
ROOT	#children:9[20,1000]9	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:8[19,128]8	0.0	null
	[
		child-0:*n:River -> ({ longest ( *n:River ) })	#children:7[18,142]7	0.0	null
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:6[17,129]6	0.0	null
			[
				child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:5[16,130]5	0.0	null
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:4[15,126]4	0.0	null
					[
						child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[14,127]3	0.0	null
						[
							child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[13,123]2	0.0	null
							[
								child-0:*n:StateName -> ({ ' nebraska ' })	#children:1[12,29]1	0.0	null
							]
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:9[20,1000]9	4.3690518895552688E16	info:[13, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:8[19,128]8	1.8986657573297016E16	info:[12, 12, 19, 128, 27, 1]what_0 is_1 the_2 longest_3 river_4 in_5 the_6 states_7 that_8 border_9 nebraska_10 ?_11
	[
		child-0:*n:River -> ({ longest ( *n:River ) })	#children:7[18,142]7	1.2168080591091073E14	info:[12, 11, 18, 142, 27, 1]is_1 the_2 longest_3 river_4 in_5 the_6 states_7 that_8 border_9 nebraska_10 ?_11
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:6[17,129]6	1.3425586361425194E10	info:[12, 8, 17, 129, 27, 1]river_4 in_5 the_6 states_7 that_8 border_9 nebraska_10 ?_11
			[
				child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:5[16,130]5	1.9290649613392103E9	info:[12, 7, 16, 130, 27, 1]in_5 the_6 states_7 that_8 border_9 nebraska_10 ?_11
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:4[15,126]4	2.8715058579104156E11	info:[11, 4, 15, 126, 27, 1]states_7 that_8 border_9 nebraska_10
					[
						child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[14,127]3	1.0530355896498768E8	info:[11, 2, 14, 127, 27, 1]border_9 nebraska_10
						[
							child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[13,123]2	3.273583459538019E9	info:[11, 1, 13, 123, 27, 1]nebraska_10
							[
								child-0:*n:StateName -> ({ ' nebraska ' })	#children:1[12,29]1	1.0	info:[11, 1, 12, 29, 26, 1]nebraska_10
							]
						]
					]
				]
			]
		]
	]
]

output:	answer(longest(river(loc_2(state(next_to_2(stateid('nebraska')))))))
predic:	answer(longest(river(loc_2(state(next_to_2(stateid('nebraska')))))))
154:	true
=INPUT=
what is the population of alaska ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:3[18,158]3	0.0	null
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	0.0	null
			[
				child-0:*n:StateName -> ({ ' alaska ' })	#children:1[16,80]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	1.74421228952443E11	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	9.688798496406935E11	info:[7, 7, 19, 144, 27, 1]what_0 is_1 the_2 population_3 of_4 alaska_5 ?_6
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:3[18,158]3	4.715447550481081E17	info:[6, 6, 18, 158, 27, 1]what_0 is_1 the_2 population_3 of_4 alaska_5
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	3.273583459538019E9	info:[6, 1, 17, 123, 27, 1]alaska_5
			[
				child-0:*n:StateName -> ({ ' alaska ' })	#children:1[16,80]1	1.0	info:[6, 1, 16, 80, 26, 1]alaska_5
			]
		]
	]
]

output:	answer(population_1(stateid('alaska')))
predic:	answer(population_1(stateid('alaska')))
170:	true
=INPUT=
what is the population of washington ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:3[18,158]3	0.0	null
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	0.0	null
			[
				child-0:*n:StateName -> ({ ' washington ' })	#children:1[16,9]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	5.493506906338248E8	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	3.05154835645857E9	info:[7, 7, 19, 144, 27, 1]what_0 is_1 the_2 population_3 of_4 washington_5 ?_6
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:3[18,158]3	2.1341532362677568E16	info:[6, 6, 18, 158, 27, 1]what_0 is_1 the_2 population_3 of_4 washington_5
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	3.273583459538019E9	info:[6, 1, 17, 123, 27, 1]washington_5
			[
				child-0:*n:StateName -> ({ ' washington ' })	#children:1[16,9]1	1.0	info:[6, 1, 16, 9, 26, 1]washington_5
			]
		]
	]
]

output:	answer(population_1(stateid('washington')))
predic:	answer(population_1(stateid('washington')))
186:	true
=INPUT=
what rivers are there in texas ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:5[19,128]5	0.0	null
	[
		child-0:*n:River -> ({ river ( *n:River ) })	#children:4[18,129]4	0.0	null
		[
			child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:3[17,130]3	0.0	null
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	0.0	null
				[
					child-0:*n:StateName -> ({ ' texas ' })	#children:1[15,92]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	9.155858603174708E8	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:5[19,128]5	3.978875886175378E8	info:[7, 7, 19, 128, 27, 1]what_0 rivers_1 are_2 there_3 in_4 texas_5 ?_6
	[
		child-0:*n:River -> ({ river ( *n:River ) })	#children:4[18,129]4	922626.4004873991	info:[7, 6, 18, 129, 27, 1]rivers_1 are_2 there_3 in_4 texas_5 ?_6
		[
			child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:3[17,130]3	1157326.0067207625	info:[7, 5, 17, 130, 27, 1]are_2 there_3 in_4 texas_5 ?_6
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	3.273583459538019E9	info:[6, 1, 16, 123, 27, 1]texas_5
				[
					child-0:*n:StateName -> ({ ' texas ' })	#children:1[15,92]1	1.0	info:[6, 1, 15, 92, 26, 1]texas_5
				]
			]
		]
	]
]

output:	answer(river(loc_2(stateid('texas'))))
predic:	answer(river(loc_2(stateid('texas'))))
202:	true
=INPUT=
what state is the largest in population ?
=OUTPUT=
ROOT	#children:4[20,1000]4	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	0.0	null
	[
		child-0:*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })	#children:2[18,169]2	0.0	null
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	0.0	null
		]
	]
]

=PREDICTION=
ROOT	#children:4[20,1000]4	5.4811402626148515E-6	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	2.448807757783454E-6	info:[8, 8, 19, 135, 27, 1]what_0 state_1 is_2 the_3 largest_4 in_5 population_6 ?_7
	[
		child-0:*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })	#children:2[18,169]2	5.4602907850818856E-8	info:[8, 7, 18, 169, 27, 1]state_1 is_2 the_3 largest_4 in_5 population_6 ?_7
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	0.0021421422630467715	info:[2, 1, 17, 141, 26, 1]state_1
		]
	]
]

output:	answer(largest_one(population_1(state(all))))
predic:	answer(largest_one(population_1(state(all))))
218:	true
=INPUT=
what states does the delaware river run through ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:5[18,126]5	0.0	null
		[
			child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:4[17,181]4	0.0	null
			[
				child-0:*n:River -> ({ river ( *n:River ) })	#children:3[16,129]3	0.0	null
				[
					child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[15,152]2	0.0	null
					[
						child-0:*n:RiverName -> ({ ' delaware ' })	#children:1[14,22]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	2.01690558368248224E17	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	9.0109243759476192E16	info:[9, 9, 19, 135, 27, 1]what_0 states_1 does_2 the_3 delaware_4 river_5 run_6 through_7 ?_8
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:5[18,126]5	5.2935035392660045E17	info:[8, 8, 18, 126, 27, 1]what_0 states_1 does_2 the_3 delaware_4 river_5 run_6 through_7
		[
			child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:4[17,181]4	1.1057876948343306E14	info:[8, 6, 17, 181, 27, 1]does_2 the_3 delaware_4 river_5 run_6 through_7
			[
				child-0:*n:River -> ({ river ( *n:River ) })	#children:3[16,129]3	9.672680499373372E8	info:[6, 3, 16, 129, 27, 1]the_3 delaware_4 river_5
				[
					child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[15,152]2	1.8034133052935543E9	info:[5, 2, 15, 152, 27, 1]the_3 delaware_4
					[
						child-0:*n:RiverName -> ({ ' delaware ' })	#children:1[14,22]1	1.0	info:[5, 1, 14, 22, 26, 1]delaware_4
					]
				]
			]
		]
	]
]

output:	answer(state(traverse_1(river(riverid('delaware')))))
predic:	answer(state(traverse_1(river(riverid('delaware')))))
234:	true
=INPUT=
where is the lowest point in maryland ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	0.0	null
	[
		child-0:*n:Place -> ({ lowest ( *n:Place ) })	#children:5[18,186]5	0.0	null
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	0.0	null
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[16,134]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' maryland ' })	#children:1[14,75]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	6.8413402411003512E16	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	9.4705979283587936E16	info:[8, 8, 19, 124, 27, 1]where_0 is_1 the_2 lowest_3 point_4 in_5 maryland_6 ?_7
	[
		child-0:*n:Place -> ({ lowest ( *n:Place ) })	#children:5[18,186]5	4.3776950503564032E16	info:[8, 7, 18, 186, 27, 1]is_1 the_2 lowest_3 point_4 in_5 maryland_6 ?_7
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	6.206504225488724E10	info:[8, 4, 17, 133, 27, 1]point_4 in_5 maryland_6 ?_7
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[16,134]3	1.5813370986550855E7	info:[8, 3, 16, 134, 27, 1]in_5 maryland_6 ?_7
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[7, 1, 15, 123, 27, 1]maryland_6
					[
						child-0:*n:StateName -> ({ ' maryland ' })	#children:1[14,75]1	1.0	info:[7, 1, 14, 75, 26, 1]maryland_6
					]
				]
			]
		]
	]
]

output:	answer(lowest(place(loc_2(stateid('maryland')))))
predic:	answer(lowest(place(loc_2(stateid('maryland')))))
250:	true
=INPUT=
which state borders hawaii ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	0.0	null
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[17,127]3	0.0	null
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	0.0	null
				[
					child-0:*n:StateName -> ({ ' hawaii ' })	#children:1[15,101]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	9.459316267900014E14	info:[6, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	4.226136524575998E14	info:[5, 5, 19, 135, 27, 1]which_0 state_1 borders_2 hawaii_3 ?_4
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	3.7002016559408345E15	info:[4, 4, 18, 126, 27, 1]which_0 state_1 borders_2 hawaii_3
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[17,127]3	3.549937101876325E12	info:[4, 2, 17, 127, 27, 1]borders_2 hawaii_3
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	3.273583459538019E9	info:[4, 1, 16, 123, 27, 1]hawaii_3
				[
					child-0:*n:StateName -> ({ ' hawaii ' })	#children:1[15,101]1	1.0	info:[4, 1, 15, 101, 26, 1]hawaii_3
				]
			]
		]
	]
]

output:	answer(state(next_to_2(stateid('hawaii'))))
predic:	answer(state(next_to_2(stateid('hawaii'))))
266:	false
=INPUT=
which state has the smallest average urban population ?
=OUTPUT=
ROOT	#children:4[20,1000]4	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	0.0	null
	[
		child-0:*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })	#children:2[18,194]2	0.0	null
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	0.0	null
		]
	]
]

=PREDICTION=
ROOT	#children:4[20,1000]4	7.676720873599677E-4	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	3.429726795687002E-4	info:[9, 9, 19, 135, 27, 1]which_0 state_1 has_2 the_3 smallest_4 average_5 urban_6 population_7 ?_8
	[
		child-0:*n:State -> ({ smallest_one ( population_1 ( *n:State ) ) })	#children:2[18,200]2	1.7291237105738458E-7	info:[9, 8, 18, 200, 27, 1]state_1 has_2 the_3 smallest_4 average_5 urban_6 population_7 ?_8
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	3.003886394420056	info:[2, 1, 17, 141, 26, 1]state_1
		]
	]
]

output:	answer(smallest_one(density_1(state(all))))
predic:	answer(smallest_one(population_1(state(all))))
11:	true
=INPUT=
how long is the delaware river ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:5[19,144]5	0.0	null
	[
		child-0:*n:Num -> ({ len ( *n:River ) })	#children:4[18,151]4	0.0	null
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:3[17,129]3	0.0	null
			[
				child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[16,152]2	0.0	null
				[
					child-0:*n:RiverName -> ({ ' delaware ' })	#children:1[15,22]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	4.495956382727607E8	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:5[19,144]5	2.4974262423503165E9	info:[7, 7, 19, 144, 27, 1]how_0 long_1 is_2 the_3 delaware_4 river_5 ?_6
	[
		child-0:*n:Num -> ({ len ( *n:River ) })	#children:4[18,151]4	1150305.9687237334	info:[7, 6, 18, 151, 27, 1]long_1 is_2 the_3 delaware_4 river_5 ?_6
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:3[17,129]3	1644808.8147290447	info:[6, 3, 17, 129, 27, 1]the_3 delaware_4 river_5
			[
				child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[16,152]2	2.9254761978266746E8	info:[5, 2, 16, 152, 27, 1]the_3 delaware_4
				[
					child-0:*n:RiverName -> ({ ' delaware ' })	#children:1[15,22]1	1.0	info:[5, 1, 15, 22, 26, 1]delaware_4
				]
			]
		]
	]
]

output:	answer(len(river(riverid('delaware'))))
predic:	answer(len(river(riverid('delaware'))))
27:	false
=INPUT=
how many people live in the united states ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:Country ) })	#children:3[18,0]3	0.0	null
		[
			child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[17,137]2	0.0	null
			[
				child-0:*n:CountryName -> ({ ' usa ' })	#children:1[16,34]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	1.8205030602574176E8	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	1.0112580572251059E9	info:[9, 9, 19, 144, 27, 1]how_0 many_1 people_2 live_3 in_4 the_5 united_6 states_7 ?_8
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:5[18,159]5	13.265135317797869	info:[9, 7, 18, 159, 27, 1]people_2 live_3 in_4 the_5 united_6 states_7 ?_8
		[
			child-0:*n:City -> ({ capital ( *n:City ) })	#children:4[17,131]4	0.010424210362076317	info:[9, 4, 17, 131, 27, 1]the_5 united_6 states_7 ?_8
			[
				child-0:*n:City -> ({ loc_2 ( *n:Country ) })	#children:3[16,138]3	33.85173674980295	info:[9, 3, 16, 138, 27, 1]united_6 states_7 ?_8
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	1725.6227480932034	info:[8, 2, 15, 137, 27, 1]united_6 states_7
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	213.70290192227841	info:[8, 2, 14, 34, 26, 1]united_6 states_7
					]
				]
			]
		]
	]
]

output:	answer(population_1(countryid('usa')))
predic:	answer(population_1(capital(loc_2(countryid('usa')))))
43:	true
=INPUT=
how much population does texas have ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:3[18,158]3	0.0	null
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	0.0	null
			[
				child-0:*n:StateName -> ({ ' texas ' })	#children:1[16,92]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	7959134.381073863	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	4.421161901403358E7	info:[7, 7, 19, 144, 27, 1]how_0 much_1 population_2 does_3 texas_4 have_5 ?_6
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:3[18,158]3	27609.20338995372	info:[7, 5, 18, 158, 27, 1]population_2 does_3 texas_4 have_5 ?_6
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	3.273583459538019E9	info:[5, 1, 17, 123, 27, 1]texas_4
			[
				child-0:*n:StateName -> ({ ' texas ' })	#children:1[16,92]1	1.0	info:[5, 1, 16, 92, 26, 1]texas_4
			]
		]
	]
]

output:	answer(population_1(stateid('texas')))
predic:	answer(population_1(stateid('texas')))
59:	true
=INPUT=
what are the highest points of all the states ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:5[19,124]5	0.0	null
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:4[18,132]4	0.0	null
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:3[17,133]3	0.0	null
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:2[16,134]2	0.0	null
				[
					child-0:*n:State -> ({ state ( all ) })	#children:1[15,141]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	1329658.4022887223	info:[11, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:5[19,124]5	1840671.5155735442	info:[10, 10, 19, 124, 27, 1]what_0 are_1 the_2 highest_3 points_4 of_5 all_6 the_7 states_8 ?_9
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:4[18,132]4	60482.28285011681	info:[10, 8, 18, 132, 27, 1]the_2 highest_3 points_4 of_5 all_6 the_7 states_8 ?_9
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:3[17,133]3	4.216056539630863	info:[10, 6, 17, 133, 27, 1]points_4 of_5 all_6 the_7 states_8 ?_9
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:2[16,134]2	0.0014362954735807317	info:[10, 5, 16, 134, 27, 1]of_5 all_6 the_7 states_8 ?_9
				[
					child-0:*n:State -> ({ state ( all ) })	#children:1[15,141]1	0.025047747133431053	info:[7, 1, 15, 141, 26, 1]all_6
				]
			]
		]
	]
]

output:	answer(highest(place(loc_2(state(all)))))
predic:	answer(highest(place(loc_2(state(all)))))
75:	true
=INPUT=
what city has the most people ?
=OUTPUT=
ROOT	#children:4[20,1000]4	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:3[19,120]3	0.0	null
	[
		child-0:*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })	#children:2[18,188]2	0.0	null
		[
			child-0:*n:City -> ({ city ( all ) })	#children:1[17,160]1	0.0	null
		]
	]
]

=PREDICTION=
ROOT	#children:4[20,1000]4	2.923135808994536	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:3[19,120]3	2.483332552462638	info:[7, 7, 19, 120, 27, 1]what_0 city_1 has_2 the_3 most_4 people_5 ?_6
	[
		child-0:*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })	#children:2[18,188]2	0.04233332742135075	info:[7, 6, 18, 188, 27, 1]city_1 has_2 the_3 most_4 people_5 ?_6
		[
			child-0:*n:City -> ({ city ( all ) })	#children:1[17,160]1	119245.76129793513	info:[4, 3, 17, 160, 26, 1]city_1 has_2 the_3
		]
	]
]

output:	answer(largest_one(population_1(city(all))))
predic:	answer(largest_one(population_1(city(all))))
91:	true
=INPUT=
what is the capital of new jersey ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:5[19,120]5	0.0	null
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:4[18,131]4	0.0	null
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[17,122]3	0.0	null
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	0.0	null
				[
					child-0:*n:StateName -> ({ ' new jersey ' })	#children:1[15,23]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	2.4005613659627813E8	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:5[19,120]5	2.039382558256871E8	info:[8, 8, 19, 120, 27, 1]what_0 is_1 the_2 capital_3 of_4 new_5 jersey_6 ?_7
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:4[18,131]4	269068.7299716132	info:[8, 5, 18, 131, 27, 1]capital_3 of_4 new_5 jersey_6 ?_7
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[17,122]3	21.89591649876806	info:[8, 4, 17, 122, 27, 1]of_4 new_5 jersey_6 ?_7
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	3.4859960599627805E9	info:[7, 2, 16, 123, 27, 1]new_5 jersey_6
				[
					child-0:*n:StateName -> ({ ' new jersey ' })	#children:1[15,23]1	1.0648868749033629	info:[7, 2, 15, 23, 26, 1]new_5 jersey_6
				]
			]
		]
	]
]

output:	answer(capital(loc_2(stateid('newjersey'))))
predic:	answer(capital(loc_2(stateid('newjersey'))))
107:	true
=INPUT=
what is the highest mountain in the us ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	0.0	null
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	0.0	null
		[
			child-0:*n:Place -> ({ mountain ( *n:Place ) })	#children:4[17,197]4	0.0	null
			[
				child-0:*n:Place -> ({ loc_2 ( *n:Country ) })	#children:3[16,183]3	0.0	null
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	0.0	null
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	22763.651652839093	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	31512.157645675736	info:[9, 9, 19, 124, 27, 1]what_0 is_1 the_2 highest_3 mountain_4 in_5 the_6 us_7 ?_8
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	4505.737548850457	info:[9, 8, 18, 132, 27, 1]is_1 the_2 highest_3 mountain_4 in_5 the_6 us_7 ?_8
		[
			child-0:*n:Place -> ({ mountain ( *n:Place ) })	#children:4[17,197]4	0.3074367209144933	info:[9, 5, 17, 197, 27, 1]mountain_4 in_5 the_6 us_7 ?_8
			[
				child-0:*n:Place -> ({ loc_2 ( *n:Country ) })	#children:3[16,183]3	0.007469258781341159	info:[9, 4, 16, 183, 27, 1]in_5 the_6 us_7 ?_8
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	8.074868111621592	info:[8, 1, 15, 137, 27, 1]us_7
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	1.0	info:[8, 1, 14, 34, 26, 1]us_7
					]
				]
			]
		]
	]
]

output:	answer(highest(mountain(loc_2(countryid('usa')))))
predic:	answer(highest(mountain(loc_2(countryid('usa')))))
123:	true
=INPUT=
what is the largest city in rhode island ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	0.0	null
	[
		child-0:*n:City -> ({ largest ( *n:City ) })	#children:5[18,150]5	0.0	null
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	0.0	null
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[16,122]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' rhode island ' })	#children:1[14,25]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	2.84768327079455872E17	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	2.4192322996788336E17	info:[9, 9, 19, 120, 27, 1]what_0 is_1 the_2 largest_3 city_4 in_5 rhode_6 island_7 ?_8
	[
		child-0:*n:City -> ({ largest ( *n:City ) })	#children:5[18,150]5	1.2475925599821706E14	info:[9, 6, 18, 150, 27, 1]largest_3 city_4 in_5 rhode_6 island_7 ?_8
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	8.443064718181805E9	info:[9, 5, 17, 121, 27, 1]city_4 in_5 rhode_6 island_7 ?_8
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[16,122]3	1058183.3537936872	info:[9, 4, 16, 122, 27, 1]in_5 rhode_6 island_7 ?_8
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	4.440454602683865E9	info:[8, 2, 15, 123, 27, 1]rhode_6 island_7
					[
						child-0:*n:StateName -> ({ ' rhode island ' })	#children:1[14,25]1	1.3564507083960262	info:[8, 2, 14, 25, 26, 1]rhode_6 island_7
					]
				]
			]
		]
	]
]

output:	answer(largest(city(loc_2(stateid('rhodeisland')))))
predic:	answer(largest(city(loc_2(stateid('rhodeisland')))))
139:	true
=INPUT=
what is the longest river that flows through a state that borders indiana ?
=OUTPUT=
ROOT	#children:9[20,1000]9	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:8[19,128]8	0.0	null
	[
		child-0:*n:River -> ({ longest ( *n:River ) })	#children:7[18,142]7	0.0	null
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:6[17,129]6	0.0	null
			[
				child-0:*n:River -> ({ traverse_2 ( *n:State ) })	#children:5[16,163]5	0.0	null
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:4[15,126]4	0.0	null
					[
						child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[14,127]3	0.0	null
						[
							child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[13,123]2	0.0	null
							[
								child-0:*n:StateName -> ({ ' indiana ' })	#children:1[12,32]1	0.0	null
							]
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:9[20,1000]9	1.2596260101785321E24	info:[15, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:8[19,128]8	5.473976581246916E23	info:[14, 14, 19, 128, 27, 1]what_0 is_1 the_2 longest_3 river_4 that_5 flows_6 through_7 a_8 state_9 that_10 borders_11 indiana_12 ?_13
	[
		child-0:*n:River -> ({ longest ( *n:River ) })	#children:7[18,142]7	3.5081365920895625E21	info:[14, 13, 18, 142, 27, 1]is_1 the_2 longest_3 river_4 that_5 flows_6 through_7 a_8 state_9 that_10 borders_11 indiana_12 ?_13
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:6[17,129]6	3.8706836655288038E17	info:[14, 10, 17, 129, 27, 1]river_4 that_5 flows_6 through_7 a_8 state_9 that_10 borders_11 indiana_12 ?_13
			[
				child-0:*n:River -> ({ traverse_2 ( *n:State ) })	#children:5[16,163]5	1.3017836964398154E16	info:[14, 9, 16, 163, 27, 1]that_5 flows_6 through_7 a_8 state_9 that_10 borders_11 indiana_12 ?_13
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:4[15,126]4	6.5561286767465664E16	info:[13, 4, 15, 126, 27, 1]state_9 that_10 borders_11 indiana_12
					[
						child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[14,127]3	2.3177488026067125E13	info:[13, 2, 14, 127, 27, 1]borders_11 indiana_12
						[
							child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[13,123]2	3.273583459538019E9	info:[13, 1, 13, 123, 27, 1]indiana_12
							[
								child-0:*n:StateName -> ({ ' indiana ' })	#children:1[12,32]1	1.0	info:[13, 1, 12, 32, 26, 1]indiana_12
							]
						]
					]
				]
			]
		]
	]
]

output:	answer(longest(river(traverse_2(state(next_to_2(stateid('indiana')))))))
predic:	answer(longest(river(traverse_2(state(next_to_2(stateid('indiana')))))))
155:	true
=INPUT=
what is the population of boulder ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:3[18,159]3	0.0	null
		[
			child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[17,147]2	0.0	null
			[
				child-0:*n:CityName -> ({ ' boulder ' })	#children:1[16,37]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	35477.99032285097	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	197074.11842012734	info:[7, 7, 19, 144, 27, 1]what_0 is_1 the_2 population_3 of_4 boulder_5 ?_6
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:3[18,159]3	4375323.70074376	info:[7, 5, 18, 159, 27, 1]the_2 population_3 of_4 boulder_5 ?_6
		[
			child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[17,147]2	72102.42018085228	info:[6, 1, 17, 147, 27, 1]boulder_5
			[
				child-0:*n:CityName -> ({ ' boulder ' })	#children:1[16,37]1	1.0	info:[6, 1, 16, 37, 26, 1]boulder_5
			]
		]
	]
]

output:	answer(population_1(cityid('boulder',_)))
predic:	answer(population_1(cityid('boulder',_)))
171:	true
=INPUT=
what is the smallest city in the us ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	0.0	null
	[
		child-0:*n:City -> ({ smallest ( *n:City ) })	#children:5[18,204]5	0.0	null
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	0.0	null
			[
				child-0:*n:City -> ({ loc_2 ( *n:Country ) })	#children:3[16,138]3	0.0	null
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	0.0	null
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	8.00377834029006E7	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	6.799562043603575E7	info:[9, 9, 19, 120, 27, 1]what_0 is_1 the_2 smallest_3 city_4 in_5 the_6 us_7 ?_8
	[
		child-0:*n:City -> ({ smallest ( *n:City ) })	#children:5[18,204]5	144221.92317071176	info:[9, 6, 18, 204, 27, 1]smallest_3 city_4 in_5 the_6 us_7 ?_8
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	38.17330108965305	info:[9, 5, 17, 121, 27, 1]city_4 in_5 the_6 us_7 ?_8
			[
				child-0:*n:City -> ({ loc_2 ( *n:Country ) })	#children:3[16,138]3	0.007269896987568803	info:[9, 4, 16, 138, 27, 1]in_5 the_6 us_7 ?_8
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	8.074868111621592	info:[8, 1, 15, 137, 27, 1]us_7
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	1.0	info:[8, 1, 14, 34, 26, 1]us_7
					]
				]
			]
		]
	]
]

output:	answer(smallest(city(loc_2(countryid('usa')))))
predic:	answer(smallest(city(loc_2(countryid('usa')))))
187:	true
=INPUT=
what rivers run through new york ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:5[19,128]5	0.0	null
	[
		child-0:*n:River -> ({ river ( *n:River ) })	#children:4[18,129]4	0.0	null
		[
			child-0:*n:River -> ({ traverse_2 ( *n:State ) })	#children:3[17,163]3	0.0	null
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	0.0	null
				[
					child-0:*n:StateName -> ({ ' new york ' })	#children:1[15,112]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	6523.1298388335135	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:5[19,128]5	2834.766802659681	info:[7, 7, 19, 128, 27, 1]what_0 rivers_1 run_2 through_3 new_4 york_5 ?_6
	[
		child-0:*n:River -> ({ river ( *n:River ) })	#children:4[18,129]4	6.573290462380083	info:[7, 6, 18, 129, 27, 1]rivers_1 run_2 through_3 new_4 york_5 ?_6
		[
			child-0:*n:River -> ({ traverse_2 ( *n:State ) })	#children:3[17,163]3	24.48045921927653	info:[7, 5, 17, 163, 27, 1]run_2 through_3 new_4 york_5 ?_6
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	4.1405535583285764E7	info:[6, 2, 16, 123, 27, 1]new_4 york_5
				[
					child-0:*n:StateName -> ({ ' new york ' })	#children:1[15,112]1	0.012648382451544106	info:[6, 2, 15, 112, 26, 1]new_4 york_5
				]
			]
		]
	]
]

output:	answer(river(traverse_2(stateid('newyork'))))
predic:	answer(river(traverse_2(stateid('newyork'))))
203:	true
=INPUT=
what states are next to arizona ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	0.0	null
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[17,127]3	0.0	null
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	0.0	null
				[
					child-0:*n:StateName -> ({ ' arizona ' })	#children:1[15,50]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	1.50871572527373952E17	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	6.7404857298391288E16	info:[7, 7, 19, 135, 27, 1]what_0 states_1 are_2 next_3 to_4 arizona_5 ?_6
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	1.49551813854105267E18	info:[6, 6, 18, 126, 27, 1]what_0 states_1 are_2 next_3 to_4 arizona_5
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[17,127]3	1.676568008460815E13	info:[6, 4, 17, 127, 27, 1]are_2 next_3 to_4 arizona_5
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	3.273583459538019E9	info:[6, 1, 16, 123, 27, 1]arizona_5
				[
					child-0:*n:StateName -> ({ ' arizona ' })	#children:1[15,50]1	1.0	info:[6, 1, 15, 50, 26, 1]arizona_5
				]
			]
		]
	]
]

output:	answer(state(next_to_2(stateid('arizona'))))
predic:	answer(state(next_to_2(stateid('arizona'))))
219:	true
=INPUT=
what states does the mississippi river run through ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:5[18,126]5	0.0	null
		[
			child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:4[17,181]4	0.0	null
			[
				child-0:*n:River -> ({ river ( *n:River ) })	#children:3[16,129]3	0.0	null
				[
					child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[15,152]2	0.0	null
					[
						child-0:*n:RiverName -> ({ ' mississippi ' })	#children:1[14,84]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	5.061040215870203E19	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	2.261119757800991E19	info:[9, 9, 19, 135, 27, 1]what_0 states_1 does_2 the_3 mississippi_4 river_5 run_6 through_7 ?_8
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:5[18,126]5	1.328303838901668E20	info:[8, 8, 18, 126, 27, 1]what_0 states_1 does_2 the_3 mississippi_4 river_5 run_6 through_7
		[
			child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:4[17,181]4	2.7747634986229436E16	info:[8, 6, 17, 181, 27, 1]does_2 the_3 mississippi_4 river_5 run_6 through_7
			[
				child-0:*n:River -> ({ river ( *n:River ) })	#children:3[16,129]3	2.4271748463907678E11	info:[6, 3, 16, 129, 27, 1]the_3 mississippi_4 river_5
				[
					child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[15,152]2	1.9660190308724983E10	info:[5, 2, 15, 152, 27, 1]the_3 mississippi_4
					[
						child-0:*n:RiverName -> ({ ' mississippi ' })	#children:1[14,84]1	1.0	info:[5, 1, 14, 84, 26, 1]mississippi_4
					]
				]
			]
		]
	]
]

output:	answer(state(traverse_1(river(riverid('mississippi')))))
predic:	answer(state(traverse_1(river(riverid('mississippi')))))
235:	false
=INPUT=
where is the most populated area of new mexico ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	0.0	null
	[
		child-0:*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })	#children:5[18,188]5	0.0	null
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	0.0	null
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[16,122]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' new mexico ' })	#children:1[14,40]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	8.093209298162684E-21	info:[11, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	3.61580123206902E-21	info:[10, 10, 19, 135, 27, 1]where_0 is_1 the_2 most_3 populated_4 area_5 of_6 new_7 mexico_8 ?_9
	[
		child-0:*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })	#children:4[18,169]4	1.3153706430227715E-23	info:[10, 9, 18, 169, 27, 1]is_1 the_2 most_3 populated_4 area_5 of_6 new_7 mexico_8 ?_9
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:3[17,126]3	3.394661983867405E-19	info:[9, 4, 17, 126, 27, 1]area_5 of_6 new_7 mexico_8
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	2.352180695033419E-12	info:[9, 2, 16, 123, 27, 1]new_7 mexico_8
				[
					child-0:*n:StateName -> ({ ' new mexico ' })	#children:1[15,40]1	7.185339014895218E-22	info:[9, 2, 15, 40, 26, 1]new_7 mexico_8
				]
			]
		]
	]
]

output:	answer(largest_one(population_1(city(loc_2(stateid('newmexico'))))))
predic:	answer(largest_one(population_1(state(stateid('newmexico')))))
251:	true
=INPUT=
which state borders the most states ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ most ( *n:State ) })	#children:4[18,179]4	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:3[17,126]3	0.0	null
			[
				child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:2[16,127]2	0.0	null
				[
					child-0:*n:State -> ({ state ( all ) })	#children:1[15,141]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	1.2501597848734193E7	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	5585335.957460867	info:[7, 7, 19, 135, 27, 1]which_0 state_1 borders_2 the_3 most_4 states_5 ?_6
	[
		child-0:*n:State -> ({ most ( *n:State ) })	#children:4[18,179]4	2.008635664488334E8	info:[6, 6, 18, 179, 27, 1]which_0 state_1 borders_2 the_3 most_4 states_5
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:3[17,126]3	2444.501534293496	info:[4, 3, 17, 126, 27, 1]state_1 borders_2 the_3
			[
				child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:2[16,127]2	0.8946051044367839	info:[4, 2, 16, 127, 27, 1]borders_2 the_3
				[
					child-0:*n:State -> ({ state ( all ) })	#children:1[15,141]1	0.0016054145812558192	info:[4, 1, 15, 141, 26, 1]the_3
				]
			]
		]
	]
]

output:	answer(most(state(next_to_2(state(all)))))
predic:	answer(most(state(next_to_2(state(all)))))
267:	true
=INPUT=
which state has the smallest population density ?
=OUTPUT=
ROOT	#children:4[20,1000]4	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	0.0	null
	[
		child-0:*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })	#children:2[18,194]2	0.0	null
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	0.0	null
		]
	]
]

=PREDICTION=
ROOT	#children:4[20,1000]4	40.13222671390687	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	17.9298655764112	info:[8, 8, 19, 135, 27, 1]which_0 state_1 has_2 the_3 smallest_4 population_5 density_6 ?_7
	[
		child-0:*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })	#children:2[18,194]2	0.013356919336775725	info:[8, 7, 18, 194, 27, 1]state_1 has_2 the_3 smallest_4 population_5 density_6 ?_7
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	3.003886394420056	info:[2, 1, 17, 141, 26, 1]state_1
		]
	]
]

output:	answer(smallest_one(density_1(state(all))))
predic:	answer(smallest_one(density_1(state(all))))
12:	true
=INPUT=
how long is the longest river in california ?
=OUTPUT=
ROOT	#children:8[20,1000]8	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:7[19,144]7	0.0	null
	[
		child-0:*n:Num -> ({ len ( *n:River ) })	#children:6[18,151]6	0.0	null
		[
			child-0:*n:River -> ({ longest ( *n:River ) })	#children:5[17,142]5	0.0	null
			[
				child-0:*n:River -> ({ river ( *n:River ) })	#children:4[16,129]4	0.0	null
				[
					child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:3[15,130]3	0.0	null
					[
						child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[14,123]2	0.0	null
						[
							child-0:*n:StateName -> ({ ' california ' })	#children:1[13,19]1	0.0	null
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:8[20,1000]8	4.9799972081417133E17	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:7[19,144]7	2.7663025740696986E18	info:[9, 9, 19, 144, 27, 1]how_0 long_1 is_2 the_3 longest_4 river_5 in_6 california_7 ?_8
	[
		child-0:*n:Num -> ({ len ( *n:River ) })	#children:6[18,151]6	1.2741494856935315E15	info:[9, 8, 18, 151, 27, 1]long_1 is_2 the_3 longest_4 river_5 in_6 california_7 ?_8
		[
			child-0:*n:River -> ({ longest ( *n:River ) })	#children:5[17,142]5	5.6230628044793575E14	info:[8, 5, 17, 142, 27, 1]the_3 longest_4 river_5 in_6 california_7
			[
				child-0:*n:River -> ({ river ( *n:River ) })	#children:4[16,129]4	4.979188870764426E10	info:[8, 3, 16, 129, 27, 1]river_5 in_6 california_7
				[
					child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:3[15,130]3	7.154383077136724E9	info:[8, 2, 15, 130, 27, 1]in_6 california_7
					[
						child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[14,123]2	3.273583459538019E9	info:[8, 1, 14, 123, 27, 1]california_7
						[
							child-0:*n:StateName -> ({ ' california ' })	#children:1[13,19]1	1.0	info:[8, 1, 13, 19, 26, 1]california_7
						]
					]
				]
			]
		]
	]
]

output:	answer(len(longest(river(loc_2(stateid('california'))))))
predic:	answer(len(longest(river(loc_2(stateid('california'))))))
28:	true
=INPUT=
how many people lived in austin ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:3[18,159]3	0.0	null
		[
			child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[17,147]2	0.0	null
			[
				child-0:*n:CityName -> ({ ' austin ' })	#children:1[16,30]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	1.5810937628503025E9	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	8.782703208884731E9	info:[7, 7, 19, 144, 27, 1]how_0 many_1 people_2 lived_3 in_4 austin_5 ?_6
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:3[18,159]3	115.20674242299732	info:[7, 5, 18, 159, 27, 1]people_2 lived_3 in_4 austin_5 ?_6
		[
			child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[17,147]2	72102.42018085228	info:[6, 1, 17, 147, 27, 1]austin_5
			[
				child-0:*n:CityName -> ({ ' austin ' })	#children:1[16,30]1	1.0	info:[6, 1, 16, 30, 26, 1]austin_5
			]
		]
	]
]

output:	answer(population_1(cityid('austin',_)))
predic:	answer(population_1(cityid('austin',_)))
44:	true
=INPUT=
how tall is mount mckinley ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ elevation_1 ( *n:Place ) })	#children:3[18,148]3	0.0	null
		[
			child-0:*n:Place -> ({ placeid ( *n:PlaceName ) })	#children:2[17,149]2	0.0	null
			[
				child-0:*n:PlaceName -> ({ ' mount mckinley ' })	#children:1[16,98]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	0.6277465471511386	info:[7, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	3.487023820833719	info:[6, 6, 19, 144, 27, 1]how_0 tall_1 is_2 mount_3 mckinley_4 ?_5
	[
		child-0:*n:Num -> ({ elevation_1 ( *n:Place ) })	#children:3[18,148]3	0.0025873631121202697	info:[6, 5, 18, 148, 27, 1]tall_1 is_2 mount_3 mckinley_4 ?_5
		[
			child-0:*n:Place -> ({ placeid ( *n:PlaceName ) })	#children:2[17,149]2	0.0021047858903572633	info:[6, 4, 17, 149, 27, 1]is_2 mount_3 mckinley_4 ?_5
			[
				child-0:*n:PlaceName -> ({ ' mount mckinley ' })	#children:1[16,98]1	25.13727960597382	info:[5, 2, 16, 98, 26, 1]mount_3 mckinley_4
			]
		]
	]
]

output:	answer(elevation_1(placeid('mountmckinley')))
predic:	answer(elevation_1(placeid('mountmckinley')))
60:	true
=INPUT=
what are the major cities in alabama ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	0.0	null
	[
		child-0:*n:City -> ({ major ( *n:City ) })	#children:5[18,156]5	0.0	null
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	0.0	null
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[16,122]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' alabama ' })	#children:1[14,96]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	5.1889950241437823E11	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	4.4082797037251794E11	info:[8, 8, 19, 120, 27, 1]what_0 are_1 the_2 major_3 cities_4 in_5 alabama_6 ?_7
	[
		child-0:*n:City -> ({ major ( *n:City ) })	#children:5[18,156]5	4.766414344489407E8	info:[8, 5, 18, 156, 27, 1]major_3 cities_4 in_5 alabama_6 ?_7
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	282198.9712646986	info:[8, 4, 17, 121, 27, 1]cities_4 in_5 alabama_6 ?_7
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[16,122]3	6169.357548369572	info:[8, 3, 16, 122, 27, 1]in_5 alabama_6 ?_7
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[7, 1, 15, 123, 27, 1]alabama_6
					[
						child-0:*n:StateName -> ({ ' alabama ' })	#children:1[14,96]1	1.0	info:[7, 1, 14, 96, 26, 1]alabama_6
					]
				]
			]
		]
	]
]

output:	answer(major(city(loc_2(stateid('alabama')))))
predic:	answer(major(city(loc_2(stateid('alabama')))))
76:	false
=INPUT=
what city in the united states has the highest population density ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	0.0	null
	[
		child-0:*n:City -> ({ largest_one ( density_1 ( *n:City ) ) })	#children:5[18,0]5	0.0	null
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	0.0	null
			[
				child-0:*n:City -> ({ loc_2 ( *n:Country ) })	#children:3[16,138]3	0.0	null
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	0.0	null
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	950545.8107119977	info:[13, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	807530.511269688	info:[12, 12, 19, 120, 27, 1]what_0 city_1 in_2 the_3 united_4 states_5 has_6 the_7 highest_8 population_9 density_10 ?_11
	[
		child-0:*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })	#children:5[18,188]5	13765.958772782928	info:[12, 11, 18, 188, 27, 1]city_1 in_2 the_3 united_4 states_5 has_6 the_7 highest_8 population_9 density_10 ?_11
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	20715.68085233493	info:[6, 5, 17, 121, 27, 1]city_1 in_2 the_3 united_4 states_5
			[
				child-0:*n:City -> ({ loc_2 ( *n:Country ) })	#children:3[16,138]3	6.721962316557289	info:[6, 4, 16, 138, 27, 1]in_2 the_3 united_4 states_5
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	102.61516638623796	info:[6, 2, 15, 137, 27, 1]united_4 states_5
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	12.707968101491481	info:[6, 2, 14, 34, 26, 1]united_4 states_5
					]
				]
			]
		]
	]
]

output:	answer(largest_one(density_1(city(loc_2(countryid('usa'))))))
predic:	answer(largest_one(population_1(city(loc_2(countryid('usa'))))))
92:	true
=INPUT=
what is the capital of new york ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:5[19,120]5	0.0	null
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:4[18,131]4	0.0	null
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[17,122]3	0.0	null
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	0.0	null
				[
					child-0:*n:StateName -> ({ ' new york ' })	#children:1[15,112]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	5162566.6598269325	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:5[19,120]5	4385827.644804609	info:[8, 8, 19, 120, 27, 1]what_0 is_1 the_2 capital_3 of_4 new_5 york_6 ?_7
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:4[18,131]4	5786.501750170069	info:[8, 5, 18, 131, 27, 1]capital_3 of_4 new_5 york_6 ?_7
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[17,122]3	0.4708862273035815	info:[8, 4, 17, 122, 27, 1]of_4 new_5 york_6 ?_7
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	4.1405535583285764E7	info:[7, 2, 16, 123, 27, 1]new_5 york_6
				[
					child-0:*n:StateName -> ({ ' new york ' })	#children:1[15,112]1	0.012648382451544106	info:[7, 2, 15, 112, 26, 1]new_5 york_6
				]
			]
		]
	]
]

output:	answer(capital(loc_2(stateid('newyork'))))
predic:	answer(capital(loc_2(stateid('newyork'))))
108:	true
=INPUT=
what is the highest mountain in us ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	0.0	null
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	0.0	null
		[
			child-0:*n:Place -> ({ mountain ( *n:Place ) })	#children:4[17,197]4	0.0	null
			[
				child-0:*n:Place -> ({ loc_2 ( *n:Country ) })	#children:3[16,183]3	0.0	null
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	0.0	null
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	35888.11829950949	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	49680.60743100308	info:[8, 8, 19, 124, 27, 1]what_0 is_1 the_2 highest_3 mountain_4 in_5 us_6 ?_7
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	7103.537017951151	info:[8, 7, 18, 132, 27, 1]is_1 the_2 highest_3 mountain_4 in_5 us_6 ?_7
		[
			child-0:*n:Place -> ({ mountain ( *n:Place ) })	#children:4[17,197]4	0.4846904871880061	info:[8, 4, 17, 197, 27, 1]mountain_4 in_5 us_6 ?_7
			[
				child-0:*n:Place -> ({ loc_2 ( *n:Country ) })	#children:3[16,183]3	0.011775687259780664	info:[8, 3, 16, 183, 27, 1]in_5 us_6 ?_7
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	8.074868111621592	info:[7, 1, 15, 137, 27, 1]us_6
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	1.0	info:[7, 1, 14, 34, 26, 1]us_6
					]
				]
			]
		]
	]
]

output:	answer(highest(mountain(loc_2(countryid('usa')))))
predic:	answer(highest(mountain(loc_2(countryid('usa')))))
124:	true
=INPUT=
what is the largest city in smallest state through which the mississippi runs ?
=OUTPUT=
ROOT	#children:10[20,1000]10	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:9[19,120]9	0.0	null
	[
		child-0:*n:City -> ({ largest ( *n:City ) })	#children:8[18,150]8	0.0	null
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:7[17,121]7	0.0	null
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:6[16,122]6	0.0	null
				[
					child-0:*n:State -> ({ smallest ( *n:State ) })	#children:5[15,165]5	0.0	null
					[
						child-0:*n:State -> ({ state ( *n:State ) })	#children:4[14,126]4	0.0	null
						[
							child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:3[13,181]3	0.0	null
							[
								child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[12,152]2	0.0	null
								[
									child-0:*n:RiverName -> ({ ' mississippi ' })	#children:1[11,84]1	0.0	null
								]
							]
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:10[20,1000]10	1.1610835326589869E26	info:[15, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:9[19,120]9	9.863915743867398E25	info:[14, 14, 19, 120, 27, 1]what_0 is_1 the_2 largest_3 city_4 in_5 smallest_6 state_7 through_8 which_9 the_10 mississippi_11 runs_12 ?_13
	[
		child-0:*n:City -> ({ largest ( *n:City ) })	#children:8[18,150]8	5.086798773302452E22	info:[14, 11, 18, 150, 27, 1]largest_3 city_4 in_5 smallest_6 state_7 through_8 which_9 the_10 mississippi_11 runs_12 ?_13
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:7[17,121]7	3.4424837586378516E18	info:[14, 10, 17, 121, 27, 1]city_4 in_5 smallest_6 state_7 through_8 which_9 the_10 mississippi_11 runs_12 ?_13
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:6[16,122]6	4.3145221915107825E14	info:[14, 9, 16, 122, 27, 1]in_5 smallest_6 state_7 through_8 which_9 the_10 mississippi_11 runs_12 ?_13
				[
					child-0:*n:State -> ({ smallest ( *n:State ) })	#children:5[15,165]5	1.13079693402441904E17	info:[13, 7, 15, 165, 27, 1]smallest_6 state_7 through_8 which_9 the_10 mississippi_11 runs_12
					[
						child-0:*n:State -> ({ state ( *n:State ) })	#children:4[14,126]4	5.6286422340467136E16	info:[13, 6, 14, 126, 27, 1]state_7 through_8 which_9 the_10 mississippi_11 runs_12
						[
							child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:3[13,181]3	1.8017933801119995E15	info:[13, 5, 13, 181, 27, 1]through_8 which_9 the_10 mississippi_11 runs_12
							[
								child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[12,152]2	1.1954283726525978E11	info:[12, 2, 12, 152, 27, 1]the_10 mississippi_11
								[
									child-0:*n:RiverName -> ({ ' mississippi ' })	#children:1[11,84]1	1.0	info:[12, 1, 11, 84, 26, 1]mississippi_11
								]
							]
						]
					]
				]
			]
		]
	]
]

output:	answer(largest(city(loc_2(smallest(state(traverse_1(riverid('mississippi'))))))))
predic:	answer(largest(city(loc_2(smallest(state(traverse_1(riverid('mississippi'))))))))
140:	true
=INPUT=
what is the lowest point in arkansas ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	0.0	null
	[
		child-0:*n:Place -> ({ lowest ( *n:Place ) })	#children:5[18,186]5	0.0	null
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	0.0	null
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[16,134]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' arkansas ' })	#children:1[14,16]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	3.8015918115664294E14	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	5.262616134597634E14	info:[8, 8, 19, 124, 27, 1]what_0 is_1 the_2 lowest_3 point_4 in_5 arkansas_6 ?_7
	[
		child-0:*n:Place -> ({ lowest ( *n:Place ) })	#children:5[18,186]5	2.879451454132773E14	info:[8, 7, 18, 186, 27, 1]is_1 the_2 lowest_3 point_4 in_5 arkansas_6 ?_7
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	2.6065803416354266E8	info:[8, 4, 17, 133, 27, 1]point_4 in_5 arkansas_6 ?_7
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[16,134]3	66412.29982452093	info:[8, 3, 16, 134, 27, 1]in_5 arkansas_6 ?_7
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[7, 1, 15, 123, 27, 1]arkansas_6
					[
						child-0:*n:StateName -> ({ ' arkansas ' })	#children:1[14,16]1	1.0	info:[7, 1, 14, 16, 26, 1]arkansas_6
					]
				]
			]
		]
	]
]

output:	answer(lowest(place(loc_2(stateid('arkansas')))))
predic:	answer(lowest(place(loc_2(stateid('arkansas')))))
156:	true
=INPUT=
what is the population of erie pennsylvania ?
=OUTPUT=
ROOT	#children:6[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:5[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:4[18,159]3	0.0	null
		[
			child-0:*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })	#children:3[17,164]2	0.0	null
			[
				child-0:*n:CityName -> ({ ' erie ' })	#children:1[16,28]1	0.0	null
			]
			[
				child-0:*n:StateAbbrev -> ({ ' pa ' })	#children:1[16,59]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]5	2.064920326054053E15	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:5[19,144]4	1.1470276336447334E16	info:[8, 8, 19, 144, 27, 1]what_0 is_1 the_2 population_3 of_4 erie_5 pennsylvania_6 ?_7
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:4[18,159]3	2.54656330883339744E17	info:[8, 6, 18, 159, 27, 1]the_2 population_3 of_4 erie_5 pennsylvania_6 ?_7
		[
			child-0:*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })	#children:3[17,164]2	5.368334104434134E10	info:[8, 3, 17, 164, 28, 1]erie_5 pennsylvania_6 ?_7
			[
				child-0:*n:CityName -> ({ ' erie ' })	#children:1[16,28]1	1.0	info:[6, 1, 16, 28, 26, 1]erie_5
			]
			[
				child-0:*n:StateAbbrev -> ({ ' pa ' })	#children:1[16,59]1	1.0	info:[7, 1, 16, 59, 26, 1]pennsylvania_6
			]
		]
	]
]

output:	answer(population_1(cityid('erie','pa')))
predic:	answer(population_1(cityid('erie','pa')))
172:	true
=INPUT=
what is the smallest city in the usa ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	0.0	null
	[
		child-0:*n:City -> ({ smallest ( *n:City ) })	#children:5[18,204]5	0.0	null
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	0.0	null
			[
				child-0:*n:City -> ({ loc_2 ( *n:Country ) })	#children:3[16,138]3	0.0	null
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	0.0	null
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	2.4272778107671386E8	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	2.062079354233502E8	info:[9, 9, 19, 120, 27, 1]what_0 is_1 the_2 smallest_3 city_4 in_5 the_6 usa_7 ?_8
	[
		child-0:*n:City -> ({ smallest ( *n:City ) })	#children:5[18,204]5	437376.77263778955	info:[9, 6, 18, 204, 27, 1]smallest_3 city_4 in_5 the_6 usa_7 ?_8
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	115.76683256234449	info:[9, 5, 17, 121, 27, 1]city_4 in_5 the_6 usa_7 ?_8
			[
				child-0:*n:City -> ({ loc_2 ( *n:Country ) })	#children:3[16,138]3	0.022047161845625423	info:[9, 4, 16, 138, 27, 1]in_5 the_6 usa_7 ?_8
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	8.074868111621592	info:[8, 1, 15, 137, 27, 1]usa_7
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	1.0	info:[8, 1, 14, 34, 26, 1]usa_7
					]
				]
			]
		]
	]
]

output:	answer(smallest(city(loc_2(countryid('usa')))))
predic:	answer(smallest(city(loc_2(countryid('usa')))))
188:	false
=INPUT=
what rivers traverses the state which borders the most states ?
=OUTPUT=
ROOT	#children:8[20,1000]8	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:7[19,128]7	0.0	null
	[
		child-0:*n:River -> ({ river ( *n:River ) })	#children:6[18,129]6	0.0	null
		[
			child-0:*n:River -> ({ traverse_2 ( *n:State ) })	#children:5[17,163]5	0.0	null
			[
				child-0:*n:State -> ({ most ( *n:State ) })	#children:4[16,179]4	0.0	null
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:3[15,126]3	0.0	null
					[
						child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:2[14,127]2	0.0	null
						[
							child-0:*n:State -> ({ state ( all ) })	#children:1[13,141]1	0.0	null
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:8[20,1000]8	3.4114503469672314E11	info:[12, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:7[19,128]7	1.482519347527492E11	info:[11, 11, 19, 128, 27, 1]what_0 rivers_1 traverses_2 the_3 state_4 which_5 borders_6 the_7 most_8 states_9 ?_10
	[
		child-0:*n:River -> ({ river ( *n:River ) })	#children:6[18,129]6	3.437683226095798E8	info:[11, 10, 18, 129, 27, 1]rivers_1 traverses_2 the_3 state_4 which_5 borders_6 the_7 most_8 states_9 ?_10
		[
			child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:5[17,130]5	4.174113066032265E7	info:[11, 9, 17, 130, 27, 1]traverses_2 the_3 state_4 which_5 borders_6 the_7 most_8 states_9 ?_10
			[
				child-0:*n:State -> ({ most ( *n:State ) })	#children:4[16,179]4	8.338396730494878E10	info:[10, 7, 16, 179, 27, 1]the_3 state_4 which_5 borders_6 the_7 most_8 states_9
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:3[15,126]3	2147031.337228599	info:[8, 4, 15, 126, 27, 1]state_4 which_5 borders_6 the_7
					[
						child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:2[14,127]2	204.05245303194923	info:[8, 2, 14, 127, 27, 1]borders_6 the_7
						[
							child-0:*n:State -> ({ state ( all ) })	#children:1[13,141]1	0.0016054145812558192	info:[8, 1, 13, 141, 26, 1]the_7
						]
					]
				]
			]
		]
	]
]

output:	answer(river(traverse_2(most(state(next_to_2(state(all)))))))
predic:	answer(river(loc_2(most(state(next_to_2(state(all)))))))
204:	true
=INPUT=
what states border florida ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	0.0	null
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[17,127]3	0.0	null
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	0.0	null
				[
					child-0:*n:StateName -> ({ ' florida ' })	#children:1[15,13]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	1.1846231129898967E11	info:[6, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	5.292537921215912E10	info:[5, 5, 19, 135, 27, 1]what_0 states_1 border_2 florida_3 ?_4
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	7.470669977502128E11	info:[4, 4, 18, 126, 27, 1]what_0 states_1 border_2 florida_3
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[17,127]3	5.421987562145277E10	info:[4, 2, 17, 127, 27, 1]border_2 florida_3
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	3.273583459538019E9	info:[4, 1, 16, 123, 27, 1]florida_3
				[
					child-0:*n:StateName -> ({ ' florida ' })	#children:1[15,13]1	1.0	info:[4, 1, 15, 13, 26, 1]florida_3
				]
			]
		]
	]
]

output:	answer(state(next_to_2(stateid('florida'))))
predic:	answer(state(next_to_2(stateid('florida'))))
220:	true
=INPUT=
what states does the missouri run through ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	0.0	null
		[
			child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:3[17,181]3	0.0	null
			[
				child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[16,152]2	0.0	null
				[
					child-0:*n:RiverName -> ({ ' missouri ' })	#children:1[15,115]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	1.9145668884948164E16	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	8.553706025951527E15	info:[8, 8, 19, 135, 27, 1]what_0 states_1 does_2 the_3 missouri_4 run_5 through_6 ?_7
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	5.0249087921630664E16	info:[7, 7, 18, 126, 27, 1]what_0 states_1 does_2 the_3 missouri_4 run_5 through_6
		[
			child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:3[17,181]3	1.0496795305457066E13	info:[7, 5, 17, 181, 27, 1]does_2 the_3 missouri_4 run_5 through_6
			[
				child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[16,152]2	1.3657170819272673E9	info:[5, 2, 16, 152, 27, 1]the_3 missouri_4
				[
					child-0:*n:RiverName -> ({ ' missouri ' })	#children:1[15,115]1	1.0	info:[5, 1, 15, 115, 26, 1]missouri_4
				]
			]
		]
	]
]

output:	answer(state(traverse_1(riverid('missouri'))))
predic:	answer(state(traverse_1(riverid('missouri'))))
236:	true
=INPUT=
where is the smallest city ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:4[19,135]4	0.0	null
	[
		child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:3[18,172]3	0.0	null
		[
			child-0:*n:City -> ({ smallest ( *n:City ) })	#children:2[17,204]2	0.0	null
			[
				child-0:*n:City -> ({ city ( all ) })	#children:1[16,160]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	2.2518759229735345E-4	info:[7, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:4[19,135]4	1.0060700813214809E-4	info:[6, 6, 19, 135, 27, 1]where_0 is_1 the_2 smallest_3 city_4 ?_5
	[
		child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:3[18,172]3	3.465278782630376E-6	info:[6, 5, 18, 172, 27, 1]is_1 the_2 smallest_3 city_4 ?_5
		[
			child-0:*n:City -> ({ smallest ( *n:City ) })	#children:2[17,204]2	0.18358445094454273	info:[5, 2, 17, 204, 27, 1]smallest_3 city_4
			[
				child-0:*n:City -> ({ city ( all ) })	#children:1[16,160]1	1.4626195648424566E-4	info:[5, 1, 16, 160, 26, 1]city_4
			]
		]
	]
]

output:	answer(loc_1(smallest(city(all))))
predic:	answer(loc_1(smallest(city(all))))
252:	false
=INPUT=
which state capital has the smallest population ?
=OUTPUT=
ROOT	#children:4[20,1000]4	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:3[19,120]3	0.0	null
	[
		child-0:*n:City -> ({ smallest_one ( population_1 ( *n:City ) ) })	#children:2[18,190]2	0.0	null
		[
			child-0:*n:City -> ({ capital ( all ) })	#children:1[17,189]1	0.0	null
		]
	]
]

=PREDICTION=
ROOT	#children:4[20,1000]4	0.4651049575274924	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	0.20779483348479647	info:[8, 8, 19, 135, 27, 1]which_0 state_1 capital_2 has_3 the_4 smallest_5 population_6 ?_7
	[
		child-0:*n:State -> ({ smallest_one ( population_1 ( *n:State ) ) })	#children:2[18,200]2	1.0476139789476567E-4	info:[8, 7, 18, 200, 27, 1]state_1 capital_2 has_3 the_4 smallest_5 population_6 ?_7
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	0.03088945118727059	info:[3, 2, 17, 141, 26, 1]state_1 capital_2
		]
	]
]

output:	answer(smallest_one(population_1(capital(all))))
predic:	answer(smallest_one(population_1(state(all))))
268:	true
=INPUT=
which state is mount mckinley in ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	0.0	null
		[
			child-0:*n:State -> ({ loc_1 ( *n:Place ) })	#children:3[17,167]3	0.0	null
			[
				child-0:*n:Place -> ({ placeid ( *n:PlaceName ) })	#children:2[16,149]2	0.0	null
				[
					child-0:*n:PlaceName -> ({ ' mount mckinley ' })	#children:1[15,98]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	0.0011564675722812424	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	5.166747477606554E-4	info:[7, 7, 19, 135, 27, 1]which_0 state_1 is_2 mount_3 mckinley_4 in_5 ?_6
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	3.4542419108804926E-8	info:[7, 6, 18, 126, 27, 1]state_1 is_2 mount_3 mckinley_4 in_5 ?_6
		[
			child-0:*n:State -> ({ loc_1 ( *n:Place ) })	#children:3[17,167]3	5.939763772857302E-10	info:[7, 5, 17, 167, 27, 1]is_2 mount_3 mckinley_4 in_5 ?_6
			[
				child-0:*n:Place -> ({ placeid ( *n:PlaceName ) })	#children:2[16,149]2	8.016433786700302E-4	info:[6, 4, 16, 149, 27, 1]is_2 mount_3 mckinley_4 in_5
				[
					child-0:*n:PlaceName -> ({ ' mount mckinley ' })	#children:1[15,98]1	8.629075776339299	info:[5, 2, 15, 98, 26, 1]mount_3 mckinley_4
				]
			]
		]
	]
]

output:	answer(state(loc_1(placeid('mountmckinley'))))
predic:	answer(state(loc_1(placeid('mountmckinley'))))
13:	true
=INPUT=
how long is the longest river in the usa ?
=OUTPUT=
ROOT	#children:8[20,1000]8	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:7[19,144]7	0.0	null
	[
		child-0:*n:Num -> ({ len ( *n:River ) })	#children:6[18,151]6	0.0	null
		[
			child-0:*n:River -> ({ longest ( *n:River ) })	#children:5[17,142]5	0.0	null
			[
				child-0:*n:River -> ({ river ( *n:River ) })	#children:4[16,129]4	0.0	null
				[
					child-0:*n:River -> ({ loc_2 ( *n:Country ) })	#children:3[15,154]3	0.0	null
					[
						child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[14,137]2	0.0	null
						[
							child-0:*n:CountryName -> ({ ' usa ' })	#children:1[13,34]1	0.0	null
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:8[20,1000]8	3.584153851277832E8	info:[11, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:7[19,144]7	1.9909356592493722E9	info:[10, 10, 19, 144, 27, 1]how_0 long_1 is_2 the_3 longest_4 river_5 in_6 the_7 usa_8 ?_9
	[
		child-0:*n:Num -> ({ len ( *n:River ) })	#children:6[18,151]6	917018.1418547868	info:[10, 9, 18, 151, 27, 1]long_1 is_2 the_3 longest_4 river_5 in_6 the_7 usa_8 ?_9
		[
			child-0:*n:River -> ({ longest ( *n:River ) })	#children:5[17,142]5	3122933.745904498	info:[9, 6, 17, 142, 27, 1]the_3 longest_4 river_5 in_6 the_7 usa_8
			[
				child-0:*n:River -> ({ river ( *n:River ) })	#children:4[16,129]4	276.5339369739107	info:[9, 4, 16, 129, 27, 1]river_5 in_6 the_7 usa_8
				[
					child-0:*n:River -> ({ loc_2 ( *n:Country ) })	#children:3[15,154]3	9.059106656421433	info:[9, 3, 15, 154, 27, 1]in_6 the_7 usa_8
					[
						child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[14,137]2	8.074868111621592	info:[9, 1, 14, 137, 27, 1]usa_8
						[
							child-0:*n:CountryName -> ({ ' usa ' })	#children:1[13,34]1	1.0	info:[9, 1, 13, 34, 26, 1]usa_8
						]
					]
				]
			]
		]
	]
]

output:	answer(len(longest(river(loc_2(countryid('usa'))))))
predic:	answer(len(longest(river(loc_2(countryid('usa'))))))
29:	true
=INPUT=
how many people reside in utah ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:3[18,158]3	0.0	null
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	0.0	null
			[
				child-0:*n:StateName -> ({ ' utah ' })	#children:1[16,65]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	6.85843833854975E12	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	3.8097442301796016E13	info:[7, 7, 19, 144, 27, 1]how_0 many_1 people_2 reside_3 in_4 utah_5 ?_6
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:3[18,158]3	445435.9567727762	info:[7, 5, 18, 158, 27, 1]people_2 reside_3 in_4 utah_5 ?_6
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	3.273583459538019E9	info:[6, 1, 17, 123, 27, 1]utah_5
			[
				child-0:*n:StateName -> ({ ' utah ' })	#children:1[16,65]1	1.0	info:[6, 1, 16, 65, 26, 1]utah_5
			]
		]
	]
]

output:	answer(population_1(stateid('utah')))
predic:	answer(population_1(stateid('utah')))
45:	true
=INPUT=
how tall is the highest point in montana ?
=OUTPUT=
ROOT	#children:8[20,1000]8	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:7[19,144]7	0.0	null
	[
		child-0:*n:Num -> ({ elevation_1 ( *n:Place ) })	#children:6[18,148]6	0.0	null
		[
			child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[17,132]5	0.0	null
			[
				child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[16,133]4	0.0	null
				[
					child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[15,134]3	0.0	null
					[
						child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[14,123]2	0.0	null
						[
							child-0:*n:StateName -> ({ ' montana ' })	#children:1[13,49]1	0.0	null
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:8[20,1000]8	1.0684134941661144E16	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:7[19,144]7	5.9348527229102392E16	info:[9, 9, 19, 144, 27, 1]how_0 tall_1 is_2 the_3 highest_4 point_5 in_6 montana_7 ?_8
	[
		child-0:*n:Num -> ({ elevation_1 ( *n:Place ) })	#children:6[18,148]6	5.4390930486833955E12	info:[9, 6, 18, 148, 27, 1]the_3 highest_4 point_5 in_6 montana_7 ?_8
		[
			child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[17,132]5	1.2277789597046041E13	info:[9, 6, 17, 132, 27, 1]the_3 highest_4 point_5 in_6 montana_7 ?_8
			[
				child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[16,133]4	2.380077960242164E8	info:[9, 4, 16, 133, 27, 1]point_5 in_6 montana_7 ?_8
				[
					child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[15,134]3	53467.94434509325	info:[9, 3, 15, 134, 27, 1]in_6 montana_7 ?_8
					[
						child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[14,123]2	3.273583459538019E9	info:[8, 1, 14, 123, 27, 1]montana_7
						[
							child-0:*n:StateName -> ({ ' montana ' })	#children:1[13,49]1	1.0	info:[8, 1, 13, 49, 26, 1]montana_7
						]
					]
				]
			]
		]
	]
]

output:	answer(elevation_1(highest(place(loc_2(stateid('montana'))))))
predic:	answer(elevation_1(highest(place(loc_2(stateid('montana'))))))
61:	true
=INPUT=
what are the major cities in alaska ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	0.0	null
	[
		child-0:*n:City -> ({ major ( *n:City ) })	#children:5[18,156]5	0.0	null
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	0.0	null
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[16,122]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' alaska ' })	#children:1[14,80]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	4.6376113975592556E14	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	3.9398550398491475E14	info:[8, 8, 19, 120, 27, 1]what_0 are_1 the_2 major_3 cities_4 in_5 alaska_6 ?_7
	[
		child-0:*n:City -> ({ major ( *n:City ) })	#children:5[18,156]5	4.259934223610382E11	info:[8, 5, 18, 156, 27, 1]major_3 cities_4 in_5 alaska_6 ?_7
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	2.5221245336087292E8	info:[8, 4, 17, 121, 27, 1]cities_4 in_5 alaska_6 ?_7
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[16,122]3	5513800.408135478	info:[8, 3, 16, 122, 27, 1]in_5 alaska_6 ?_7
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[7, 1, 15, 123, 27, 1]alaska_6
					[
						child-0:*n:StateName -> ({ ' alaska ' })	#children:1[14,80]1	1.0	info:[7, 1, 14, 80, 26, 1]alaska_6
					]
				]
			]
		]
	]
]

output:	answer(major(city(loc_2(stateid('alaska')))))
predic:	answer(major(city(loc_2(stateid('alaska')))))
77:	true
=INPUT=
what is capital of the state with the lowest point ?
=OUTPUT=
ROOT	#children:8[20,1000]8	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:7[19,120]7	0.0	null
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:6[18,131]6	0.0	null
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:5[17,122]5	0.0	null
			[
				child-0:*n:State -> ({ state ( *n:State ) })	#children:4[16,126]4	0.0	null
				[
					child-0:*n:State -> ({ loc_1 ( *n:Place ) })	#children:3[15,167]3	0.0	null
					[
						child-0:*n:Place -> ({ lowest ( *n:Place ) })	#children:2[14,186]2	0.0	null
						[
							child-0:*n:Place -> ({ place ( all ) })	#children:1[13,168]1	0.0	null
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:8[20,1000]8	50.0974956526234	info:[12, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:7[19,120]7	42.560027956349984	info:[11, 11, 19, 120, 27, 1]what_0 is_1 capital_2 of_3 the_4 state_5 with_6 the_7 lowest_8 point_9 ?_10
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:6[18,131]6	2.9970915162168255	info:[11, 9, 18, 131, 27, 1]capital_2 of_3 the_4 state_5 with_6 the_7 lowest_8 point_9 ?_10
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:5[17,122]5	0.018124460220551104	info:[11, 8, 17, 122, 27, 1]of_3 the_4 state_5 with_6 the_7 lowest_8 point_9 ?_10
			[
				child-0:*n:State -> ({ state ( *n:State ) })	#children:4[16,126]4	0.8035156513596644	info:[10, 5, 16, 126, 27, 1]state_5 with_6 the_7 lowest_8 point_9
				[
					child-0:*n:State -> ({ loc_1 ( *n:Place ) })	#children:3[15,167]3	0.017752398654253425	info:[10, 4, 15, 167, 27, 1]with_6 the_7 lowest_8 point_9
					[
						child-0:*n:Place -> ({ lowest ( *n:Place ) })	#children:2[14,186]2	26.437807896443452	info:[10, 3, 14, 186, 27, 1]the_7 lowest_8 point_9
						[
							child-0:*n:Place -> ({ place ( all ) })	#children:1[13,168]1	0.0022598029869899945	info:[10, 1, 13, 168, 26, 1]point_9
						]
					]
				]
			]
		]
	]
]

output:	answer(capital(loc_2(state(loc_1(lowest(place(all)))))))
predic:	answer(capital(loc_2(state(loc_1(lowest(place(all)))))))
93:	true
=INPUT=
what is the capital of north dakota ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:5[19,120]5	0.0	null
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:4[18,131]4	0.0	null
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[17,122]3	0.0	null
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	0.0	null
				[
					child-0:*n:StateName -> ({ ' north dakota ' })	#children:1[15,104]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	6.1049149430516045E12	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:5[19,120]5	5.186393995601032E12	info:[8, 8, 19, 120, 27, 1]what_0 is_1 the_2 capital_3 of_4 north_5 dakota_6 ?_7
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:4[18,131]4	6.842739925762399E9	info:[8, 5, 18, 131, 27, 1]capital_3 of_4 north_5 dakota_6 ?_7
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[17,122]3	556839.369826017	info:[8, 4, 17, 122, 27, 1]of_4 north_5 dakota_6 ?_7
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	5.821517290280252E9	info:[7, 2, 16, 123, 27, 1]north_5 dakota_6
				[
					child-0:*n:StateName -> ({ ' north dakota ' })	#children:1[15,104]1	1.7783317157589174	info:[7, 2, 15, 104, 26, 1]north_5 dakota_6
				]
			]
		]
	]
]

output:	answer(capital(loc_2(stateid('northdakota'))))
predic:	answer(capital(loc_2(stateid('northdakota'))))
109:	true
=INPUT=
what is the highest point in delaware ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	0.0	null
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	0.0	null
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	0.0	null
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[16,134]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' delaware ' })	#children:1[14,21]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	3.5659795956951295E15	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	4.93645364524776E15	info:[8, 8, 19, 124, 27, 1]what_0 is_1 the_2 highest_3 point_4 in_5 delaware_6 ?_7
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	7.058343893060854E14	info:[8, 7, 18, 132, 27, 1]is_1 the_2 highest_3 point_4 in_5 delaware_6 ?_7
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	2.1390953920377092E9	info:[8, 4, 17, 133, 27, 1]point_4 in_5 delaware_6 ?_7
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[16,134]3	480543.2228727526	info:[8, 3, 16, 134, 27, 1]in_5 delaware_6 ?_7
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[7, 1, 15, 123, 27, 1]delaware_6
					[
						child-0:*n:StateName -> ({ ' delaware ' })	#children:1[14,21]1	1.0	info:[7, 1, 14, 21, 26, 1]delaware_6
					]
				]
			]
		]
	]
]

output:	answer(highest(place(loc_2(stateid('delaware')))))
predic:	answer(highest(place(loc_2(stateid('delaware')))))
125:	true
=INPUT=
what is the largest city in the smallest state in the usa ?
=OUTPUT=
ROOT	#children:10[20,1000]10	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:9[19,120]9	0.0	null
	[
		child-0:*n:City -> ({ largest ( *n:City ) })	#children:8[18,150]8	0.0	null
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:7[17,121]7	0.0	null
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:6[16,122]6	0.0	null
				[
					child-0:*n:State -> ({ smallest ( *n:State ) })	#children:5[15,165]5	0.0	null
					[
						child-0:*n:State -> ({ state ( *n:State ) })	#children:4[14,126]4	0.0	null
						[
							child-0:*n:State -> ({ loc_2 ( *n:Country ) })	#children:3[13,136]3	0.0	null
							[
								child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[12,137]2	0.0	null
								[
									child-0:*n:CountryName -> ({ ' usa ' })	#children:1[11,34]1	0.0	null
								]
							]
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:10[20,1000]10	6.171798830495024E15	info:[14, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:9[19,120]9	5.243214802356714E15	info:[13, 13, 19, 120, 27, 1]what_0 is_1 the_2 largest_3 city_4 in_5 the_6 smallest_7 state_8 in_9 the_10 usa_11 ?_12
	[
		child-0:*n:City -> ({ largest ( *n:City ) })	#children:8[18,150]8	2.7039138732882637E12	info:[13, 10, 18, 150, 27, 1]largest_3 city_4 in_5 the_6 smallest_7 state_8 in_9 the_10 usa_11 ?_12
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:7[17,121]7	1.8298698274450034E8	info:[13, 9, 17, 121, 27, 1]city_4 in_5 the_6 smallest_7 state_8 in_9 the_10 usa_11 ?_12
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:6[16,122]6	22934.063111488493	info:[13, 8, 16, 122, 27, 1]in_5 the_6 smallest_7 state_8 in_9 the_10 usa_11 ?_12
				[
					child-0:*n:State -> ({ smallest ( *n:State ) })	#children:5[15,165]5	398045.3954025615	info:[12, 5, 15, 165, 27, 1]smallest_7 state_8 in_9 the_10 usa_11
					[
						child-0:*n:State -> ({ state ( *n:State ) })	#children:4[14,126]4	1271.4120510239275	info:[12, 4, 14, 126, 27, 1]state_8 in_9 the_10 usa_11
						[
							child-0:*n:State -> ({ loc_2 ( *n:Country ) })	#children:3[13,136]3	82.1880381808124	info:[12, 3, 13, 136, 27, 1]in_9 the_10 usa_11
							[
								child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[12,137]2	8.074868111621592	info:[12, 1, 12, 137, 27, 1]usa_11
								[
									child-0:*n:CountryName -> ({ ' usa ' })	#children:1[11,34]1	1.0	info:[12, 1, 11, 34, 26, 1]usa_11
								]
							]
						]
					]
				]
			]
		]
	]
]

output:	answer(largest(city(loc_2(smallest(state(loc_2(countryid('usa'))))))))
predic:	answer(largest(city(loc_2(smallest(state(loc_2(countryid('usa'))))))))
141:	true
=INPUT=
what is the lowest point in massachusetts ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	0.0	null
	[
		child-0:*n:Place -> ({ lowest ( *n:Place ) })	#children:5[18,186]5	0.0	null
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	0.0	null
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[16,134]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' massachusetts ' })	#children:1[14,113]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	8.042471386304071E15	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	1.1133346707773974E16	info:[8, 8, 19, 124, 27, 1]what_0 is_1 the_2 lowest_3 point_4 in_5 massachusetts_6 ?_7
	[
		child-0:*n:Place -> ({ lowest ( *n:Place ) })	#children:5[18,186]5	6.091633998593964E15	info:[8, 7, 18, 186, 27, 1]is_1 the_2 lowest_3 point_4 in_5 massachusetts_6 ?_7
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	5.514360523905841E9	info:[8, 4, 17, 133, 27, 1]point_4 in_5 massachusetts_6 ?_7
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[16,134]3	1404987.8248692753	info:[8, 3, 16, 134, 27, 1]in_5 massachusetts_6 ?_7
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[7, 1, 15, 123, 27, 1]massachusetts_6
					[
						child-0:*n:StateName -> ({ ' massachusetts ' })	#children:1[14,113]1	1.0	info:[7, 1, 14, 113, 26, 1]massachusetts_6
					]
				]
			]
		]
	]
]

output:	answer(lowest(place(loc_2(stateid('massachusetts')))))
predic:	answer(lowest(place(loc_2(stateid('massachusetts')))))
157:	true
=INPUT=
what is the population of hawaii ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:3[18,158]3	0.0	null
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	0.0	null
			[
				child-0:*n:StateName -> ({ ' hawaii ' })	#children:1[16,101]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	2.9225128122812304E9	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	1.6234054714223356E10	info:[7, 7, 19, 144, 27, 1]what_0 is_1 the_2 population_3 of_4 hawaii_5 ?_6
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:3[18,158]3	4.569315299457648E16	info:[6, 6, 18, 158, 27, 1]what_0 is_1 the_2 population_3 of_4 hawaii_5
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	3.273583459538019E9	info:[6, 1, 17, 123, 27, 1]hawaii_5
			[
				child-0:*n:StateName -> ({ ' hawaii ' })	#children:1[16,101]1	1.0	info:[6, 1, 16, 101, 26, 1]hawaii_5
			]
		]
	]
]

output:	answer(population_1(stateid('hawaii')))
predic:	answer(population_1(stateid('hawaii')))
173:	true
=INPUT=
what is the smallest state bordering wyoming ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	0.0	null
	[
		child-0:*n:State -> ({ smallest ( *n:State ) })	#children:5[18,165]5	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	0.0	null
			[
				child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[16,127]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' wyoming ' })	#children:1[14,69]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	3.826949937922016E11	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	1.709765531919002E11	info:[8, 8, 19, 135, 27, 1]what_0 is_1 the_2 smallest_3 state_4 bordering_5 wyoming_6 ?_7
	[
		child-0:*n:State -> ({ smallest ( *n:State ) })	#children:5[18,165]5	2.5593711186792534E10	info:[8, 7, 18, 165, 27, 1]is_1 the_2 smallest_3 state_4 bordering_5 wyoming_6 ?_7
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	6.670413693789811E10	info:[7, 3, 17, 126, 27, 1]state_4 bordering_5 wyoming_6
			[
				child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[16,127]3	5.223551814420176E9	info:[7, 2, 16, 127, 27, 1]bordering_5 wyoming_6
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[7, 1, 15, 123, 27, 1]wyoming_6
					[
						child-0:*n:StateName -> ({ ' wyoming ' })	#children:1[14,69]1	1.0	info:[7, 1, 14, 69, 26, 1]wyoming_6
					]
				]
			]
		]
	]
]

output:	answer(smallest(state(next_to_2(stateid('wyoming')))))
predic:	answer(smallest(state(next_to_2(stateid('wyoming')))))
189:	true
=INPUT=
what state bordering nevada has the largest population ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	0.0	null
	[
		child-0:*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })	#children:5[18,169]5	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	0.0	null
			[
				child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[16,127]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' nevada ' })	#children:1[14,27]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	1.2747960885159434E8	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	5.695403513831229E7	info:[9, 9, 19, 135, 27, 1]what_0 state_1 bordering_2 nevada_3 has_4 the_5 largest_6 population_7 ?_8
	[
		child-0:*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })	#children:5[18,169]5	1269946.9456126115	info:[9, 8, 18, 169, 27, 1]state_1 bordering_2 nevada_3 has_4 the_5 largest_6 population_7 ?_8
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	1.4322648457333872E9	info:[4, 3, 17, 126, 27, 1]state_1 bordering_2 nevada_3
			[
				child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[16,127]3	1.237956674539622E8	info:[4, 2, 16, 127, 27, 1]bordering_2 nevada_3
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[4, 1, 15, 123, 27, 1]nevada_3
					[
						child-0:*n:StateName -> ({ ' nevada ' })	#children:1[14,27]1	1.0	info:[4, 1, 14, 27, 26, 1]nevada_3
					]
				]
			]
		]
	]
]

output:	answer(largest_one(population_1(state(next_to_2(stateid('nevada'))))))
predic:	answer(largest_one(population_1(state(next_to_2(stateid('nevada'))))))
205:	true
=INPUT=
what states border indiana ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	0.0	null
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[17,127]3	0.0	null
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	0.0	null
				[
					child-0:*n:StateName -> ({ ' indiana ' })	#children:1[15,32]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	1.1632463915303461E10	info:[6, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	5.197033192568171E9	info:[5, 5, 19, 135, 27, 1]what_0 states_1 border_2 indiana_3 ?_4
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	1.0141905447412791E11	info:[4, 4, 18, 126, 27, 1]what_0 states_1 border_2 indiana_3
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[17,127]3	7.360689919100354E9	info:[4, 2, 17, 127, 27, 1]border_2 indiana_3
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	3.273583459538019E9	info:[4, 1, 16, 123, 27, 1]indiana_3
				[
					child-0:*n:StateName -> ({ ' indiana ' })	#children:1[15,32]1	1.0	info:[4, 1, 15, 32, 26, 1]indiana_3
				]
			]
		]
	]
]

output:	answer(state(next_to_2(stateid('indiana'))))
predic:	answer(state(next_to_2(stateid('indiana'))))
221:	true
=INPUT=
what states does the ohio river run through ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:5[18,126]5	0.0	null
		[
			child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:4[17,181]4	0.0	null
			[
				child-0:*n:River -> ({ river ( *n:River ) })	#children:3[16,129]3	0.0	null
				[
					child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[15,152]2	0.0	null
					[
						child-0:*n:RiverName -> ({ ' ohio ' })	#children:1[14,42]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	5.598856418001354E20	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	2.5013997770924694E20	info:[9, 9, 19, 135, 27, 1]what_0 states_1 does_2 the_3 ohio_4 river_5 run_6 through_7 ?_8
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:5[18,126]5	1.4694572965790422E21	info:[8, 8, 18, 126, 27, 1]what_0 states_1 does_2 the_3 ohio_4 river_5 run_6 through_7
		[
			child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:4[17,181]4	3.0696263534886298E17	info:[8, 6, 17, 181, 27, 1]does_2 the_3 ohio_4 river_5 run_6 through_7
			[
				child-0:*n:River -> ({ river ( *n:River ) })	#children:3[16,129]3	2.685100865966903E12	info:[6, 3, 16, 129, 27, 1]the_3 ohio_4 river_5
				[
					child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[15,152]2	9.534476902330925E10	info:[5, 2, 15, 152, 27, 1]the_3 ohio_4
					[
						child-0:*n:RiverName -> ({ ' ohio ' })	#children:1[14,42]1	1.0	info:[5, 1, 14, 42, 26, 1]ohio_4
					]
				]
			]
		]
	]
]

output:	answer(state(traverse_1(river(riverid('ohio')))))
predic:	answer(state(traverse_1(river(riverid('ohio')))))
237:	true
=INPUT=
which city in california has the largest population ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	0.0	null
	[
		child-0:*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })	#children:5[18,188]5	0.0	null
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	0.0	null
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[16,122]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' california ' })	#children:1[14,19]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	5.479096940772915E19	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	4.65473405281159E19	info:[9, 9, 19, 120, 27, 1]which_0 city_1 in_2 california_3 has_4 the_5 largest_6 population_7 ?_8
	[
		child-0:*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })	#children:5[18,188]5	6.128099740292972E16	info:[9, 8, 18, 188, 27, 1]city_1 in_2 california_3 has_4 the_5 largest_6 population_7 ?_8
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	2.1788119206704279E18	info:[5, 4, 17, 121, 27, 1]city_1 in_2 california_3 has_4
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[16,122]3	7.971651491807716E13	info:[5, 3, 16, 122, 27, 1]in_2 california_3 has_4
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[4, 1, 15, 123, 27, 1]california_3
					[
						child-0:*n:StateName -> ({ ' california ' })	#children:1[14,19]1	1.0	info:[4, 1, 14, 19, 26, 1]california_3
					]
				]
			]
		]
	]
]

output:	answer(largest_one(population_1(city(loc_2(stateid('california'))))))
predic:	answer(largest_one(population_1(city(loc_2(stateid('california'))))))
253:	true
=INPUT=
which state has the biggest population ?
=OUTPUT=
ROOT	#children:4[20,1000]4	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	0.0	null
	[
		child-0:*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })	#children:2[18,169]2	0.0	null
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	0.0	null
		]
	]
]

=PREDICTION=
ROOT	#children:4[20,1000]4	257.44008474663286	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	115.0164466674737	info:[7, 7, 19, 135, 27, 1]which_0 state_1 has_2 the_3 biggest_4 population_5 ?_6
	[
		child-0:*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })	#children:2[18,169]2	0.1265217903469518	info:[7, 6, 18, 169, 27, 1]state_1 has_2 the_3 biggest_4 population_5 ?_6
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	3.003886394420056	info:[2, 1, 17, 141, 26, 1]state_1
		]
	]
]

output:	answer(largest_one(population_1(state(all))))
predic:	answer(largest_one(population_1(state(all))))
269:	true
=INPUT=
which state is the smallest ?
=OUTPUT=
ROOT	#children:4[20,1000]4	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	0.0	null
	[
		child-0:*n:State -> ({ smallest ( *n:State ) })	#children:2[18,165]2	0.0	null
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	0.0	null
		]
	]
]

=PREDICTION=
ROOT	#children:4[20,1000]4	0.0020437010896018105	info:[7, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	9.1306385952982E-4	info:[6, 6, 19, 135, 27, 1]which_0 state_1 is_2 the_3 smallest_4 ?_5
	[
		child-0:*n:State -> ({ smallest ( *n:State ) })	#children:2[18,165]2	0.38430343994811084	info:[5, 5, 18, 165, 27, 1]which_0 state_1 is_2 the_3 smallest_4
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	2.1884658436826148	info:[2, 2, 17, 141, 26, 1]which_0 state_1
		]
	]
]

output:	answer(smallest(state(all)))
predic:	answer(smallest(state(all)))
14:	true
=INPUT=
how long is the north platte river ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:5[19,144]5	0.0	null
	[
		child-0:*n:Num -> ({ len ( *n:River ) })	#children:4[18,151]4	0.0	null
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:3[17,129]3	0.0	null
			[
				child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[16,152]2	0.0	null
				[
					child-0:*n:RiverName -> ({ ' north platte ' })	#children:1[15,54]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	1.3239853355960115E10	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:5[19,144]5	7.354510231254622E10	info:[8, 8, 19, 144, 27, 1]how_0 long_1 is_2 the_3 north_4 platte_5 river_6 ?_7
	[
		child-0:*n:Num -> ({ len ( *n:River ) })	#children:4[18,151]4	3.387462209130281E7	info:[8, 7, 18, 151, 27, 1]long_1 is_2 the_3 north_4 platte_5 river_6 ?_7
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:3[17,129]3	4.843691898183282E7	info:[7, 4, 17, 129, 27, 1]the_3 north_4 platte_5 river_6
			[
				child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[16,152]2	1.9486139254086063E9	info:[6, 3, 16, 152, 27, 1]the_3 north_4 platte_5
				[
					child-0:*n:RiverName -> ({ ' north platte ' })	#children:1[15,54]1	0.5139535366896021	info:[6, 2, 15, 54, 26, 1]north_4 platte_5
				]
			]
		]
	]
]

output:	answer(len(river(riverid('northplatte'))))
predic:	answer(len(river(riverid('northplatte'))))
30:	true
=INPUT=
how many residents live in texas ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:3[18,158]3	0.0	null
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	0.0	null
			[
				child-0:*n:StateName -> ({ ' texas ' })	#children:1[16,92]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	5.446360629984883E12	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	3.0253594129344867E13	info:[7, 7, 19, 144, 27, 1]how_0 many_1 residents_2 live_3 in_4 texas_5 ?_6
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:3[18,158]3	1052983.291146389	info:[7, 5, 18, 158, 27, 1]residents_2 live_3 in_4 texas_5 ?_6
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	3.273583459538019E9	info:[6, 1, 17, 123, 27, 1]texas_5
			[
				child-0:*n:StateName -> ({ ' texas ' })	#children:1[16,92]1	1.0	info:[6, 1, 16, 92, 26, 1]texas_5
			]
		]
	]
]

output:	answer(population_1(stateid('texas')))
predic:	answer(population_1(stateid('texas')))
46:	false
=INPUT=
iowa borders how many states ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	0.0	null
	[
		child-0:*n:Num -> ({ count ( *n:State ) })	#children:5[18,176]5	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	0.0	null
			[
				child-0:*n:State -> ({ next_to_1 ( *n:State ) })	#children:3[16,180]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' iowa ' })	#children:1[14,17]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	3.9355785821354517E11	info:[7, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	2.1861460372740496E12	info:[6, 6, 19, 144, 27, 1]iowa_0 borders_1 how_2 many_3 states_4 ?_5
	[
		child-0:*n:Num -> ({ size ( *n:State ) })	#children:3[18,145]3	1.7172588629003875E9	info:[2, 2, 18, 145, 27, 1]iowa_0 borders_1
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	3.273583459538019E9	info:[1, 1, 17, 123, 27, 1]iowa_0
			[
				child-0:*n:StateName -> ({ ' iowa ' })	#children:1[16,17]1	1.0	info:[1, 1, 16, 17, 26, 1]iowa_0
			]
		]
	]
]

output:	answer(count(state(next_to_1(stateid('iowa')))))
predic:	answer(size(stateid('iowa')))
62:	true
=INPUT=
what are the major cities in new york ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	0.0	null
	[
		child-0:*n:City -> ({ major ( *n:City ) })	#children:5[18,156]5	0.0	null
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	0.0	null
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[16,122]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' new york ' })	#children:1[14,112]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	4.173154671170516E7	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	3.545278604398439E7	info:[9, 9, 19, 120, 27, 1]what_0 are_1 the_2 major_3 cities_4 in_5 new_6 york_7 ?_8
	[
		child-0:*n:City -> ({ major ( *n:City ) })	#children:5[18,156]5	38333.01861707264	info:[9, 6, 18, 156, 27, 1]major_3 cities_4 in_5 new_6 york_7 ?_8
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:4[17,121]4	22.695337915208516	info:[9, 5, 17, 121, 27, 1]cities_4 in_5 new_6 york_7 ?_8
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[16,122]3	0.49615933627432374	info:[9, 4, 16, 122, 27, 1]in_5 new_6 york_7 ?_8
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	4.1405535583285764E7	info:[8, 2, 15, 123, 27, 1]new_6 york_7
					[
						child-0:*n:StateName -> ({ ' new york ' })	#children:1[14,112]1	0.012648382451544106	info:[8, 2, 14, 112, 26, 1]new_6 york_7
					]
				]
			]
		]
	]
]

output:	answer(major(city(loc_2(stateid('newyork')))))
predic:	answer(major(city(loc_2(stateid('newyork')))))
78:	true
=INPUT=
what is the area of florida ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ area_1 ( *n:State ) })	#children:3[18,191]3	0.0	null
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	0.0	null
			[
				child-0:*n:StateName -> ({ ' florida ' })	#children:1[16,13]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	6.595655904367049E8	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	3.6637731194104123E9	info:[7, 7, 19, 144, 27, 1]what_0 is_1 the_2 area_3 of_4 florida_5 ?_6
	[
		child-0:*n:Num -> ({ area_1 ( *n:State ) })	#children:3[18,191]3	5.990948282644655E10	info:[7, 5, 18, 191, 27, 1]the_2 area_3 of_4 florida_5 ?_6
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	3.273583459538019E9	info:[6, 1, 17, 123, 27, 1]florida_5
			[
				child-0:*n:StateName -> ({ ' florida ' })	#children:1[16,13]1	1.0	info:[6, 1, 16, 13, 26, 1]florida_5
			]
		]
	]
]

output:	answer(area_1(stateid('florida')))
predic:	answer(area_1(stateid('florida')))
94:	true
=INPUT=
what is the capital of ohio ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:5[19,120]5	0.0	null
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:4[18,131]4	0.0	null
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[17,122]3	0.0	null
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	0.0	null
				[
					child-0:*n:StateName -> ({ ' ohio ' })	#children:1[15,43]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	4.382600345834426E13	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:5[19,120]5	3.723211925274245E13	info:[7, 7, 19, 120, 27, 1]what_0 is_1 the_2 capital_3 of_4 ohio_5 ?_6
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:4[18,131]4	4.9122706286405716E10	info:[7, 4, 18, 131, 27, 1]capital_3 of_4 ohio_5 ?_6
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[17,122]3	3997442.1225168854	info:[7, 3, 17, 122, 27, 1]of_4 ohio_5 ?_6
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	3.273583459538019E9	info:[6, 1, 16, 123, 27, 1]ohio_5
				[
					child-0:*n:StateName -> ({ ' ohio ' })	#children:1[15,43]1	1.0	info:[6, 1, 15, 43, 26, 1]ohio_5
				]
			]
		]
	]
]

output:	answer(capital(loc_2(stateid('ohio'))))
predic:	answer(capital(loc_2(stateid('ohio'))))
110:	true
=INPUT=
what is the highest point in iowa ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	0.0	null
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	0.0	null
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	0.0	null
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[16,134]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' iowa ' })	#children:1[14,17]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	1.0000540829504172E15	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	1.3843939626533842E15	info:[8, 8, 19, 124, 27, 1]what_0 is_1 the_2 highest_3 point_4 in_5 iowa_6 ?_7
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	1.9794632694042847E14	info:[8, 7, 18, 132, 27, 1]is_1 the_2 highest_3 point_4 in_5 iowa_6 ?_7
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	5.998943693368863E8	info:[8, 4, 17, 133, 27, 1]point_4 in_5 iowa_6 ?_7
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[16,134]3	134764.9921071322	info:[8, 3, 16, 134, 27, 1]in_5 iowa_6 ?_7
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[7, 1, 15, 123, 27, 1]iowa_6
					[
						child-0:*n:StateName -> ({ ' iowa ' })	#children:1[14,17]1	1.0	info:[7, 1, 14, 17, 26, 1]iowa_6
					]
				]
			]
		]
	]
]

output:	answer(highest(place(loc_2(stateid('iowa')))))
predic:	answer(highest(place(loc_2(stateid('iowa')))))
126:	true
=INPUT=
what is the largest river in washington state ?
=OUTPUT=
ROOT	#children:8[20,1000]8	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:7[19,128]7	0.0	null
	[
		child-0:*n:River -> ({ longest ( *n:River ) })	#children:6[18,142]6	0.0	null
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:5[17,129]5	0.0	null
			[
				child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:4[16,130]4	0.0	null
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:3[15,126]3	0.0	null
					[
						child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[14,123]2	0.0	null
						[
							child-0:*n:StateName -> ({ ' washington ' })	#children:1[13,9]1	0.0	null
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:8[20,1000]8	304712.06373463804	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:7[19,128]7	132419.20120960494	info:[9, 9, 19, 128, 27, 1]what_0 is_1 the_2 largest_3 river_4 in_5 washington_6 state_7 ?_8
	[
		child-0:*n:River -> ({ longest ( *n:River ) })	#children:6[18,142]6	848.6420034206062	info:[9, 8, 18, 142, 27, 1]is_1 the_2 largest_3 river_4 in_5 washington_6 state_7 ?_8
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:5[17,129]5	19.13775672506062	info:[9, 5, 17, 129, 27, 1]river_4 in_5 washington_6 state_7 ?_8
			[
				child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:4[16,130]4	1.2324594118346526	info:[9, 4, 16, 130, 27, 1]in_5 washington_6 state_7 ?_8
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:3[15,126]3	63212.97997665975	info:[8, 2, 15, 126, 27, 1]washington_6 state_7
					[
						child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[14,123]2	3.273583459538019E9	info:[7, 1, 14, 123, 27, 1]washington_6
						[
							child-0:*n:StateName -> ({ ' washington ' })	#children:1[13,9]1	1.0	info:[7, 1, 13, 9, 26, 1]washington_6
						]
					]
				]
			]
		]
	]
]

output:	answer(longest(river(loc_2(state(stateid('washington'))))))
predic:	answer(longest(river(loc_2(state(stateid('washington'))))))
142:	true
=INPUT=
what is the lowest point in mississippi ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	0.0	null
	[
		child-0:*n:Place -> ({ lowest ( *n:Place ) })	#children:5[18,186]5	0.0	null
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	0.0	null
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[16,134]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' mississippi ' })	#children:1[14,83]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	5.0441502133401264E16	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	6.9827134563192152E16	info:[8, 8, 19, 124, 27, 1]what_0 is_1 the_2 lowest_3 point_4 in_5 mississippi_6 ?_7
	[
		child-0:*n:Place -> ({ lowest ( *n:Place ) })	#children:5[18,186]5	3.8206063108815608E16	info:[8, 7, 18, 186, 27, 1]is_1 the_2 lowest_3 point_4 in_5 mississippi_6 ?_7
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	3.458546692557953E10	info:[8, 4, 17, 133, 27, 1]point_4 in_5 mississippi_6 ?_7
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[16,134]3	8811930.18432542	info:[8, 3, 16, 134, 27, 1]in_5 mississippi_6 ?_7
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[7, 1, 15, 123, 27, 1]mississippi_6
					[
						child-0:*n:StateName -> ({ ' mississippi ' })	#children:1[14,83]1	1.0	info:[7, 1, 14, 83, 26, 1]mississippi_6
					]
				]
			]
		]
	]
]

output:	answer(lowest(place(loc_2(stateid('mississippi')))))
predic:	answer(lowest(place(loc_2(stateid('mississippi')))))
158:	true
=INPUT=
what is the population of houston ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:3[18,159]3	0.0	null
		[
			child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[17,147]2	0.0	null
			[
				child-0:*n:CityName -> ({ ' houston ' })	#children:1[16,108]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	2702.813371847292	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	15013.662207576059	info:[7, 7, 19, 144, 27, 1]what_0 is_1 the_2 population_3 of_4 houston_5 ?_6
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:3[18,159]3	333324.5005400947	info:[7, 5, 18, 159, 27, 1]the_2 population_3 of_4 houston_5 ?_6
		[
			child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[17,147]2	72102.42018085228	info:[6, 1, 17, 147, 27, 1]houston_5
			[
				child-0:*n:CityName -> ({ ' houston ' })	#children:1[16,108]1	1.0	info:[6, 1, 16, 108, 26, 1]houston_5
			]
		]
	]
]

output:	answer(population_1(cityid('houston',_)))
predic:	answer(population_1(cityid('houston',_)))
174:	true
=INPUT=
what is the smallest state that borders the most states ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	0.0	null
	[
		child-0:*n:State -> ({ smallest ( *n:State ) })	#children:5[18,165]5	0.0	null
		[
			child-0:*n:State -> ({ most ( *n:State ) })	#children:4[17,179]4	0.0	null
			[
				child-0:*n:State -> ({ state ( *n:State ) })	#children:3[16,126]3	0.0	null
				[
					child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:2[15,127]2	0.0	null
					[
						child-0:*n:State -> ({ state ( all ) })	#children:1[14,141]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	8.878764620182618E8	info:[12, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	3.9667636002191925E8	info:[11, 11, 19, 135, 27, 1]what_0 is_1 the_2 smallest_3 state_4 that_5 borders_6 the_7 most_8 states_9 ?_10
	[
		child-0:*n:State -> ({ smallest ( *n:State ) })	#children:5[18,165]5	5.937902012584317E7	info:[11, 10, 18, 165, 27, 1]is_1 the_2 smallest_3 state_4 that_5 borders_6 the_7 most_8 states_9 ?_10
		[
			child-0:*n:State -> ({ most ( *n:State ) })	#children:4[17,179]4	2.7362491125249736E7	info:[10, 6, 17, 179, 27, 1]state_4 that_5 borders_6 the_7 most_8 states_9
			[
				child-0:*n:State -> ({ state ( *n:State ) })	#children:3[16,126]3	104242.87154801587	info:[8, 4, 16, 126, 27, 1]state_4 that_5 borders_6 the_7
				[
					child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:2[15,127]2	30.210379202867184	info:[8, 2, 15, 127, 27, 1]borders_6 the_7
					[
						child-0:*n:State -> ({ state ( all ) })	#children:1[14,141]1	0.0016054145812558192	info:[8, 1, 14, 141, 26, 1]the_7
					]
				]
			]
		]
	]
]

output:	answer(smallest(most(state(next_to_2(state(all))))))
predic:	answer(smallest(most(state(next_to_2(state(all))))))
190:	false
=INPUT=
what state borders new york ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	0.0	null
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[17,127]3	0.0	null
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	0.0	null
				[
					child-0:*n:StateName -> ({ ' new york ' })	#children:1[15,112]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	55550.475965764395	info:[7, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	24818.27320153837	info:[6, 6, 19, 135, 27, 1]what_0 state_1 borders_2 new_3 york_4 ?_5
	[
		child-0:*n:State -> ({ fewest ( *n:State ) })	#children:5[18,206]5	9460315.828346424	info:[5, 5, 18, 206, 27, 1]what_0 state_1 borders_2 new_3 york_4
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	6.727597708656949E7	info:[5, 4, 17, 126, 27, 1]state_1 borders_2 new_3 york_4
			[
				child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[16,127]3	609045.9166372468	info:[5, 3, 16, 127, 27, 1]borders_2 new_3 york_4
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	4.1405535583285764E7	info:[5, 2, 15, 123, 27, 1]new_3 york_4
					[
						child-0:*n:StateName -> ({ ' new york ' })	#children:1[14,112]1	0.012648382451544106	info:[5, 2, 14, 112, 26, 1]new_3 york_4
					]
				]
			]
		]
	]
]

output:	answer(state(next_to_2(stateid('newyork'))))
predic:	answer(fewest(state(next_to_2(stateid('newyork')))))
206:	true
=INPUT=
what states border michigan ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	0.0	null
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[17,127]3	0.0	null
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	0.0	null
				[
					child-0:*n:StateName -> ({ ' michigan ' })	#children:1[15,62]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	1.6143213849710264E12	info:[6, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	7.212299889561428E11	info:[5, 5, 19, 135, 27, 1]what_0 states_1 border_2 michigan_3 ?_4
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	3.502594068616077E12	info:[4, 4, 18, 126, 27, 1]what_0 states_1 border_2 michigan_3
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[17,127]3	2.5420774217669266E11	info:[4, 2, 17, 127, 27, 1]border_2 michigan_3
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	3.273583459538019E9	info:[4, 1, 16, 123, 27, 1]michigan_3
				[
					child-0:*n:StateName -> ({ ' michigan ' })	#children:1[15,62]1	1.0	info:[4, 1, 15, 62, 26, 1]michigan_3
				]
			]
		]
	]
]

output:	answer(state(next_to_2(stateid('michigan'))))
predic:	answer(state(next_to_2(stateid('michigan'))))
222:	true
=INPUT=
what states have cities named dallas ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:5[18,126]5	0.0	null
		[
			child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:4[17,172]4	0.0	null
			[
				child-0:*n:City -> ({ city ( *n:City ) })	#children:3[16,121]3	0.0	null
				[
					child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[15,147]2	0.0	null
					[
						child-0:*n:CityName -> ({ ' dallas ' })	#children:1[14,36]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	7.424802890881309E11	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	3.317177457255808E11	info:[7, 7, 19, 135, 27, 1]what_0 states_1 have_2 cities_3 named_4 dallas_5 ?_6
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:5[18,126]5	2639980.391197805	info:[7, 6, 18, 126, 27, 1]states_1 have_2 cities_3 named_4 dallas_5 ?_6
		[
			child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:4[17,172]4	1441.4288172589959	info:[7, 5, 17, 172, 27, 1]have_2 cities_3 named_4 dallas_5 ?_6
			[
				child-0:*n:City -> ({ city ( *n:City ) })	#children:3[16,121]3	532387.9192301838	info:[6, 3, 16, 121, 27, 1]cities_3 named_4 dallas_5
				[
					child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[15,147]2	72102.42018085228	info:[6, 1, 15, 147, 27, 1]dallas_5
					[
						child-0:*n:CityName -> ({ ' dallas ' })	#children:1[14,36]1	1.0	info:[6, 1, 14, 36, 26, 1]dallas_5
					]
				]
			]
		]
	]
]

output:	answer(state(loc_1(city(cityid('dallas',_)))))
predic:	answer(state(loc_1(city(cityid('dallas',_)))))
238:	true
=INPUT=
which is the density of the state that the largest river in the united states runs through ?
=OUTPUT=
ROOT	#children:10[20,1000]10	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:9[19,144]9	0.0	null
	[
		child-0:*n:Num -> ({ density_1 ( *n:State ) })	#children:8[18,196]8	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:7[17,126]7	0.0	null
			[
				child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:6[16,181]6	0.0	null
				[
					child-0:*n:River -> ({ longest ( *n:River ) })	#children:5[15,142]5	0.0	null
					[
						child-0:*n:River -> ({ river ( *n:River ) })	#children:4[14,129]4	0.0	null
						[
							child-0:*n:River -> ({ loc_2 ( *n:Country ) })	#children:3[13,154]3	0.0	null
							[
								child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[12,137]2	0.0	null
								[
									child-0:*n:CountryName -> ({ ' usa ' })	#children:1[11,34]1	0.0	null
								]
							]
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:10[20,1000]10	1.20323864488072525E18	info:[19, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:9[19,144]9	6.6837831858860124E18	info:[18, 18, 19, 144, 27, 1]which_0 is_1 the_2 density_3 of_4 the_5 state_6 that_7 the_8 largest_9 river_10 in_11 the_12 united_13 states_14 runs_15 through_16 ?_17
	[
		child-0:*n:Num -> ({ density_1 ( *n:State ) })	#children:8[18,196]8	2.1416069883051616E17	info:[18, 16, 18, 196, 27, 1]the_2 density_3 of_4 the_5 state_6 that_7 the_8 largest_9 river_10 in_11 the_12 united_13 states_14 runs_15 through_16 ?_17
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:7[17,126]7	9.84664068620859E7	info:[18, 12, 17, 126, 27, 1]state_6 that_7 the_8 largest_9 river_10 in_11 the_12 united_13 states_14 runs_15 through_16 ?_17
			[
				child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:6[16,181]6	592202.0421500908	info:[18, 11, 16, 181, 27, 1]that_7 the_8 largest_9 river_10 in_11 the_12 united_13 states_14 runs_15 through_16 ?_17
				[
					child-0:*n:River -> ({ longest ( *n:River ) })	#children:5[15,142]5	556107.9823119575	info:[15, 7, 15, 142, 27, 1]the_8 largest_9 river_10 in_11 the_12 united_13 states_14
					[
						child-0:*n:River -> ({ river ( *n:River ) })	#children:4[14,129]4	887.7966545715001	info:[15, 5, 14, 129, 27, 1]river_10 in_11 the_12 united_13 states_14
						[
							child-0:*n:River -> ({ loc_2 ( *n:Country ) })	#children:3[13,154]3	13.035222427257573	info:[15, 4, 13, 154, 27, 1]in_11 the_12 united_13 states_14
							[
								child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[12,137]2	70.99392767827953	info:[15, 2, 12, 137, 27, 1]united_13 states_14
								[
									child-0:*n:CountryName -> ({ ' usa ' })	#children:1[11,34]1	8.791961267590606	info:[15, 2, 11, 34, 26, 1]united_13 states_14
								]
							]
						]
					]
				]
			]
		]
	]
]

output:	answer(density_1(state(traverse_1(longest(river(loc_2(countryid('usa'))))))))
predic:	answer(density_1(state(traverse_1(longest(river(loc_2(countryid('usa'))))))))
254:	true
=INPUT=
which state has the greatest population ?
=OUTPUT=
ROOT	#children:4[20,1000]4	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	0.0	null
	[
		child-0:*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })	#children:2[18,169]2	0.0	null
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	0.0	null
		]
	]
]

=PREDICTION=
ROOT	#children:4[20,1000]4	2.679209372474345	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	1.1969897469676065	info:[7, 7, 19, 135, 27, 1]which_0 state_1 has_2 the_3 greatest_4 population_5 ?_6
	[
		child-0:*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })	#children:2[18,169]2	0.0013167272177268075	info:[7, 6, 18, 169, 27, 1]state_1 has_2 the_3 greatest_4 population_5 ?_6
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	3.003886394420056	info:[2, 1, 17, 141, 26, 1]state_1
		]
	]
]

output:	answer(largest_one(population_1(state(all))))
predic:	answer(largest_one(population_1(state(all))))
270:	true
=INPUT=
which states border illinois ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	0.0	null
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[17,127]3	0.0	null
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	0.0	null
				[
					child-0:*n:StateName -> ({ ' illinois ' })	#children:1[15,90]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	1.6328752182258933E12	info:[6, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	7.295192807155665E11	info:[5, 5, 19, 135, 27, 1]which_0 states_1 border_2 illinois_3 ?_4
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	1.937723325139284E13	info:[4, 4, 18, 126, 27, 1]which_0 states_1 border_2 illinois_3
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[17,127]3	1.766405470817928E9	info:[4, 2, 17, 127, 27, 1]border_2 illinois_3
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	3.273583459538019E9	info:[4, 1, 16, 123, 27, 1]illinois_3
				[
					child-0:*n:StateName -> ({ ' illinois ' })	#children:1[15,90]1	1.0	info:[4, 1, 15, 90, 26, 1]illinois_3
				]
			]
		]
	]
]

output:	answer(state(next_to_2(stateid('illinois'))))
predic:	answer(state(next_to_2(stateid('illinois'))))
15:	true
=INPUT=
how long is the ohio river ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:5[19,144]5	0.0	null
	[
		child-0:*n:Num -> ({ len ( *n:River ) })	#children:4[18,151]4	0.0	null
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:3[17,129]3	0.0	null
			[
				child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[16,152]2	0.0	null
				[
					child-0:*n:RiverName -> ({ ' ohio ' })	#children:1[15,42]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	1.8715118218753687E11	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:5[19,144]5	1.0395925447089852E12	info:[7, 7, 19, 144, 27, 1]how_0 long_1 is_2 the_3 ohio_4 river_5 ?_6
	[
		child-0:*n:Num -> ({ len ( *n:River ) })	#children:4[18,151]4	4.7883276348294854E8	info:[7, 6, 18, 151, 27, 1]long_1 is_2 the_3 ohio_4 river_5 ?_6
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:3[17,129]3	6.846772698499111E8	info:[6, 3, 17, 129, 27, 1]the_3 ohio_4 river_5
			[
				child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[16,152]2	1.947182312103149E10	info:[5, 2, 16, 152, 27, 1]the_3 ohio_4
				[
					child-0:*n:RiverName -> ({ ' ohio ' })	#children:1[15,42]1	1.0	info:[5, 1, 15, 42, 26, 1]ohio_4
				]
			]
		]
	]
]

output:	answer(len(river(riverid('ohio'))))
predic:	answer(len(river(riverid('ohio'))))
31:	true
=INPUT=
how many rivers are in iowa ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	0.0	null
	[
		child-0:*n:Num -> ({ count ( *n:River ) })	#children:5[18,161]5	0.0	null
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:4[17,129]4	0.0	null
			[
				child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:3[16,130]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' iowa ' })	#children:1[14,17]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	5.40283055937804E10	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	3.001179209344758E11	info:[7, 7, 19, 144, 27, 1]how_0 many_1 rivers_2 are_3 in_4 iowa_5 ?_6
	[
		child-0:*n:Num -> ({ count ( *n:River ) })	#children:5[18,161]5	5207.693926437764	info:[7, 5, 18, 161, 27, 1]rivers_2 are_3 in_4 iowa_5 ?_6
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:4[17,129]4	176.89895322668823	info:[7, 5, 17, 129, 27, 1]rivers_2 are_3 in_4 iowa_5 ?_6
			[
				child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:3[16,130]3	243.63805544054713	info:[7, 4, 16, 130, 27, 1]are_3 in_4 iowa_5 ?_6
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[6, 1, 15, 123, 27, 1]iowa_5
					[
						child-0:*n:StateName -> ({ ' iowa ' })	#children:1[14,17]1	1.0	info:[6, 1, 14, 17, 26, 1]iowa_5
					]
				]
			]
		]
	]
]

output:	answer(count(river(loc_2(stateid('iowa')))))
predic:	answer(count(river(loc_2(stateid('iowa')))))
47:	true
=INPUT=
name the major rivers in florida .
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:6[19,128]6	0.0	null
	[
		child-0:*n:River -> ({ major ( *n:River ) })	#children:5[18,162]5	0.0	null
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:4[17,129]4	0.0	null
			[
				child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:3[16,130]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' florida ' })	#children:1[14,13]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	5.547872208147332E9	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:6[19,128]6	2.4109475588587523E9	info:[7, 7, 19, 128, 27, 1]name_0 the_1 major_2 rivers_3 in_4 florida_5 ._6
	[
		child-0:*n:River -> ({ major ( *n:River ) })	#children:5[18,162]5	4.1238490098705E7	info:[7, 5, 18, 162, 27, 1]major_2 rivers_3 in_4 florida_5 ._6
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:4[17,129]4	110563.04998317592	info:[7, 4, 17, 129, 27, 1]rivers_3 in_4 florida_5 ._6
			[
				child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:3[16,130]3	286984.53600977315	info:[7, 3, 16, 130, 27, 1]in_4 florida_5 ._6
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[6, 1, 15, 123, 27, 1]florida_5
					[
						child-0:*n:StateName -> ({ ' florida ' })	#children:1[14,13]1	1.0	info:[6, 1, 14, 13, 26, 1]florida_5
					]
				]
			]
		]
	]
]

output:	answer(major(river(loc_2(stateid('florida')))))
predic:	answer(major(river(loc_2(stateid('florida')))))
63:	true
=INPUT=
what are the major cities in states through which the mississippi runs ?
=OUTPUT=
ROOT	#children:9[20,1000]9	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:8[19,120]8	0.0	null
	[
		child-0:*n:City -> ({ major ( *n:City ) })	#children:7[18,156]7	0.0	null
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:6[17,121]6	0.0	null
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:5[16,122]5	0.0	null
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:4[15,126]4	0.0	null
					[
						child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:3[14,181]3	0.0	null
						[
							child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[13,152]2	0.0	null
							[
								child-0:*n:RiverName -> ({ ' mississippi ' })	#children:1[12,84]1	0.0	null
							]
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:9[20,1000]9	5.748715406404275E25	info:[14, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:8[19,120]8	4.883786808549849E25	info:[13, 13, 19, 120, 27, 1]what_0 are_1 the_2 major_3 cities_4 in_5 states_6 through_7 which_8 the_9 mississippi_10 runs_11 ?_12
	[
		child-0:*n:City -> ({ major ( *n:City ) })	#children:7[18,156]7	5.280552293455685E22	info:[13, 10, 18, 156, 27, 1]major_3 cities_4 in_5 states_6 through_7 which_8 the_9 mississippi_10 runs_11 ?_12
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:6[17,121]6	3.126388763590069E19	info:[13, 9, 17, 121, 27, 1]cities_4 in_5 states_6 through_7 which_8 the_9 mississippi_10 runs_11 ?_12
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:5[16,122]5	6.8348265166780083E17	info:[13, 8, 16, 122, 27, 1]in_5 states_6 through_7 which_8 the_9 mississippi_10 runs_11 ?_12
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:4[15,126]4	9.556876193461535E19	info:[12, 6, 15, 126, 27, 1]states_6 through_7 which_8 the_9 mississippi_10 runs_11
					[
						child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:3[14,181]3	4.7189205560131078E17	info:[12, 5, 14, 181, 27, 1]through_7 which_8 the_9 mississippi_10 runs_11
						[
							child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[13,152]2	1.1954283726525978E11	info:[11, 2, 13, 152, 27, 1]the_9 mississippi_10
							[
								child-0:*n:RiverName -> ({ ' mississippi ' })	#children:1[12,84]1	1.0	info:[11, 1, 12, 84, 26, 1]mississippi_10
							]
						]
					]
				]
			]
		]
	]
]

output:	answer(major(city(loc_2(state(traverse_1(riverid('mississippi')))))))
predic:	answer(major(city(loc_2(state(traverse_1(riverid('mississippi')))))))
79:	true
=INPUT=
what is the area of ohio ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ area_1 ( *n:State ) })	#children:3[18,191]3	0.0	null
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	0.0	null
			[
				child-0:*n:StateName -> ({ ' ohio ' })	#children:1[16,43]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	8.92063831809334E9	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	4.955260758247414E10	info:[7, 7, 19, 144, 27, 1]what_0 is_1 the_2 area_3 of_4 ohio_5 ?_6
	[
		child-0:*n:Num -> ({ area_1 ( *n:State ) })	#children:3[18,191]3	8.10277000297881E11	info:[7, 5, 18, 191, 27, 1]the_2 area_3 of_4 ohio_5 ?_6
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	3.273583459538019E9	info:[6, 1, 17, 123, 27, 1]ohio_5
			[
				child-0:*n:StateName -> ({ ' ohio ' })	#children:1[16,43]1	1.0	info:[6, 1, 16, 43, 26, 1]ohio_5
			]
		]
	]
]

output:	answer(area_1(stateid('ohio')))
predic:	answer(area_1(stateid('ohio')))
95:	true
=INPUT=
what is the capital of states that have cities named durham ?
=OUTPUT=
ROOT	#children:9[20,1000]9	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:8[19,120]8	0.0	null
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:7[18,131]7	0.0	null
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:6[17,122]6	0.0	null
			[
				child-0:*n:State -> ({ state ( *n:State ) })	#children:5[16,126]5	0.0	null
				[
					child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:4[15,172]4	0.0	null
					[
						child-0:*n:City -> ({ city ( *n:City ) })	#children:3[14,121]3	0.0	null
						[
							child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[13,147]2	0.0	null
							[
								child-0:*n:CityName -> ({ ' durham ' })	#children:1[12,1]1	0.0	null
							]
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:9[20,1000]9	3.8195077736108E16	info:[13, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:8[19,120]8	3.2448399966248432E16	info:[12, 12, 19, 120, 27, 1]what_0 is_1 the_2 capital_3 of_4 states_5 that_6 have_7 cities_8 named_9 durham_10 ?_11
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:7[18,131]7	4.281124075118085E13	info:[12, 9, 18, 131, 27, 1]capital_3 of_4 states_5 that_6 have_7 cities_8 named_9 durham_10 ?_11
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:6[17,122]6	3.4838360919732623E9	info:[12, 8, 17, 122, 27, 1]of_4 states_5 that_6 have_7 cities_8 named_9 durham_10 ?_11
			[
				child-0:*n:State -> ({ state ( *n:State ) })	#children:5[16,126]5	3.578127474559313E11	info:[12, 8, 16, 126, 27, 1]of_4 states_5 that_6 have_7 cities_8 named_9 durham_10 ?_11
				[
					child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:4[15,172]4	34.759595941990135	info:[12, 5, 15, 172, 27, 1]have_7 cities_8 named_9 durham_10 ?_11
					[
						child-0:*n:City -> ({ city ( *n:City ) })	#children:3[14,121]3	698487.8647644342	info:[11, 3, 14, 121, 27, 1]cities_8 named_9 durham_10
						[
							child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[13,147]2	72102.42018085228	info:[11, 1, 13, 147, 27, 1]durham_10
							[
								child-0:*n:CityName -> ({ ' durham ' })	#children:1[12,1]1	1.0	info:[11, 1, 12, 1, 26, 1]durham_10
							]
						]
					]
				]
			]
		]
	]
]

output:	answer(capital(loc_2(state(loc_1(city(cityid('durham',_)))))))
predic:	answer(capital(loc_2(state(loc_1(city(cityid('durham',_)))))))
111:	true
=INPUT=
what is the highest point in maine ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	0.0	null
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	0.0	null
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	0.0	null
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[16,134]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' maine ' })	#children:1[14,105]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	8.121084192360403E15	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	1.1242171916277248E16	info:[8, 8, 19, 124, 27, 1]what_0 is_1 the_2 highest_3 point_4 in_5 maine_6 ?_7
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	1.6074518509129668E15	info:[8, 7, 18, 132, 27, 1]is_1 the_2 highest_3 point_4 in_5 maine_6 ?_7
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	4.871529213234905E9	info:[8, 4, 17, 133, 27, 1]point_4 in_5 maine_6 ?_7
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[16,134]3	1094378.659858007	info:[8, 3, 16, 134, 27, 1]in_5 maine_6 ?_7
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[7, 1, 15, 123, 27, 1]maine_6
					[
						child-0:*n:StateName -> ({ ' maine ' })	#children:1[14,105]1	1.0	info:[7, 1, 14, 105, 26, 1]maine_6
					]
				]
			]
		]
	]
]

output:	answer(highest(place(loc_2(stateid('maine')))))
predic:	answer(highest(place(loc_2(stateid('maine')))))
127:	true
=INPUT=
what is the largest state bordering arkansas ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	0.0	null
	[
		child-0:*n:State -> ({ largest ( *n:State ) })	#children:5[18,140]5	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	0.0	null
			[
				child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[16,127]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' arkansas ' })	#children:1[14,16]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	5.124812390476935E11	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	2.289611237388348E11	info:[8, 8, 19, 135, 27, 1]what_0 is_1 the_2 largest_3 state_4 bordering_5 arkansas_6 ?_7
	[
		child-0:*n:State -> ({ largest ( *n:State ) })	#children:5[18,140]5	5.256921243315009E13	info:[7, 7, 18, 140, 27, 1]what_0 is_1 the_2 largest_3 state_4 bordering_5 arkansas_6
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	4.1894910799127274E9	info:[7, 3, 17, 126, 27, 1]state_4 bordering_5 arkansas_6
			[
				child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[16,127]3	3.3614873499015234E7	info:[7, 2, 16, 127, 27, 1]bordering_5 arkansas_6
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[7, 1, 15, 123, 27, 1]arkansas_6
					[
						child-0:*n:StateName -> ({ ' arkansas ' })	#children:1[14,16]1	1.0	info:[7, 1, 14, 16, 26, 1]arkansas_6
					]
				]
			]
		]
	]
]

output:	answer(largest(state(next_to_2(stateid('arkansas')))))
predic:	answer(largest(state(next_to_2(stateid('arkansas')))))
143:	true
=INPUT=
what is the lowest point in nebraska in meters ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	0.0	null
	[
		child-0:*n:Place -> ({ lowest ( *n:Place ) })	#children:5[18,186]5	0.0	null
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	0.0	null
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[16,134]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' nebraska ' })	#children:1[14,29]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	3.05440712013413E10	info:[11, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	4.22827409906075E10	info:[10, 10, 19, 124, 27, 1]what_0 is_1 the_2 lowest_3 point_4 in_5 nebraska_6 in_7 meters_8 ?_9
	[
		child-0:*n:Place -> ({ lowest ( *n:Place ) })	#children:5[18,186]5	2.313509040298492E10	info:[10, 9, 18, 186, 27, 1]is_1 the_2 lowest_3 point_4 in_5 nebraska_6 in_7 meters_8 ?_9
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	1.6510595505047905E12	info:[8, 4, 17, 133, 27, 1]point_4 in_5 nebraska_6 in_7
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[16,134]3	4.206686444487878E8	info:[8, 3, 16, 134, 27, 1]in_5 nebraska_6 in_7
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[7, 1, 15, 123, 27, 1]nebraska_6
					[
						child-0:*n:StateName -> ({ ' nebraska ' })	#children:1[14,29]1	1.0	info:[7, 1, 14, 29, 26, 1]nebraska_6
					]
				]
			]
		]
	]
]

output:	answer(lowest(place(loc_2(stateid('nebraska')))))
predic:	answer(lowest(place(loc_2(stateid('nebraska')))))
159:	true
=INPUT=
what is the population of maryland ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:3[18,158]3	0.0	null
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	0.0	null
			[
				child-0:*n:StateName -> ({ ' maryland ' })	#children:1[16,75]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	2.451340264254668E9	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	1.3616772458912174E10	info:[7, 7, 19, 144, 27, 1]what_0 is_1 the_2 population_3 of_4 maryland_5 ?_6
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:3[18,158]3	5.45193986595802E16	info:[6, 6, 18, 158, 27, 1]what_0 is_1 the_2 population_3 of_4 maryland_5
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	3.273583459538019E9	info:[6, 1, 17, 123, 27, 1]maryland_5
			[
				child-0:*n:StateName -> ({ ' maryland ' })	#children:1[16,75]1	1.0	info:[6, 1, 16, 75, 26, 1]maryland_5
			]
		]
	]
]

output:	answer(population_1(stateid('maryland')))
predic:	answer(population_1(stateid('maryland')))
175:	true
=INPUT=
what is the smallest state that the mississippi river runs through ?
=OUTPUT=
ROOT	#children:8[20,1000]8	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:7[19,135]7	0.0	null
	[
		child-0:*n:State -> ({ smallest ( *n:State ) })	#children:6[18,165]6	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:5[17,126]5	0.0	null
			[
				child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:4[16,181]4	0.0	null
				[
					child-0:*n:River -> ({ river ( *n:River ) })	#children:3[15,129]3	0.0	null
					[
						child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[14,152]2	0.0	null
						[
							child-0:*n:RiverName -> ({ ' mississippi ' })	#children:1[13,84]1	0.0	null
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:8[20,1000]8	2.3240311393370721E18	info:[13, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:7[19,135]7	1.0383068505208992E18	info:[12, 12, 19, 135, 27, 1]what_0 is_1 the_2 smallest_3 state_4 that_5 the_6 mississippi_7 river_8 runs_9 through_10 ?_11
	[
		child-0:*n:State -> ({ smallest ( *n:State ) })	#children:6[18,165]6	1.55425554904443872E17	info:[12, 11, 18, 165, 27, 1]is_1 the_2 smallest_3 state_4 that_5 the_6 mississippi_7 river_8 runs_9 through_10 ?_11
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:5[17,126]5	2.6474334111024272E17	info:[11, 7, 17, 126, 27, 1]state_4 that_5 the_6 mississippi_7 river_8 runs_9 through_10
			[
				child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:4[16,181]4	1.1248688394320844E16	info:[11, 6, 16, 181, 27, 1]that_5 the_6 mississippi_7 river_8 runs_9 through_10
				[
					child-0:*n:River -> ({ river ( *n:River ) })	#children:3[15,129]3	3.305798359576154E12	info:[9, 3, 15, 129, 27, 1]the_6 mississippi_7 river_8
					[
						child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[14,152]2	2.9035331230850773E10	info:[8, 2, 14, 152, 27, 1]the_6 mississippi_7
						[
							child-0:*n:RiverName -> ({ ' mississippi ' })	#children:1[13,84]1	1.0	info:[8, 1, 13, 84, 26, 1]mississippi_7
						]
					]
				]
			]
		]
	]
]

output:	answer(smallest(state(traverse_1(river(riverid('mississippi'))))))
predic:	answer(smallest(state(traverse_1(river(riverid('mississippi'))))))
191:	true
=INPUT=
what state borders the most states ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ most ( *n:State ) })	#children:4[18,179]4	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:3[17,126]3	0.0	null
			[
				child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:2[16,127]2	0.0	null
				[
					child-0:*n:State -> ({ state ( all ) })	#children:1[15,141]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	4995.62853895534	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	2231.895798149521	info:[7, 7, 19, 135, 27, 1]what_0 state_1 borders_2 the_3 most_4 states_5 ?_6
	[
		child-0:*n:State -> ({ most ( *n:State ) })	#children:4[18,179]4	80264.92110284483	info:[6, 6, 18, 179, 27, 1]what_0 state_1 borders_2 the_3 most_4 states_5
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:3[17,126]3	98.81920371442916	info:[4, 3, 17, 126, 27, 1]state_1 borders_2 the_3
			[
				child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:2[16,127]2	0.8946051044367839	info:[4, 2, 16, 127, 27, 1]borders_2 the_3
				[
					child-0:*n:State -> ({ state ( all ) })	#children:1[15,141]1	0.0016054145812558192	info:[4, 1, 15, 141, 26, 1]the_3
				]
			]
		]
	]
]

output:	answer(most(state(next_to_2(state(all)))))
predic:	answer(most(state(next_to_2(state(all)))))
207:	true
=INPUT=
what states border montana ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	0.0	null
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[17,127]3	0.0	null
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	0.0	null
				[
					child-0:*n:StateName -> ({ ' montana ' })	#children:1[15,49]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	4.027383852758352E8	info:[6, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	1.799313345340579E8	info:[5, 5, 19, 135, 27, 1]what_0 states_1 border_2 montana_3 ?_4
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	5.819533930217988E9	info:[4, 4, 18, 126, 27, 1]what_0 states_1 border_2 montana_3
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[17,127]3	4.2236426829383874E8	info:[4, 2, 17, 127, 27, 1]border_2 montana_3
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	3.273583459538019E9	info:[4, 1, 16, 123, 27, 1]montana_3
				[
					child-0:*n:StateName -> ({ ' montana ' })	#children:1[15,49]1	1.0	info:[4, 1, 15, 49, 26, 1]montana_3
				]
			]
		]
	]
]

output:	answer(state(next_to_2(stateid('montana'))))
predic:	answer(state(next_to_2(stateid('montana'))))
223:	true
=INPUT=
what states have cities named plano ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:5[18,126]5	0.0	null
		[
			child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:4[17,172]4	0.0	null
			[
				child-0:*n:City -> ({ city ( *n:City ) })	#children:3[16,121]3	0.0	null
				[
					child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[15,147]2	0.0	null
					[
						child-0:*n:CityName -> ({ ' plano ' })	#children:1[14,38]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	9.760045050602968E11	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	4.3604930527412756E11	info:[7, 7, 19, 135, 27, 1]what_0 states_1 have_2 cities_3 named_4 plano_5 ?_6
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:5[18,126]5	3470304.5898287287	info:[7, 6, 18, 126, 27, 1]states_1 have_2 cities_3 named_4 plano_5 ?_6
		[
			child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:4[17,172]4	1894.7856798950336	info:[7, 5, 17, 172, 27, 1]have_2 cities_3 named_4 plano_5 ?_6
			[
				child-0:*n:City -> ({ city ( *n:City ) })	#children:3[16,121]3	763731.3212496885	info:[6, 3, 16, 121, 27, 1]cities_3 named_4 plano_5
				[
					child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[15,147]2	72102.42018085228	info:[6, 1, 15, 147, 27, 1]plano_5
					[
						child-0:*n:CityName -> ({ ' plano ' })	#children:1[14,38]1	1.0	info:[6, 1, 14, 38, 26, 1]plano_5
					]
				]
			]
		]
	]
]

output:	answer(state(loc_1(city(cityid('plano',_)))))
predic:	answer(state(loc_1(city(cityid('plano',_)))))
239:	false
=INPUT=
which is the highest peak not in alaska ?
=OUTPUT=
ROOT	#children:8[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:7[19,124]6	0.0	null
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:6[18,132]5	0.0	null
		[
			child-0:*n:Place -> ({ exclude ( *n:Place , *n:Place ) })	#children:5[17,0]4	0.0	null
			[
				child-0:*n:Place -> ({ mountain ( all ) })	#children:1[16,0]1	0.0	null
			]
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[16,134]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' alaska ' })	#children:1[14,80]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	1.8811648995198488E21	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	2.604132490482376E21	info:[9, 9, 19, 124, 27, 1]which_0 is_1 the_2 highest_3 peak_4 not_5 in_6 alaska_7 ?_8
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	7.413978011059565E19	info:[9, 8, 18, 132, 27, 1]is_1 the_2 highest_3 peak_4 not_5 in_6 alaska_7 ?_8
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	6.410756946327044E12	info:[9, 5, 17, 133, 27, 1]peak_4 not_5 in_6 alaska_7 ?_8
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[16,134]3	2.4747077908901766E8	info:[9, 3, 16, 134, 27, 1]in_6 alaska_7 ?_8
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[8, 1, 15, 123, 27, 1]alaska_7
					[
						child-0:*n:StateName -> ({ ' alaska ' })	#children:1[14,80]1	1.0	info:[8, 1, 14, 80, 26, 1]alaska_7
					]
				]
			]
		]
	]
]

output:	answer(highest(exclude(mountain(all),loc_2(stateid('alaska')))))
predic:	answer(highest(place(loc_2(stateid('alaska')))))
255:	true
=INPUT=
which state has the highest elevation ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	0.0	null
		[
			child-0:*n:State -> ({ loc_1 ( *n:Place ) })	#children:3[17,167]3	0.0	null
			[
				child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:2[16,132]2	0.0	null
				[
					child-0:*n:Place -> ({ place ( all ) })	#children:1[15,168]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	746525.1908870273	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	333524.885559635	info:[7, 7, 19, 135, 27, 1]which_0 state_1 has_2 the_3 highest_4 elevation_5 ?_6
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	22.29788939782668	info:[7, 6, 18, 126, 27, 1]state_1 has_2 the_3 highest_4 elevation_5 ?_6
		[
			child-0:*n:State -> ({ loc_1 ( *n:Place ) })	#children:3[17,167]3	0.014162301709898462	info:[7, 5, 17, 167, 27, 1]has_2 the_3 highest_4 elevation_5 ?_6
			[
				child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:2[16,132]2	5491.76986966049	info:[6, 4, 16, 132, 27, 1]has_2 the_3 highest_4 elevation_5
				[
					child-0:*n:Place -> ({ place ( all ) })	#children:1[15,168]1	0.0010995909289881478	info:[6, 1, 15, 168, 26, 1]elevation_5
				]
			]
		]
	]
]

output:	answer(state(loc_1(highest(place(all)))))
predic:	answer(state(loc_1(highest(place(all)))))
271:	true
=INPUT=
which states border kentucky ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	0.0	null
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[17,127]3	0.0	null
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	0.0	null
				[
					child-0:*n:StateName -> ({ ' kentucky ' })	#children:1[15,97]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	5.915732885126376E14	info:[6, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	2.6429706024638634E14	info:[5, 5, 19, 135, 27, 1]which_0 states_1 border_2 kentucky_3 ?_4
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	1.6532448046548282E15	info:[4, 4, 18, 126, 27, 1]which_0 states_1 border_2 kentucky_3
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[17,127]3	1.5070782446888766E11	info:[4, 2, 17, 127, 27, 1]border_2 kentucky_3
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	3.273583459538019E9	info:[4, 1, 16, 123, 27, 1]kentucky_3
				[
					child-0:*n:StateName -> ({ ' kentucky ' })	#children:1[15,97]1	1.0	info:[4, 1, 15, 97, 26, 1]kentucky_3
				]
			]
		]
	]
]

output:	answer(state(next_to_2(stateid('kentucky'))))
predic:	answer(state(next_to_2(stateid('kentucky'))))
16:	false
=INPUT=
how many capitals does rhode island have ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	0.0	null
	[
		child-0:*n:Num -> ({ count ( *n:City ) })	#children:5[18,155]5	0.0	null
		[
			child-0:*n:City -> ({ capital ( *n:City ) })	#children:4[17,131]4	0.0	null
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[16,122]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' rhode island ' })	#children:1[14,25]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	1.9034224673209302E9	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:6[19,144]6	1.0573183579869453E10	info:[8, 8, 19, 144, 27, 1]how_0 many_1 capitals_2 does_3 rhode_4 island_5 have_6 ?_7
	[
		child-0:*n:Num -> ({ size ( *n:City ) })	#children:5[18,146]5	296.50747348233165	info:[8, 6, 18, 146, 27, 1]capitals_2 does_3 rhode_4 island_5 have_6 ?_7
		[
			child-0:*n:City -> ({ capital ( *n:City ) })	#children:4[17,131]4	4067297.0084208217	info:[7, 5, 17, 131, 27, 1]capitals_2 does_3 rhode_4 island_5 have_6
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:3[16,122]3	2912705.9762704163	info:[7, 4, 16, 122, 27, 1]does_3 rhode_4 island_5 have_6
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.251208280676843E9	info:[6, 2, 15, 123, 27, 1]rhode_4 island_5
					[
						child-0:*n:StateName -> ({ ' rhode island ' })	#children:1[14,25]1	0.9931649279336422	info:[6, 2, 14, 25, 26, 1]rhode_4 island_5
					]
				]
			]
		]
	]
]

output:	answer(count(capital(loc_2(stateid('rhodeisland')))))
predic:	answer(size(capital(loc_2(stateid('rhodeisland')))))
32:	false
=INPUT=
how many rivers are in the state that has the most rivers ?
=OUTPUT=
ROOT	#children:9[20,1000]9	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:8[19,144]8	0.0	null
	[
		child-0:*n:Num -> ({ count ( *n:River ) })	#children:7[18,161]7	0.0	null
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:6[17,129]6	0.0	null
			[
				child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:5[16,130]5	0.0	null
				[
					child-0:*n:State -> ({ most ( *n:State ) })	#children:4[15,179]4	0.0	null
					[
						child-0:*n:State -> ({ state ( *n:State ) })	#children:3[14,126]3	0.0	null
						[
							child-0:*n:State -> ({ loc_1 ( *n:River ) })	#children:2[13,182]2	0.0	null
							[
								child-0:*n:River -> ({ river ( all ) })	#children:1[12,171]1	0.0	null
							]
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:9[20,1000]9	152598.91071335413	info:[14, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:8[19,144]8	847660.6348622886	info:[13, 13, 19, 144, 27, 1]how_0 many_1 rivers_2 are_3 in_4 the_5 state_6 that_7 has_8 the_9 most_10 rivers_11 ?_12
	[
		child-0:*n:Num -> ({ count ( *n:River ) })	#children:7[18,161]7	0.014708742237410427	info:[13, 11, 18, 161, 27, 1]rivers_2 are_3 in_4 the_5 state_6 that_7 has_8 the_9 most_10 rivers_11 ?_12
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:6[17,129]6	4.996378707799574E-4	info:[13, 11, 17, 129, 27, 1]rivers_2 are_3 in_4 the_5 state_6 that_7 has_8 the_9 most_10 rivers_11 ?_12
			[
				child-0:*n:River -> ({ loc_2 ( *n:State ) })	#children:5[16,130]5	6.881374764569211E-4	info:[13, 10, 16, 130, 27, 1]are_3 in_4 the_5 state_6 that_7 has_8 the_9 most_10 rivers_11 ?_12
				[
					child-0:*n:State -> ({ most ( *n:State ) })	#children:4[15,179]4	29.177031769805918	info:[12, 7, 15, 179, 27, 1]the_5 state_6 that_7 has_8 the_9 most_10 rivers_11
					[
						child-0:*n:State -> ({ state ( *n:State ) })	#children:3[14,126]3	167.2343726939775	info:[10, 4, 14, 126, 27, 1]state_6 that_7 has_8 the_9
						[
							child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:2[13,172]2	0.020206516498864267	info:[10, 2, 13, 172, 27, 1]has_8 the_9
							[
								child-0:*n:City -> ({ city ( all ) })	#children:1[12,160]1	0.023885228644923158	info:[10, 1, 12, 160, 26, 1]the_9
							]
						]
					]
				]
			]
		]
	]
]

output:	answer(count(river(loc_2(most(state(loc_1(river(all))))))))
predic:	answer(count(river(loc_2(most(state(loc_1(city(all))))))))
48:	true
=INPUT=
number of people in boulder ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:3[18,159]3	0.0	null
		[
			child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[17,147]2	0.0	null
			[
				child-0:*n:CityName -> ({ ' boulder ' })	#children:1[16,37]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	9339500.529899674	info:[7, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	5.187931494047435E7	info:[6, 6, 19, 144, 27, 1]number_0 of_1 people_2 in_3 boulder_4 ?_5
	[
		child-0:*n:Num -> ({ population_1 ( *n:City ) })	#children:3[18,159]3	1435.9974416188834	info:[6, 4, 18, 159, 27, 1]people_2 in_3 boulder_4 ?_5
		[
			child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[17,147]2	72102.42018085228	info:[5, 1, 17, 147, 27, 1]boulder_4
			[
				child-0:*n:CityName -> ({ ' boulder ' })	#children:1[16,37]1	1.0	info:[5, 1, 16, 37, 26, 1]boulder_4
			]
		]
	]
]

output:	answer(population_1(cityid('boulder',_)))
predic:	answer(population_1(cityid('boulder',_)))
64:	true
=INPUT=
what are the major cities in the state of california ?
=OUTPUT=
ROOT	#children:8[20,1000]8	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:7[19,120]7	0.0	null
	[
		child-0:*n:City -> ({ major ( *n:City ) })	#children:6[18,156]6	0.0	null
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:5[17,121]5	0.0	null
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:4[16,122]4	0.0	null
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:3[15,126]3	0.0	null
					[
						child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[14,123]2	0.0	null
						[
							child-0:*n:StateName -> ({ ' california ' })	#children:1[13,19]1	0.0	null
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:8[20,1000]8	9.817601909711456E19	info:[12, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:7[19,120]7	8.340485014239506E19	info:[11, 11, 19, 120, 27, 1]what_0 are_1 the_2 major_3 cities_4 in_5 the_6 state_7 of_8 california_9 ?_10
	[
		child-0:*n:City -> ({ major ( *n:City ) })	#children:6[18,156]6	9.0180773643460416E16	info:[11, 8, 18, 156, 27, 1]major_3 cities_4 in_5 the_6 state_7 of_8 california_9 ?_10
		[
			child-0:*n:City -> ({ city ( *n:City ) })	#children:5[17,121]5	5.339217220899247E13	info:[11, 7, 17, 121, 27, 1]cities_4 in_5 the_6 state_7 of_8 california_9 ?_10
			[
				child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:4[16,122]4	1.167245221218142E12	info:[11, 6, 16, 122, 27, 1]in_5 the_6 state_7 of_8 california_9 ?_10
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:3[15,126]3	3.949778584920311E14	info:[10, 3, 15, 126, 27, 1]state_7 of_8 california_9
					[
						child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[14,123]2	3.273583459538019E9	info:[10, 1, 14, 123, 27, 1]california_9
						[
							child-0:*n:StateName -> ({ ' california ' })	#children:1[13,19]1	1.0	info:[10, 1, 13, 19, 26, 1]california_9
						]
					]
				]
			]
		]
	]
]

output:	answer(major(city(loc_2(state(stateid('california'))))))
predic:	answer(major(city(loc_2(state(stateid('california'))))))
80:	false
=INPUT=
what is the area of the texas state ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:5[19,144]5	0.0	null
	[
		child-0:*n:Num -> ({ area_1 ( *n:State ) })	#children:4[18,191]4	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:3[17,126]3	0.0	null
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	0.0	null
				[
					child-0:*n:StateName -> ({ ' texas ' })	#children:1[15,92]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	1.3048931836235054E9	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	7.248456619297314E9	info:[9, 9, 19, 144, 27, 1]what_0 is_1 the_2 area_3 of_4 the_5 texas_6 state_7 ?_8
	[
		child-0:*n:Num -> ({ area_1 ( *n:State ) })	#children:3[18,191]3	1.1852570374824861E11	info:[9, 7, 18, 191, 27, 1]the_2 area_3 of_4 the_5 texas_6 state_7 ?_8
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	3.273583459538019E9	info:[7, 1, 17, 123, 27, 1]texas_6
			[
				child-0:*n:StateName -> ({ ' texas ' })	#children:1[16,92]1	1.0	info:[7, 1, 16, 92, 26, 1]texas_6
			]
		]
	]
]

output:	answer(area_1(state(stateid('texas'))))
predic:	answer(area_1(stateid('texas')))
96:	true
=INPUT=
what is the capital of the florida state ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	0.0	null
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:5[18,131]5	0.0	null
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:4[17,122]4	0.0	null
			[
				child-0:*n:State -> ({ state ( *n:State ) })	#children:3[16,126]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' florida ' })	#children:1[14,13]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	4.085653103012071E10	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:City ) })	#children:6[19,120]6	3.4709421702407196E10	info:[9, 9, 19, 120, 27, 1]what_0 is_1 the_2 capital_3 of_4 the_5 florida_6 state_7 ?_8
	[
		child-0:*n:City -> ({ capital ( *n:City ) })	#children:5[18,131]5	4.579435073475587E7	info:[9, 6, 18, 131, 27, 1]capital_3 of_4 the_5 florida_6 state_7 ?_8
		[
			child-0:*n:City -> ({ loc_2 ( *n:State ) })	#children:4[17,122]4	3726.5916403935157	info:[9, 5, 17, 122, 27, 1]of_4 the_5 florida_6 state_7 ?_8
			[
				child-0:*n:State -> ({ state ( *n:State ) })	#children:3[16,126]3	84451.3674281189	info:[8, 2, 16, 126, 27, 1]florida_6 state_7
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[7, 1, 15, 123, 27, 1]florida_6
					[
						child-0:*n:StateName -> ({ ' florida ' })	#children:1[14,13]1	1.0	info:[7, 1, 14, 13, 26, 1]florida_6
					]
				]
			]
		]
	]
]

output:	answer(capital(loc_2(state(stateid('florida')))))
predic:	answer(capital(loc_2(state(stateid('florida')))))
112:	true
=INPUT=
what is the highest point in montana ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	0.0	null
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	0.0	null
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	0.0	null
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[16,134]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' montana ' })	#children:1[14,49]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	3.9677096561374956E14	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:6[19,124]6	5.492576238789899E14	info:[8, 8, 19, 124, 27, 1]what_0 is_1 the_2 highest_3 point_4 in_5 montana_6 ?_7
	[
		child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:5[18,132]5	7.853510786950384E13	info:[8, 7, 18, 132, 27, 1]is_1 the_2 highest_3 point_4 in_5 montana_6 ?_7
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:4[17,133]4	2.380077960242164E8	info:[8, 4, 17, 133, 27, 1]point_4 in_5 montana_6 ?_7
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:3[16,134]3	53467.94434509325	info:[8, 3, 16, 134, 27, 1]in_5 montana_6 ?_7
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[7, 1, 15, 123, 27, 1]montana_6
					[
						child-0:*n:StateName -> ({ ' montana ' })	#children:1[14,49]1	1.0	info:[7, 1, 14, 49, 26, 1]montana_6
					]
				]
			]
		]
	]
]

output:	answer(highest(place(loc_2(stateid('montana')))))
predic:	answer(highest(place(loc_2(stateid('montana')))))
128:	true
=INPUT=
what is the largest state that borders texas ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	0.0	null
	[
		child-0:*n:State -> ({ largest ( *n:State ) })	#children:5[18,140]5	0.0	null
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	0.0	null
			[
				child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[16,127]3	0.0	null
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	0.0	null
					[
						child-0:*n:StateName -> ({ ' texas ' })	#children:1[14,92]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	2.2594543956900346E22	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	1.0094559138109131E22	info:[9, 9, 19, 135, 27, 1]what_0 is_1 the_2 largest_3 state_4 that_5 borders_6 texas_7 ?_8
	[
		child-0:*n:State -> ({ largest ( *n:State ) })	#children:5[18,140]5	4.3359391682245105E23	info:[8, 8, 18, 140, 27, 1]what_0 is_1 the_2 largest_3 state_4 that_5 borders_6 texas_7
		[
			child-0:*n:State -> ({ state ( *n:State ) })	#children:4[17,126]4	3.455516570924656E19	info:[8, 4, 17, 126, 27, 1]state_4 that_5 borders_6 texas_7
			[
				child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[16,127]3	1.0945436432686812E15	info:[8, 2, 16, 127, 27, 1]borders_6 texas_7
				[
					child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[15,123]2	3.273583459538019E9	info:[8, 1, 15, 123, 27, 1]texas_7
					[
						child-0:*n:StateName -> ({ ' texas ' })	#children:1[14,92]1	1.0	info:[8, 1, 14, 92, 26, 1]texas_7
					]
				]
			]
		]
	]
]

output:	answer(largest(state(next_to_2(stateid('texas')))))
predic:	answer(largest(state(next_to_2(stateid('texas')))))
144:	true
=INPUT=
what is the lowest point in the state of california ?
=OUTPUT=
ROOT	#children:8[20,1000]8	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:7[19,124]7	0.0	null
	[
		child-0:*n:Place -> ({ lowest ( *n:Place ) })	#children:6[18,186]6	0.0	null
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:5[17,133]5	0.0	null
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:4[16,134]4	0.0	null
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:3[15,126]3	0.0	null
					[
						child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[14,123]2	0.0	null
						[
							child-0:*n:StateName -> ({ ' california ' })	#children:1[13,19]1	0.0	null
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:8[20,1000]8	7.696830194917744E22	info:[12, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Place ) })	#children:7[19,124]7	1.0654869006660205E23	info:[11, 11, 19, 124, 27, 1]what_0 is_1 the_2 lowest_3 point_4 in_5 the_6 state_7 of_8 california_9 ?_10
	[
		child-0:*n:Place -> ({ lowest ( *n:Place ) })	#children:6[18,186]6	5.829833921027126E22	info:[11, 10, 18, 186, 27, 1]is_1 the_2 lowest_3 point_4 in_5 the_6 state_7 of_8 california_9 ?_10
		[
			child-0:*n:Place -> ({ place ( *n:Place ) })	#children:5[17,133]5	5.277369921183604E16	info:[11, 7, 17, 133, 27, 1]point_4 in_5 the_6 state_7 of_8 california_9 ?_10
			[
				child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:4[16,134]4	1.3446056808310617E13	info:[11, 6, 16, 134, 27, 1]in_5 the_6 state_7 of_8 california_9 ?_10
				[
					child-0:*n:State -> ({ state ( *n:State ) })	#children:3[15,126]3	3.949778584920311E14	info:[10, 3, 15, 126, 27, 1]state_7 of_8 california_9
					[
						child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[14,123]2	3.273583459538019E9	info:[10, 1, 14, 123, 27, 1]california_9
						[
							child-0:*n:StateName -> ({ ' california ' })	#children:1[13,19]1	1.0	info:[10, 1, 13, 19, 26, 1]california_9
						]
					]
				]
			]
		]
	]
]

output:	answer(lowest(place(loc_2(state(stateid('california'))))))
predic:	answer(lowest(place(loc_2(state(stateid('california'))))))
160:	true
=INPUT=
what is the population of new mexico ?
=OUTPUT=
ROOT	#children:5[20,1000]5	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	0.0	null
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:3[18,158]3	0.0	null
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	0.0	null
			[
				child-0:*n:StateName -> ({ ' new mexico ' })	#children:1[16,40]1	0.0	null
			]
		]
	]
]

=PREDICTION=
ROOT	#children:5[20,1000]5	6.620673665825089E-17	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:Num ) })	#children:4[19,144]4	3.6776700544941825E-16	info:[8, 8, 19, 144, 27, 1]what_0 is_1 the_2 population_3 of_4 new_5 mexico_6 ?_7
	[
		child-0:*n:Num -> ({ population_1 ( *n:State ) })	#children:3[18,158]3	8.454984077718618E-9	info:[7, 7, 18, 158, 27, 1]what_0 is_1 the_2 population_3 of_4 new_5 mexico_6
		[
			child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[17,123]2	2.352180695033419E-12	info:[7, 2, 17, 123, 27, 1]new_5 mexico_6
			[
				child-0:*n:StateName -> ({ ' new mexico ' })	#children:1[16,40]1	7.185339014895218E-22	info:[7, 2, 16, 40, 26, 1]new_5 mexico_6
			]
		]
	]
]

output:	answer(population_1(stateid('newmexico')))
predic:	answer(population_1(stateid('newmexico')))
176:	true
=INPUT=
what is the state with the largest area ?
=OUTPUT=
ROOT	#children:4[20,1000]4	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	0.0	null
	[
		child-0:*n:State -> ({ largest_one ( area_1 ( *n:State ) ) })	#children:2[18,187]2	0.0	null
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	0.0	null
		]
	]
]

=PREDICTION=
ROOT	#children:4[20,1000]4	4.526157395209791E-5	info:[10, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:3[19,135]3	2.0221502846655972E-5	info:[9, 9, 19, 135, 27, 1]what_0 is_1 the_2 state_3 with_4 the_5 largest_6 area_7 ?_8
	[
		child-0:*n:State -> ({ largest_one ( area_1 ( *n:State ) ) })	#children:2[18,187]2	1.281141655624322E-6	info:[9, 6, 18, 187, 27, 1]state_3 with_4 the_5 largest_6 area_7 ?_8
		[
			child-0:*n:State -> ({ state ( all ) })	#children:1[17,141]1	0.044366595542175494	info:[4, 1, 17, 141, 26, 1]state_3
		]
	]
]

output:	answer(largest_one(area_1(state(all))))
predic:	answer(largest_one(area_1(state(all))))
192:	true
=INPUT=
what state contains the highest point of those the colorado river traverses ?
=OUTPUT=
ROOT	#children:12[20,1000]12	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:11[19,135]11	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:10[18,126]10	0.0	null
		[
			child-0:*n:State -> ({ loc_1 ( *n:Place ) })	#children:9[17,167]9	0.0	null
			[
				child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:8[16,132]8	0.0	null
				[
					child-0:*n:Place -> ({ place ( *n:Place ) })	#children:7[15,133]7	0.0	null
					[
						child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:6[14,134]6	0.0	null
						[
							child-0:*n:State -> ({ state ( *n:State ) })	#children:5[13,126]5	0.0	null
							[
								child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:4[12,181]4	0.0	null
								[
									child-0:*n:River -> ({ river ( *n:River ) })	#children:3[11,129]3	0.0	null
									[
										child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[10,152]2	0.0	null
										[
											child-0:*n:RiverName -> ({ ' colorado ' })	#children:1[9,110]1	0.0	null
										]
									]
								]
							]
						]
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:12[20,1000]12	1.613754101021681E10	info:[14, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:11[19,135]11	7.209765436382957E9	info:[13, 13, 19, 135, 27, 1]what_0 state_1 contains_2 the_3 highest_4 point_5 of_6 those_7 the_8 colorado_9 river_10 traverses_11 ?_12
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:10[18,126]10	9770400.025783435	info:[13, 12, 18, 126, 27, 1]state_1 contains_2 the_3 highest_4 point_5 of_6 those_7 the_8 colorado_9 river_10 traverses_11 ?_12
		[
			child-0:*n:State -> ({ loc_1 ( *n:Place ) })	#children:9[17,167]9	539388.4117655082	info:[13, 11, 17, 167, 27, 1]contains_2 the_3 highest_4 point_5 of_6 those_7 the_8 colorado_9 river_10 traverses_11 ?_12
			[
				child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:8[16,132]8	6.16573716573338E8	info:[13, 10, 16, 132, 27, 1]the_3 highest_4 point_5 of_6 those_7 the_8 colorado_9 river_10 traverses_11 ?_12
				[
					child-0:*n:Place -> ({ place ( *n:Place ) })	#children:7[15,133]7	6614.981839503826	info:[13, 8, 15, 133, 27, 1]point_5 of_6 those_7 the_8 colorado_9 river_10 traverses_11 ?_12
					[
						child-0:*n:Place -> ({ loc_2 ( *n:State ) })	#children:6[14,134]6	0.333476616269242	info:[13, 7, 14, 134, 27, 1]of_6 those_7 the_8 colorado_9 river_10 traverses_11 ?_12
						[
							child-0:*n:State -> ({ state ( *n:State ) })	#children:5[13,126]5	4426.149876788731	info:[12, 6, 13, 126, 27, 1]of_6 those_7 the_8 colorado_9 river_10 traverses_11
							[
								child-0:*n:State -> ({ traverse_1 ( *n:River ) })	#children:4[12,181]4	106515.02988478955	info:[12, 5, 12, 181, 27, 1]those_7 the_8 colorado_9 river_10 traverses_11
								[
									child-0:*n:River -> ({ river ( *n:River ) })	#children:3[11,129]3	1.375674621072492E7	info:[11, 3, 11, 129, 27, 1]the_8 colorado_9 river_10
									[
										child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[10,152]2	3.3750919044629164E7	info:[10, 2, 10, 152, 27, 1]the_8 colorado_9
										[
											child-0:*n:RiverName -> ({ ' colorado ' })	#children:1[9,110]1	1.0	info:[10, 1, 9, 110, 26, 1]colorado_9
										]
									]
								]
							]
						]
					]
				]
			]
		]
	]
]

output:	answer(state(loc_1(highest(place(loc_2(state(traverse_1(river(riverid('colorado'))))))))))
predic:	answer(state(loc_1(highest(place(loc_2(state(traverse_1(river(riverid('colorado'))))))))))
208:	true
=INPUT=
what states border new jersey ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	0.0	null
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[17,127]3	0.0	null
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	0.0	null
				[
					child-0:*n:StateName -> ({ ' new jersey ' })	#children:1[15,23]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	2.3211128083788227E7	info:[7, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	1.0370030284787845E7	info:[6, 6, 19, 135, 27, 1]what_0 states_1 border_2 new_3 jersey_4 ?_5
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	2.1560611933907858E8	info:[5, 5, 18, 126, 27, 1]what_0 states_1 border_2 new_3 jersey_4
		[
			child-0:*n:State -> ({ next_to_2 ( *n:State ) })	#children:3[17,127]3	1.5648043627939276E7	info:[5, 3, 17, 127, 27, 1]border_2 new_3 jersey_4
			[
				child-0:*n:State -> ({ stateid ( *n:StateName ) })	#children:2[16,123]2	3.4859960599627805E9	info:[5, 2, 16, 123, 27, 1]new_3 jersey_4
				[
					child-0:*n:StateName -> ({ ' new jersey ' })	#children:1[15,23]1	1.0648868749033629	info:[5, 2, 15, 23, 26, 1]new_3 jersey_4
				]
			]
		]
	]
]

output:	answer(state(next_to_2(stateid('newjersey'))))
predic:	answer(state(next_to_2(stateid('newjersey'))))
224:	true
=INPUT=
what states have cities named portland ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:5[18,126]5	0.0	null
		[
			child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:4[17,172]4	0.0	null
			[
				child-0:*n:City -> ({ city ( *n:City ) })	#children:3[16,121]3	0.0	null
				[
					child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[15,147]2	0.0	null
					[
						child-0:*n:CityName -> ({ ' portland ' })	#children:1[14,18]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	6.302757942505266E12	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	2.8158816971553037E12	info:[7, 7, 19, 135, 27, 1]what_0 states_1 have_2 cities_3 named_4 portland_5 ?_6
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:5[18,126]5	2.2410234484629013E7	info:[7, 6, 18, 126, 27, 1]states_1 have_2 cities_3 named_4 portland_5 ?_6
		[
			child-0:*n:State -> ({ loc_1 ( *n:City ) })	#children:4[17,172]4	12235.983985100429	info:[7, 5, 17, 172, 27, 1]have_2 cities_3 named_4 portland_5 ?_6
			[
				child-0:*n:City -> ({ city ( *n:City ) })	#children:3[16,121]3	4200510.507213249	info:[6, 3, 16, 121, 27, 1]cities_3 named_4 portland_5
				[
					child-0:*n:City -> ({ cityid ( *n:CityName , _ ) })	#children:2[15,147]2	72102.42018085228	info:[6, 1, 15, 147, 27, 1]portland_5
					[
						child-0:*n:CityName -> ({ ' portland ' })	#children:1[14,18]1	1.0	info:[6, 1, 14, 18, 26, 1]portland_5
					]
				]
			]
		]
	]
]

output:	answer(state(loc_1(city(cityid('portland',_)))))
predic:	answer(state(loc_1(city(cityid('portland',_)))))
240:	true
=INPUT=
which is the longest river in usa ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:6[19,128]6	0.0	null
	[
		child-0:*n:River -> ({ longest ( *n:River ) })	#children:5[18,142]5	0.0	null
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:4[17,129]4	0.0	null
			[
				child-0:*n:River -> ({ loc_2 ( *n:Country ) })	#children:3[16,154]3	0.0	null
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	0.0	null
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	1.6139491762950674E8	info:[9, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:River ) })	#children:6[19,128]6	7.013764341933362E7	info:[8, 8, 19, 128, 27, 1]which_0 is_1 the_2 longest_3 river_4 in_5 usa_6 ?_7
	[
		child-0:*n:River -> ({ longest ( *n:River ) })	#children:5[18,142]5	44030.09605895222	info:[8, 7, 18, 142, 27, 1]is_1 the_2 longest_3 river_4 in_5 usa_6 ?_7
		[
			child-0:*n:River -> ({ river ( *n:River ) })	#children:4[17,129]4	0.10624098609866765	info:[8, 4, 17, 129, 27, 1]river_4 in_5 usa_6 ?_7
			[
				child-0:*n:River -> ({ loc_2 ( *n:Country ) })	#children:3[16,154]3	0.0034803989516918417	info:[8, 3, 16, 154, 27, 1]in_5 usa_6 ?_7
				[
					child-0:*n:Country -> ({ countryid ( *n:CountryName ) })	#children:2[15,137]2	8.074868111621592	info:[7, 1, 15, 137, 27, 1]usa_6
					[
						child-0:*n:CountryName -> ({ ' usa ' })	#children:1[14,34]1	1.0	info:[7, 1, 14, 34, 26, 1]usa_6
					]
				]
			]
		]
	]
]

output:	answer(longest(river(loc_2(countryid('usa')))))
predic:	answer(longest(river(loc_2(countryid('usa')))))
256:	true
=INPUT=
which state has the highest point ?
=OUTPUT=
ROOT	#children:6[20,1000]6	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	0.0	null
		[
			child-0:*n:State -> ({ loc_1 ( *n:Place ) })	#children:3[17,167]3	0.0	null
			[
				child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:2[16,132]2	0.0	null
				[
					child-0:*n:Place -> ({ place ( all ) })	#children:1[15,168]1	0.0	null
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:6[20,1000]6	1693106.8951159122	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:5[19,135]5	756428.9729631098	info:[7, 7, 19, 135, 27, 1]which_0 state_1 has_2 the_3 highest_4 point_5 ?_6
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:4[18,126]4	50.57124762412139	info:[7, 6, 18, 126, 27, 1]state_1 has_2 the_3 highest_4 point_5 ?_6
		[
			child-0:*n:State -> ({ loc_1 ( *n:Place ) })	#children:3[17,167]3	0.03211986811489879	info:[7, 5, 17, 167, 27, 1]has_2 the_3 highest_4 point_5 ?_6
			[
				child-0:*n:Place -> ({ highest ( *n:Place ) })	#children:2[16,132]2	16254.89769153208	info:[6, 4, 16, 132, 27, 1]has_2 the_3 highest_4 point_5
				[
					child-0:*n:Place -> ({ place ( all ) })	#children:1[15,168]1	0.004662022067448813	info:[6, 1, 15, 168, 26, 1]point_5
				]
			]
		]
	]
]

output:	answer(state(loc_1(highest(place(all)))))
predic:	answer(state(loc_1(highest(place(all)))))
272:	true
=INPUT=
which states border the missouri river ?
=OUTPUT=
ROOT	#children:7[20,1000]7	0.0	null
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	0.0	null
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:5[18,126]5	0.0	null
		[
			child-0:*n:State -> ({ next_to_2 ( *n:River ) })	#children:4[17,177]4	0.0	null
			[
				child-0:*n:River -> ({ river ( *n:River ) })	#children:3[16,129]3	0.0	null
				[
					child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[15,152]2	0.0	null
					[
						child-0:*n:RiverName -> ({ ' missouri ' })	#children:1[14,115]1	0.0	null
					]
				]
			]
		]
	]
]

=PREDICTION=
ROOT	#children:7[20,1000]7	888313.367989576	info:[8, 0, 0, 0, 0, 1]
[
	child-0:*n:Query -> ({ answer ( *n:State ) })	#children:6[19,135]6	396871.5564009051	info:[7, 7, 19, 135, 27, 1]which_0 states_1 border_2 the_3 missouri_4 river_5 ?_6
	[
		child-0:*n:State -> ({ state ( *n:State ) })	#children:5[18,126]5	0.39731033711839076	info:[7, 6, 18, 126, 27, 1]states_1 border_2 the_3 missouri_4 river_5 ?_6
		[
			child-0:*n:State -> ({ next_to_2 ( *n:River ) })	#children:4[17,177]4	0.2547251059208601	info:[7, 5, 17, 177, 27, 1]border_2 the_3 missouri_4 river_5 ?_6
			[
				child-0:*n:River -> ({ river ( *n:River ) })	#children:3[16,129]3	6339.237573537661	info:[6, 3, 16, 129, 27, 1]the_3 missouri_4 river_5
				[
					child-0:*n:River -> ({ riverid ( *n:RiverName ) })	#children:2[15,152]2	875361.2117708959	info:[5, 2, 15, 152, 27, 1]the_3 missouri_4
					[
						child-0:*n:RiverName -> ({ ' missouri ' })	#children:1[14,115]1	1.0	info:[5, 1, 14, 115, 26, 1]missouri_4
					]
				]
			]
		]
	]
]

output:	answer(state(next_to_2(river(riverid('missouri')))))
predic:	answer(state(next_to_2(river(riverid('missouri')))))
text accuracy=0.8392857142857143=235.0/280.0
Geoquery execution accuracy = 0.9142857142857143=256/280
