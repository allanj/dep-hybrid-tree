id:0
nl:gebe mir die stadte in virginia
mrl:answer(city(loc_2(stateid('virginia'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' virginia ' })

id:1
nl:welches sind die hoechsten punkte der an mississippi grenzenden staaten
mrl:answer(high_point_1(state(next_to_2(stateid('mississippi')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ high_point_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' mississippi ' })

id:2
nl:nenne die fluesse in arkansas
mrl:answer(river(loc_2(stateid('arkansas'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' arkansas ' })

id:3
nl:nenne alle flÃ¼sse in colorado
mrl:answer(river(loc_2(stateid('colorado'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:4
nl:welches sind grosse staedte in texas
mrl:answer(capital(loc_2(stateid('texas'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:5
nl:koenntest du mir sagen welches der hoechstgelegene punkt im staate oregon ist
mrl:answer(highest(place(loc_2(state(stateid('oregon'))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' oregon ' })

id:6
nl:zahle die staaten welche erhebungen haben die niedriger liegen als jene in alabama
mrl:answer(count(state(low_point_2(lower_2(low_point_1(stateid('alabama')))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ low_point_2 ( *n:Place ) })
*n:Place -> ({ lower_2 ( *n:Place ) })
*n:Place -> ({ low_point_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alabama ' })

id:7
nl:nenne all staaten der usa
mrl:answer(state(loc_2(countryid('usa'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:8
nl:sag mir welche staedte in texas sind
mrl:answer(city(loc_2(stateid('texas'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:9
nl:nenne die staedte der usa
mrl:answer(city(loc_2(countryid('usa'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:10
nl:nenne mir die staedte in virginia
mrl:answer(city(loc_2(stateid('virginia'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' virginia ' })

id:11
nl:nenne mir staedte in texas
mrl:answer(city(loc_2(stateid('texas'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:12
nl:nenne mir die seen in california
mrl:answer(lake(loc_2(stateid('california'))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lake ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:13
nl:welcher stadt ist der groesste
mrl:answer(largest(state(all)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:14
nl:nenne mir den laengsten fluss welcher durch die usa fliesst
mrl:answer(longest(river(traverse_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:15
nl:nenne mir die anzahl der fluesse in california
mrl:answer(count(river(loc_2(stateid('california')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:16
nl:nenne mir die staaten welche an utah grenzen
mrl:answer(state(next_to_2(stateid('utah'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' utah ' })

id:17
nl:wie gross ist alaska
mrl:answer(size(stateid('alaska')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ size ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:18
nl:wie gross ist massachusetts
mrl:answer(size(stateid('massachusetts')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ size ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' massachusetts ' })

id:19
nl:wie gross ist new mexico
mrl:answer(size(stateid('new mexico')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ size ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new mexico ' })

id:20
nl:wie gross ist north dakota
mrl:answer(size(stateid('north dakota')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ size ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' north dakota ' })

id:21
nl:wie gross ist texas
mrl:answer(size(stateid('texas')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ size ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:22
nl:wie gross ist die stadt new york
mrl:answer(size(city(cityid('new york', _))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ size ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' new york ' })

id:23
nl:wie hoch sind hoechsten erhebungen aller staaten
mrl:answer(elevation_1(highest(place(loc_2(state(all))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:24
nl:wie hoch liegt guadalupe peak
mrl:answer(elevation_1(placeid('guadalupe peak')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ placeid ( *n:PlaceName ) })
*n:PlaceName -> ({ ' guadalupe peak ' })

id:25
nl:wie hoch ist mount mckinley
mrl:answer(elevation_1(placeid('mount mckinley')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ placeid ( *n:PlaceName ) })
*n:PlaceName -> ({ ' mount mckinley ' })

id:26
nl:wie hoch liegt der hoechste punkt in amerika
mrl:answer(elevation_1(highest(place(loc_2(countryid('usa'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:27
nl:wie hoch ist der hoechste punkt in montana
mrl:answer(elevation_1(highest(place(loc_2(stateid('montana'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' montana ' })

id:28
nl:wie hoch liegt der hoechste punkt des groessten staates
mrl:answer(elevation_1(highest(place(loc_2(largest(state(all)))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:29
nl:wie hoch liegt der hoechste punkt in alabama
mrl:answer(elevation_1(highest(place(loc_2(stateid('alabama'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alabama ' })

id:30
nl:wie hcho liegt der hoechste punkt von delaware
mrl:answer(elevation_1(highest(place(loc_2(stateid('delaware'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' delaware ' })

id:31
nl:wie hoch liegt der hoechste punkt floridas
mrl:answer(elevation_1(highest(place(loc_2(stateid('florida'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' florida ' })

id:32
nl:wie hoch liegt der hoechste punkt von louisiana
mrl:answer(elevation_1(highest(place(loc_2(stateid('louisiana'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' louisiana ' })

id:33
nl:wie gross ist alaska
mrl:answer(size(stateid('alaska')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ size ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:34
nl:wie gross ist texas
mrl:answer(size(stateid('texas')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ size ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:35
nl:wie gross ist die groesste stadt in alaska
mrl:answer(size(largest(city(loc_2(stateid('alaska'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ size ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:36
nl:wie lange ist rio grande
mrl:answer(len(riverid('rio grande')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' rio grande ' })

id:37
nl:wie lang ist der colorado fluss
mrl:answer(len(river(riverid('colorado'))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' colorado ' })

id:38
nl:wie lang ist der delaware river
mrl:answer(len(river(riverid('delaware'))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' delaware ' })

id:39
nl:wie lang ist der laengste fluss kaliforniens
mrl:answer(len(longest(river(loc_2(stateid('california'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:40
nl:wie lange ist der laengste fluss der usa
mrl:answer(len(longest(river(loc_2(countryid('usa'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:41
nl:wie lang ist der mississippi fluss
mrl:answer(len(riverid('mississippi')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:42
nl:wie lange is der mississippi
mrl:answer(len(river(riverid('mississippi'))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:43
nl:wie lange in meilen ist der mississippi fluss
mrl:answer(len(river(riverid('mississippi'))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:44
nl:wie lang ist der fluss missouri
mrl:answer(len(river(riverid('missouri'))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' missouri ' })

id:45
nl:wie lange ist der north platte fluss
mrl:answer(len(river(riverid('north platte'))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' north platte ' })

id:46
nl:wie lang ist der fluss ohio
mrl:answer(len(river(riverid('ohio'))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' ohio ' })

id:47
nl:wie land ist der rio grande fluss
mrl:answer(len(river(riverid('rio grande'))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' rio grande ' })

id:48
nl:wie lang ist der kuerzeste fluss in den usa
mrl:answer(len(shortest(river(loc_2(countryid('usa'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ shortest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:49
nl:wie viele grosse staedte gibt es in pennsylvania
mrl:answer(count(major(city(loc_2(stateid('pennsylvania'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' pennsylvania ' })

id:50
nl:wie viele grosse staedte gibt es in rhode island
mrl:answer(count(capital(loc_2(stateid('rhode island')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' rhode island ' })

id:51
nl:wie viele staedte sind in louisiana
mrl:answer(count(city(loc_2(stateid('louisiana')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' louisiana ' })

id:52
nl:wie viele staede sind in montana
mrl:answer(count(city(loc_2(stateid('montana')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' montana ' })

id:53
nl:wie viele staedte gibt es in den usa
mrl:answer(count(city(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:54
nl:wie viele staedte hat die usa
mrl:answer(count(city(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:55
nl:wie viele staedte gibt es in den usa
mrl:answer(count(city(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:56
nl:wie viele staedte gibt es in den usa
mrl:answer(count(city(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:57
nl:wie viele staedte hat texas
mrl:answer(count(city(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:58
nl:wie viele staedte gibt es in den usa
mrl:answer(count(city(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:59
nl:wieviele staedte mit dem namen austin gibt es in den usa
mrl:answer(count(intersection(city(cityid('austin', _)), loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ intersection ( *n:City , *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' austin ' })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:60
nl:wie viele einwohner hat die groesste stadt in den usa
mrl:answer(population_1(largest(city(all))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( all ) })

id:61
nl:wie viele bewohner hat alabama
mrl:answer(population_1(stateid('alabama')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alabama ' })

id:62
nl:anzahl leute in boulder
mrl:answer(population_1(cityid('boulder', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' boulder ' })

id:63
nl:wie viele staatsbuerger wohnen in california
mrl:answer(population_1(stateid('california')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:64
nl:wie viele fluesse mit dem namen colorado gibt es
mrl:answer(count(river(riverid('colorado'))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' colorado ' })

id:65
nl:wieviele einwohner hat montgomery
mrl:answer(population_1(cityid('montgomery', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' montgomery ' })

id:66
nl:wie viele grosse staedte gibt es in arizona
mrl:answer(count(major(city(loc_2(stateid('arizona'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' arizona ' })

id:67
nl:wie viele wichtige staedte gibt es in florida
mrl:answer(count(major(city(loc_2(stateid('florida'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' florida ' })

id:68
nl:wie viele wichtige staedte gibt es in den staaten welche an nebraska grenzen
mrl:answer(count(major(city(loc_2(state(next_to_2(stateid('nebraska'))))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' nebraska ' })

id:69
nl:wie viele groessere stadte sind in staaten die an utah angrenzen
mrl:answer(count(major(city(loc_2(state(next_to_2(stateid('utah'))))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' utah ' })

id:70
nl:wie viele wichtige staedte gibt es in texas
mrl:answer(count(major(city(loc_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:71
nl:wie viele groessere staedte gibt es
mrl:answer(count(major(city(all))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( all ) })

id:72
nl:wie viel wichtige staedte gibt es in oregon
mrl:answer(count(major(city(loc_2(stateid('oregon'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' oregon ' })

id:73
nl:wie viele groessere fluesse durchqueren ohio
mrl:answer(count(major(river(traverse_2(stateid('ohio'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ major ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' ohio ' })

id:74
nl:wie viele einwohner hat nevada
mrl:answer(population_1(state(stateid('nevada'))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' nevada ' })

id:75
nl:wie viele leute gibt es in iowa
mrl:answer(population_1(stateid('iowa')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' iowa ' })

id:76
nl:wie viele leute gibt es in new york
mrl:answer(population_1(stateid('new york')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new york ' })

id:77
nl:anzahl staatsbuerger in boulder
mrl:answer(population_1(cityid('boulder', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' boulder ' })

id:78
nl:wie viele menschen leben in austin
mrl:answer(population_1(cityid('austin', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' austin ' })

id:79
nl:wie viele leute leben in austin texas
mrl:answer(population_1(cityid('austin', 'tx')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })
*n:CityName -> ({ ' austin ' })
*n:StateAbbrev -> ({ ' tx ' })

id:80
nl:wie viele einwohner hat kalifornien
mrl:answer(population_1(stateid('california')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:81
nl:wie viele leute wohnen in chicago
mrl:answer(population_1(cityid('chicago', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' chicago ' })

id:82
nl:wie viele menschen leben in detroit
mrl:answer(population_1(cityid('detroit', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' detroit ' })

id:83
nl:wie hoch ist die bevoelkerung von hawaii
mrl:answer(population_1(stateid('hawaii')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' hawaii ' })

id:84
nl:wie viele menschen leben in houston
mrl:answer(population_1(cityid('houston', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' houston ' })

id:85
nl:wie viele menschen leben in kalamazoo
mrl:answer(population_1(cityid('kalamazoo', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' kalamazoo ' })

id:86
nl:wie viele leute wohnen in kansas
mrl:answer(population_1(stateid('kansas')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' kansas ' })

id:87
nl:wie viele leute leben in minneapolis minnesota
mrl:answer(population_1(cityid('minneapolis', 'mn')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })
*n:CityName -> ({ ' minneapolis ' })
*n:StateAbbrev -> ({ ' mn ' })

id:88
nl:wie viele leute leben in mississippi
mrl:answer(population_1(stateid('mississippi')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' mississippi ' })

id:89
nl:wie viele leute wohnen in montana
mrl:answer(population_1(stateid('montana')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' montana ' })

id:90
nl:wie viele leute wohnen in new hampshire
mrl:answer(population_1(stateid('new hampshire')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new hampshire ' })

id:91
nl:welches ist die einwohnerzahl von neu mexiko
mrl:answer(population_1(stateid('new mexico')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new mexico ' })

id:92
nl:wie viele einwohner hat new york
mrl:answer(population_1(stateid('new york')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new york ' })

id:93
nl:wie viele leute leben in rhode island
mrl:answer(population_1(stateid('rhode island')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' rhode island ' })

id:94
nl:wie viele leute wohnen in riverside
mrl:answer(population_1(cityid('riverside', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' riverside ' })

id:95
nl:wie viele leute wohnen in san francisco
mrl:answer(population_1(cityid('san francisco', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' san francisco ' })

id:96
nl:wie viele leute wohnen in sud dakota
mrl:answer(population_1(stateid('south dakota')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' south dakota ' })

id:97
nl:wie viele leute wohnen in spokane washington
mrl:answer(population_1(cityid('spokane', 'wa')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })
*n:CityName -> ({ ' spokane ' })
*n:StateAbbrev -> ({ ' wa ' })

id:98
nl:wie gross ist die bevoelkerung von texas
mrl:answer(population_1(stateid('texas')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:99
nl:wie wieviele menschen leben in der groessten stadt von new york state
mrl:answer(population_1(largest(city(loc_2(state(stateid('new york')))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new york ' })

id:100
nl:wie viele leute wohnen in der hauptstadt georgias
mrl:answer(population_1(capital(loc_2(stateid('georgia')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' georgia ' })

id:101
nl:wie viele leute leben in der hauptstadt von texas
mrl:answer(population_1(capital(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:102
nl:wie veile leute leben in dem kleinsten staat welcher an wyoming grenzt
mrl:answer(population_1(smallest(state(next_to_2(stateid('wyoming'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' wyoming ' })

id:103
nl:wie lautet die bevoelkerung des staat mit der hoechsten bevoelkerungsdichte
mrl:answer(population_1(largest_one(density_1(state(all)))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ largest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:104
nl:wie viele menschen leben in den usa
mrl:answer(population_1(countryid('usa')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:105
nl:welches ist die einwohnerzahl von washington
mrl:answer(population_1(stateid('washington')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' washington ' })

id:106
nl:wie viele einwohner hat washington dc
mrl:answer(population_1(cityid('washington', 'dc')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })
*n:CityName -> ({ ' washington ' })
*n:StateAbbrev -> ({ ' dc ' })

id:107
nl:wie viele leute leben in austin
mrl:answer(population_1(cityid('austin', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' austin ' })

id:108
nl:wie viele menschen leben in utah
mrl:answer(population_1(stateid('utah')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' utah ' })

id:109
nl:welches ist die bevoelkerungszahl von utah
mrl:answer(population_1(stateid('utah')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' utah ' })

id:110
nl:wie viele einwohner leben in texas
mrl:answer(population_1(stateid('texas')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:111
nl:wie viele fluesse heissen colorado
mrl:answer(count(river(riverid('colorado'))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' colorado ' })

id:112
nl:wie viele fluesse gibt es in colorado
mrl:answer(count(river(loc_2(stateid('colorado')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:113
nl:wie viele fluesse sind in colorado
mrl:answer(count(river(loc_2(stateid('colorado')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:114
nl:wie viele fluesse gibt es in iowa
mrl:answer(count(river(loc_2(stateid('iowa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' iowa ' })

id:115
nl:wie viele fluesse gibt es in missouri
mrl:answer(count(river(loc_2(stateid('missouri')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' missouri ' })

id:116
nl:wie viele fluesse gibt es in new york
mrl:answer(count(river(loc_2(stateid('new york')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new york ' })

id:117
nl:wie viele flÃ¼sse gibt es im staat mit den meisten flÃ¼ssen
mrl:answer(count(river(loc_2(most(state(loc_1(river(all))))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ river ( all ) })

id:118
nl:wie viele fluesse gibt es im staat mit dem hoechsten punkt
mrl:answer(count(river(loc_2(state(loc_1(highest(place(all))))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:119
nl:wie viele fluesse sind in dem staat mit der groessten bevoelkerung
mrl:answer(count(river(loc_2(largest_one(population_1(state(all)))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:120
nl:wie viele fluesse gibt es in idaho
mrl:answer(count(river(loc_2(stateid('idaho')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' idaho ' })

id:121
nl:wie viele fluesse laufen durch texas
mrl:answer(count(river(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:122
nl:wie viele fluesse gibt es in den usa
mrl:answer(count(river(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:123
nl:wie viele fluesse verlaufen nicht durch den staat mit der hauptstadt albany
mrl:answer(count(exclude(river(all), traverse_2(state(loc_1(capital(cityid('albany', _))))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ exclude ( *n:River , *n:River ) })
*n:River -> ({ river ( all ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' albany ' })

id:124
nl:wieviele fluesse gibt es in alaska
mrl:answer(count(river(loc_2(stateid('alaska')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:125
nl:wie viele fluesse gibt es in colorado
mrl:answer(count(river(loc_2(stateid('colorado')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:126
nl:wie viele fluesse in texas sind laenger als der red
mrl:answer(count(intersection(river(loc_2(stateid('texas'))), longer(riverid('red')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ intersection ( *n:River , *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })
*n:River -> ({ longer ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' red ' })

id:127
nl:wie viele fluesse gibt es in washington
mrl:answer(count(river(loc_2(stateid('washington')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' washington ' })

id:128
nl:wie viele fluesse gibt es in texas
mrl:answer(count(river(traverse_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:129
nl:wie viele fluesse fliessen durch die staaten die colorado angrenzen
mrl:answer(count(river(traverse_2(state(next_to_2(stateid('colorado')))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:130
nl:wie viele quadratkilometer umfasst die usa
mrl:answer(area_1(countryid('usa')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:131
nl:wie viele staaten gibt es in den usa
mrl:answer(count(state(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:132
nl:wie viele staaten gibt es in den usa
mrl:answer(count(state(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:133
nl:wie viele staaten liegen neben wichtigten fluessen
mrl:answer(count(state(next_to_2(major(river(all))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:River ) })
*n:River -> ({ major ( *n:River ) })
*n:River -> ({ river ( all ) })

id:134
nl:wie viele staaten gibt es
mrl:answer(count(state(all)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( all ) })

id:135
nl:wie viele staaten hat die usa
mrl:answer(count(state(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:136
nl:wie viele staaten gibt es in den usa
mrl:answer(count(state(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:137
nl:wie viele staaten grenzen an alaska
mrl:answer(count(state(next_to_2(stateid('alaska')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:138
nl:wie viele staaten grenzen an zumindest einen anderen staat an
mrl:answer(count(state(next_to_2(state(all)))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:139
nl:wie viele staaten grenzen an colorado und new mexico an
mrl:answer(count(state(intersection(next_to_2(stateid('colorado')), next_to_2(stateid('new mexico'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ intersection ( *n:State , *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new mexico ' })

id:140
nl:wie viele staaten grenzen an hawaii
mrl:answer(count(state(next_to_2(stateid('hawaii')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' hawaii ' })

id:141
nl:nenne die anzahl der staaten welche an iowa grenzen
mrl:answer(count(state(next_to_2(stateid('iowa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' iowa ' })

id:142
nl:wie viele staaten grenzen an den staat dessen hauptstadt boston ist
mrl:answer(count(state(next_to_2(state(loc_1(capital(cityid('boston', _))))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' boston ' })

id:143
nl:wie viele staaten grenzen an tennessee an
mrl:answer(count(state(next_to_2(stateid('tennessee')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' tennessee ' })

id:144
nl:wie viele staaten grenzen an texas an
mrl:answer(count(state(next_to_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:145
nl:wieviele staaten grenzen an dem groessten staat
mrl:answer(count(state(next_to_2(largest(state(all))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:146
nl:wie viele staaten grenzen an den mississippi fluss an
mrl:answer(count(state(next_to_2(river(riverid('mississippi'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:147
nl:wie viele staaten grenzen an den staat mit den meisten nachbarstaaten
mrl:answer(count(state(next_to_2(most(state(next_to_2(state(all))))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:148
nl:wie viele staaten grenzen an den staat mit der groessten bevoelkerung
mrl:answer(count(state(next_to_2(largest_one(population_1(state(all)))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:149
nl:wie viele staaten haben keine fluesse
mrl:answer(count(exclude(state(all), loc_1(river(all)))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ exclude ( *n:State , *n:State ) })
*n:State -> ({ state ( all ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ river ( all ) })

id:150
nl:iowa grenzt an wie viele staaten
mrl:answer(count(state(next_to_1(stateid('iowa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' iowa ' })

id:151
nl:an wieviele staaten grenzt missouri
mrl:answer(count(state(next_to_1(stateid('missouri')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' missouri ' })

id:152
nl:an wie viele staaten grenzt tennessee
mrl:answer(count(state(next_to_1(stateid('tennessee')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' tennessee ' })

id:153
nl:durch wie viele staaten fliesst der fluss colorado
mrl:answer(count(state(traverse_1(river(riverid('colorado'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' colorado ' })

id:154
nl:durch wie viele staaten fliesst der fluss colorado
mrl:answer(count(state(traverse_1(river(riverid('colorado'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' colorado ' })

id:155
nl:durch wie viele staaten fliesst der mississippi
mrl:answer(count(state(traverse_1(river(riverid('mississippi'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:156
nl:durch wie viele staaten fliesst der fluss mississippi
mrl:answer(count(state(traverse_1(riverid('mississippi')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:157
nl:durch wie viele staaten laeuft der fluss missouri
mrl:answer(count(state(traverse_1(river(riverid('missouri'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' missouri ' })

id:158
nl:wie viele staaten sind in den vereinigten staaten
mrl:answer(count(state(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:159
nl:in wie vielen staaten gibt es eine stadt mit dem namen rochester
mrl:answer(count(state(loc_1(city(cityid('rochester', _))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' rochester ' })

id:160
nl:in wie vielen staaten gibt es eine stadt namens springfield
mrl:answer(count(state(loc_1(city(cityid('springfield', _))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' springfield ' })

id:161
nl:wie viele staaten haben einen hoeher gelegenen punkt als der hoechstgelegene punkt des staates mit der groessten hauptstadt in den usa
mrl:answer(count(state(loc_1(place(higher_2(highest(place(loc_2(state(loc_1(largest(capital(city(loc_2(countryid('usa'))))))))))))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ higher_2 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:162
nl:wie viele staaten habe staedte die austin heissen
mrl:answer(count(state(loc_1(city(cityid('austin', _))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' austin ' })

id:163
nl:wie viele staaten haben staedte welche nach springfield benannt sind
mrl:answer(count(state(loc_1(city(cityid('springfield', _))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' springfield ' })

id:164
nl:wie viele staaten haben wichtige fluesse
mrl:answer(count(state(loc_1(major(river(all))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ major ( *n:River ) })
*n:River -> ({ river ( all ) })

id:165
nl:durch wieviele staaten der usa fliesst der kuerzeste fluss
mrl:answer(count(intersection(state(loc_2(countryid('usa'))), traverse_1(shortest(river(all))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ intersection ( *n:State , *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ shortest ( *n:River ) })
*n:River -> ({ river ( all ) })

id:166
nl:wie viele leute wohnen in texas
mrl:answer(population_1(stateid('texas')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:167
nl:wie hoch ist mount mckinley
mrl:answer(elevation_1(placeid('mount mckinley')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ placeid ( *n:PlaceName ) })
*n:PlaceName -> ({ ' mount mckinley ' })

id:168
nl:wie hoch ist der hoechste punkt in montana
mrl:answer(elevation_1(highest(place(loc_2(stateid('montana'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' montana ' })

id:169
nl:in welchem staat befindet sich der mount mckinley
mrl:answer(state(loc_1(placeid('mount mckinley'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ placeid ( *n:PlaceName ) })
*n:PlaceName -> ({ ' mount mckinley ' })

id:170
nl:was ist der staat mit der hoechsten hoehe in den vereinigten staaten
mrl:answer(state(loc_1(highest(place(loc_2(countryid('usa')))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:171
nl:in welchem staat liegt rochester
mrl:answer(state(loc_1(cityid('rochester', _))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' rochester ' })

id:172
nl:an wie viele staaten grenzt iowa
mrl:answer(count(state(next_to_1(stateid('iowa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' iowa ' })

id:173
nl:liste alle staaten
mrl:answer(state(all))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( all ) })

id:174
nl:oegregib alle seen in den usa aus
mrl:answer(lake(loc_2(countryid('usa'))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lake ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:175
nl:welche fluesse fliessen durch colorado
mrl:answer(river(loc_2(stateid('colorado'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:176
nl:nenne die 50 hauptstaedte in den usa
mrl:answer(capital(loc_2(countryid('usa'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:177
nl:was ist der laengste fluss in den usa
mrl:answer(longest(river(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:178
nl:nenne die groessten seen in michigan
mrl:answer(major(lake(loc_2(stateid('michigan')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ major ( *n:Place ) })
*n:Place -> ({ lake ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' michigan ' })

id:179
nl:nenne die wichtigsten fluesse in florida
mrl:answer(major(river(loc_2(stateid('florida')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ major ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' florida ' })

id:180
nl:nenne die fluesse in arkansas
mrl:answer(river(loc_2(stateid('arkansas'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' arkansas ' })

id:181
nl:nenne die staaten an die keine anderen staaten angrenzen
mrl:answer(exclude(state(all), next_to_2(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ exclude ( *n:State , *n:State ) })
*n:State -> ({ state ( all ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:182
nl:wie viele staatsbuerger in boulder
mrl:answer(population_1(cityid('boulder', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' boulder ' })

id:183
nl:wie viele leute in boulder
mrl:answer(population_1(cityid('boulder', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' boulder ' })

id:184
nl:wie viele staaten grenzen an iowa
mrl:answer(count(state(next_to_2(stateid('iowa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' iowa ' })

id:185
nl:welcher staat hat die niedrigste erhebung in den staaten durch welche der mississippi fluss verlaeuft
mrl:answer(state(loc_1(lowest(place(loc_2(state(traverse_1(river(riverid('mississippi'))))))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:186
nl:wie hoch ist die bevoelkerung von boulder
mrl:answer(population_1(cityid('boulder', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' boulder ' })

id:187
nl:leute in boulder
mrl:answer(population_1(cityid('boulder', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' boulder ' })

id:188
nl:wie viele fluesse verlaufen durch new york
mrl:answer(river(loc_2(stateid('new york'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new york ' })

id:189
nl:sacramento ist die hauptstadt welcher staat
mrl:answer(state(loc_1(capital(cityid('sacramento', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' sacramento ' })

id:190
nl:in welchem staat liegt san antonio
mrl:answer(state(loc_1(cityid('san antonio', _))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' san antonio ' })

id:191
nl:zeige mir die wichtigsten staedte in colorado
mrl:answer(major(city(loc_2(stateid('colorado')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:192
nl:zeige mir alle groesseren seen in den usa
mrl:answer(major(lake(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ major ( *n:Place ) })
*n:Place -> ({ lake ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:193
nl:nenne den staat mit der groessten flaeche
mrl:answer(largest_one(area_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( area_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:194
nl:staaten iowa angrenzend
mrl:answer(state(next_to_2(stateid('iowa'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' iowa ' })

id:195
nl:nenne mir die staedte in texas
mrl:answer(city(loc_2(stateid('texas'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:196
nl:durch welche staaten fliesst der laengste fluss in texas
mrl:answer(state(traverse_1(longest(river(loc_2(stateid('texas')))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:197
nl:durch welche staaten verlaueft der mississippi
mrl:answer(state(traverse_1(riverid('mississippi'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:198
nl:durch welche staaten fliesst der mississippi
mrl:answer(state(traverse_1(riverid('mississippi'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:199
nl:welche fluesse gibt es in texas
mrl:answer(river(loc_2(stateid('texas'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:200
nl:welche wichtigen fleusse gibt es in texas
mrl:answer(major(river(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ major ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:201
nl:welches sind die groessten fluesse in texas
mrl:answer(longest(river(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:202
nl:wie lauten die hauptstaedte der staaten welche an texas grenzen
mrl:answer(capital(city(loc_2(state(next_to_2(stateid('texas')))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:203
nl:was ist die hauptstadt des staates texas
mrl:answer(capital(city(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:204
nl:wie lauten die hauptstaedte der staaten welche an missouri grenzen
mrl:answer(capital(loc_2(state(next_to_2(stateid('missouri'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' missouri ' })

id:205
nl:welches sind die hauptstaedte der an texas angrenzenden staaten
mrl:answer(capital(loc_2(state(next_to_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:206
nl:was sind die staedte in california
mrl:answer(city(loc_2(stateid('california'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:207
nl:wie lauten die staedte in den staaten durch welchder mississippi fluss verlaeuft
mrl:answer(city(loc_2(state(traverse_1(riverid('mississippi'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:208
nl:welches sind die staedte des staates mit der hoechsten erhebung
mrl:answer(city(loc_2(state(loc_1(highest(place(all)))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:209
nl:wie lauten die hoechsten punkte aller staaten
mrl:answer(highest(place(loc_2(state(all)))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:210
nl:wie lauten die hoechsten punkte der staaten welche mississippi umgeben
mrl:answer(highest(place(loc_2(state(next_to_2(stateid('mississippi')))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' mississippi ' })

id:211
nl:wie lauten die namen der seen der staaten welche an texas grenzen
mrl:answer(lake(loc_2(state(next_to_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lake ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:212
nl:welches sind die groessten staedte in an den groessten staat angrenzende staaten
mrl:answer(largest(city(loc_2(state(next_to_2(largest(state(all))))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:213
nl:welches sind die grossen staedte in alabama
mrl:answer(major(city(loc_2(stateid('alabama')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alabama ' })

id:214
nl:wie lauten die wichtigsten staedte in alaska
mrl:answer(major(city(loc_2(stateid('alaska')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:215
nl:wie lauten die wichtigsten fluesse  in dem staat california
mrl:answer(major(city(loc_2(stateid('california')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:216
nl:welches sind grosse staedte in delaware
mrl:answer(major(city(loc_2(stateid('delaware')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' delaware ' })

id:217
nl:welche grossen staedte gibt es in kansas
mrl:answer(major(city(loc_2(stateid('kansas')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' kansas ' })

id:218
nl:welche sind die groessten staedte in missouri
mrl:answer(major(city(loc_2(stateid('missouri')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' missouri ' })

id:219
nl:welche sind die groesseren staedte in new mexico
mrl:answer(major(city(loc_2(stateid('new mexico')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new mexico ' })

id:220
nl:welches sind grosse staedte in new york
mrl:answer(major(city(loc_2(stateid('new york')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new york ' })

id:221
nl:welches sind die wesentlichen staedte north carolinas
mrl:answer(major(city(loc_2(stateid('north carolina')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' north carolina ' })

id:222
nl:wie lauten die wichtigsten staedte in ohio
mrl:answer(major(city(loc_2(stateid('ohio')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' ohio ' })

id:223
nl:welche sind die groesste staedte in oklahoma
mrl:answer(major(city(loc_2(stateid('oklahoma')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' oklahoma ' })

id:224
nl:wie lauten die wichtigsten staedte in rhode island
mrl:answer(major(city(loc_2(stateid('rhode island')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' rhode island ' })

id:225
nl:welches sind grosse staedte in den staaten durch die der mississippi fliesst
mrl:answer(major(city(loc_2(state(traverse_1(riverid('mississippi')))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:226
nl:welche sind die groessten staedte in texas
mrl:answer(major(city(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:227
nl:was sind die groessten stadte in dem groessten staat
mrl:answer(major(city(loc_2(largest(state(all))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:228
nl:welches sind die groessten staedte im kleinsten staat der usa
mrl:answer(major(city(loc_2(smallest(state(loc_2(countryid('usa'))))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:229
nl:wie lauten die wichtigsten staedte in california
mrl:answer(major(city(loc_2(state(stateid('california'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:230
nl:wie lauten die wichtigsten staedte in den vereinigten staaten durch welche der wichtigste fluss in virginia verlaeuft
mrl:answer(major(city(loc_2(state(traverse_1(major(river(loc_2(stateid('virginia'))))))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ major ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' virginia ' })

id:231
nl:wie lauten die wichtigen staedte der usa
mrl:answer(major(city(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:232
nl:welches sind grosse staedte in vermont
mrl:answer(major(city(loc_2(stateid('vermont')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' vermont ' })

id:233
nl:wie lauten die wichtigsten stadte in wyoming
mrl:answer(major(city(loc_2(stateid('wyoming')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' wyoming ' })

id:234
nl:welches sind die wesentlichen staedte in texas
mrl:answer(major(city(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:235
nl:welches sind die groessten staedte der usa
mrl:answer(major(city(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:236
nl:wie lauten die wichtigsten staedte der vereinigten staaten
mrl:answer(major(city(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:237
nl:wie lauten die wichtigsten seen in den usa
mrl:answer(major(lake(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ major ( *n:Place ) })
*n:Place -> ({ lake ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:238
nl:wie lauten die wichtigsten fluesse in ohio
mrl:answer(major(river(loc_2(stateid('ohio')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ major ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' ohio ' })

id:239
nl:welches sind die haupt-fluesse in den usa
mrl:answer(major(river(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ major ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:240
nl:welches sind die namen grosser staedte in illinois
mrl:answer(major(city(loc_2(stateid('illinois')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' illinois ' })

id:241
nl:welches sind die nachbarstaaten von michigan
mrl:answer(state(next_to_2(stateid('michigan'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' michigan ' })

id:242
nl:welches sind die bevoelkerungsdichten der us staaten
mrl:answer(density_1(state(all)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:243
nl:welches ist die einwohnerzahl von mississippi
mrl:answer(population_1(stateid('mississippi')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' mississippi ' })

id:244
nl:wie gross sind die bevoelkerungen aller wichtigen staedte in montana
mrl:answer(population_1(major(city(loc_2(stateid('montana'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' montana ' })

id:245
nl:wie hoch ist die bevoelkerung der staaten durch welche der mississippi fluss verlaeuft
mrl:answer(population_1(state(traverse_1(river(riverid('mississippi'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:246
nl:was sind die bevoelkerungen der staaten durch denen die mississippi fliesst
mrl:answer(population_1(state(traverse_1(river(riverid('mississippi'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:247
nl:was sind die bevoelkerungen der staaten durch deren den mississippi fluss fliesst
mrl:answer(population_1(state(traverse_1(riverid('mississippi')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:248
nl:was sind die bevoelkerungen der staaten durch deren den mississippi fluss fliesst
mrl:answer(population_1(state(traverse_1(riverid('mississippi')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:249
nl:wie gross sind die bevoelkerungen der staaten welche an texas grenzen
mrl:answer(population_1(state(next_to_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:250
nl:welches sind die einwohnerzahlen der grossen staedte in texas
mrl:answer(population_1(major(city(loc_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:251
nl:wie gross ist die bevoelkerungszahl der staaten durch die der mississippi fliesst
mrl:answer(population_1(state(traverse_1(river(riverid('mississippi'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:252
nl:wie gross sind die bevoelkerungen der staaten durch welche der mississippi verlaeuft
mrl:answer(population_1(state(traverse_1(river(riverid('mississippi'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:253
nl:wie gross sind die bevoelkerungen der staaten durch die der mississippi fliesst
mrl:answer(population_1(state(traverse_1(riverid('mississippi')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:254
nl:wie gross sind die bevoelkerungen in den staaten durch welche der mississippi fluss verlaeuft
mrl:answer(population_1(state(traverse_1(riverid('mississippi')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:255
nl:welches sind die flÃ¼sse in alaska
mrl:answer(river(loc_2(stateid('alaska'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:256
nl:welches sind die fluesse im staate indiana
mrl:answer(river(loc_2(state(stateid('indiana')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' indiana ' })

id:257
nl:welche fluesse gibt es in texas
mrl:answer(river(loc_2(state(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:258
nl:welche sind die fluesse montanas
mrl:answer(river(loc_2(stateid('montana'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' montana ' })

id:259
nl:welche staaten gibt es
mrl:answer(state(all))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( all ) })

id:260
nl:welche staaten grenzen an den hoechstbevoelkertsten staat
mrl:answer(state(next_to_2(largest_one(population_1(state(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:261
nl:welches sind die staaten durch die der potomac fliesst
mrl:answer(state(traverse_1(riverid('potomac'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' potomac ' })

id:262
nl:welche staaten durchquert der laenste fluss
mrl:answer(state(traverse_1(longest(river(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( all ) })

id:263
nl:was koennen sie mir zur bevoelkerung missouris sagen
mrl:answer(population_1(stateid('missouri')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' missouri ' })

id:264
nl:was ist die groesste hauptstadt nach bevoelkerung
mrl:answer(largest_one(population_1(capital(all))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ capital ( all ) })

id:265
nl:welche hauptstadt ist die groesse in den usa
mrl:answer(largest(capital(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:266
nl:welche staedte befinden sich in pennsylvania
mrl:answer(city(loc_2(stateid('pennsylvania'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' pennsylvania ' })

id:267
nl:welche staedte in california
mrl:answer(city(loc_2(stateid('california'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:268
nl:welche staedte in texas die groesste bevoelkerung
mrl:answer(largest_one(population_1(city(loc_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:269
nl:welche stadt in texas hat die groesste bevoelkerung
mrl:answer(largest_one(population_1(city(loc_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:270
nl:welche stadt hat die groesste bevoelkerung
mrl:answer(largest_one(population_1(city(all))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( all ) })

id:271
nl:welche stadt hat die kleinste bevoelkerung
mrl:answer(smallest_one(population_1(city(all))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ smallest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( all ) })

id:272
nl:welche stadt hat die meisten leute
mrl:answer(largest_one(population_1(city(all))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( all ) })

id:273
nl:welche us stadt hat ide hoechste bevoelkerungsdichte
mrl:answer(largest_one(density_1(city(loc_2(countryid('usa'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( density_1 ( *n:City ) ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:274
nl:wie lautet die hauptstadt von iowa
mrl:answer(capital(loc_2(stateid('iowa'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' iowa ' })

id:275
nl:welches ist die hauptstadt des staates mit dem tiefstgelegenen punkt
mrl:answer(capital(loc_2(state(loc_1(lowest(place(all)))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:276
nl:wie lautet die groesste hauptstadt
mrl:answer(largest(capital(all)))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ capital ( all ) })

id:277
nl:welcher staat grenzt an kalifornien
mrl:answer(state(next_to_2(stateid('california'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:278
nl:welches ist die flaechenausdehnung von alaska
mrl:answer(area_1(stateid('alaska')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:279
nl:wie lautet die gesamte bevoelkerung aller 50 staaten
mrl:answer(sum(area_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ sum ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:280
nl:welche flaechenausdehnung hat kalifornien
mrl:answer(area_1(stateid('california')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:281
nl:wie gross ist die flaeche von florida
mrl:answer(area_1(stateid('florida')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' florida ' })

id:282
nl:welche flaeche hat idaho
mrl:answer(area_1(stateid('idaho')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' idaho ' })

id:283
nl:wie gross ist die flaeche von maine
mrl:answer(area_1(stateid('maine')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' maine ' })

id:284
nl:wie gross ist die flaeche von maryland in quadratkilometer
mrl:answer(area_1(stateid('maryland')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' maryland ' })

id:285
nl:was ist die flaeche new mexicos
mrl:answer(area_1(stateid('new mexico')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new mexico ' })

id:286
nl:welches ist die flaechenausdehnung von ohio
mrl:answer(area_1(stateid('ohio')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' ohio ' })

id:287
nl:was ist die flaeche seattles
mrl:answer(area_1(cityid('seattle', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' seattle ' })

id:288
nl:welches ist die flaeche von south carolina
mrl:answer(area_1(stateid('south carolina')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' south carolina ' })

id:289
nl:wie gross ist die flaeche von texas
mrl:answer(area_1(stateid('texas')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:290
nl:welches ist die flaeche des groessten staates
mrl:answer(area_1(largest(state(all))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:291
nl:was ist die flaeche des kleinsten staates
mrl:answer(area_1(smallest(state(all))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:292
nl:wie gross ist die flaeche des staates mit der hauptstadt albany
mrl:answer(area_1(state(loc_1(capital(cityid('albany', _))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' albany ' })

id:293
nl:wie gross ist die flaeche von dem staat mit der niedrigsten bevoelkerungsdichte
mrl:answer(area_1(smallest_one(density_1(state(all)))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:294
nl:wie gross ist die gesamte flaeche der usa
mrl:answer(area_1(state(all)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:295
nl:welches ist die flaeche der staates texas
mrl:answer(area_1(state(stateid('texas'))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:296
nl:welches ist die flaeche von wisconsin
mrl:answer(area_1(stateid('wisconsin')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' wisconsin ' })

id:297
nl:was ist die durchschnittliche bevoelkerung fuer die usa pro staat
mrl:answer(density_1(countryid('usa')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:298
nl:welches ist die durchschnittliche bevoelkerungsdichte in pennsylvania
mrl:answer(density_1(stateid('pennsylvania')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' pennsylvania ' })

id:299
nl:wie gross ist die durchschnittliche bevoelkerung pro quadratkilometer in den vereinigten staaten
mrl:answer(density_1(countryid('usa')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:300
nl:wie lautet die groesste amerikanische stadt in einem staat mit einem fluss
mrl:answer(largest(city(loc_2(state(loc_1(river(all)))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ river ( all ) })

id:301
nl:welches ist die groesste hauptstadt in den usa
mrl:answer(largest(capital(city(loc_2(countryid('usa'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:302
nl:wie lautet die groesste stadt in arizona
mrl:answer(largest(city(loc_2(stateid('arizona')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' arizona ' })

id:303
nl:was ist die groesste stadt georgias
mrl:answer(largest(city(loc_2(stateid('georgia')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' georgia ' })

id:304
nl:wie lautet die groesste stadt von kansas
mrl:answer(largest(city(loc_2(stateid('kansas')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' kansas ' })

id:305
nl:welches ist die groesste stadt in louisiana
mrl:answer(largest(city(loc_2(stateid('louisiana')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' louisiana ' })

id:306
nl:welches ist die groesste stadt in nebraska
mrl:answer(largest(city(loc_2(stateid('nebraska')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' nebraska ' })

id:307
nl:welches ist die groesste stadt in oregon
mrl:answer(largest(city(loc_2(stateid('oregon')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' oregon ' })

id:308
nl:wie lautet die groesste stadt in texas
mrl:answer(largest(city(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:309
nl:was ist die groesste stadt in dem kleinsten staat
mrl:answer(largest(city(loc_2(smallest(state(all))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:310
nl:welches ist die groesste stadt der usa
mrl:answer(largest(city(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:311
nl:was ist die groesste stadt in den usa
mrl:answer(largest(city(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:312
nl:welcher ist die groesste stadt der usa
mrl:answer(largest(city(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:313
nl:welches ist die groesste stadt in wyoming
mrl:answer(largest(city(loc_2(stateid('wyoming')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' wyoming ' })

id:314
nl:welches ist der groesste fluss in illinois
mrl:answer(longest(river(loc_2(stateid('illinois')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' illinois ' })

id:315
nl:wie lautet der groesste staat
mrl:answer(largest(state(all)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:316
nl:welches ist der groesste staat auf dem us -festland
mrl:answer(largest(state(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:317
nl:wie lautet der groesste staat in den usa
mrl:answer(largest(state(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:318
nl:wie lautet die hauptstadt des groessten staates in den usa
mrl:answer(capital(city(loc_2(largest(state(loc_2(countryid('usa'))))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:319
nl:wie lautet die hauptstadt von california
mrl:answer(capital(loc_2(stateid('california'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:320
nl:welches ist die hauptstadt von colorado
mrl:answer(capital(loc_2(stateid('colorado'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:321
nl:was ist die hauptstadt georgias
mrl:answer(capital(loc_2(stateid('georgia'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' georgia ' })

id:322
nl:welches ist die hauptstadt von hawaii
mrl:answer(capital(loc_2(stateid('hawaii'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' hawaii ' })

id:323
nl:wie lautet die hauptstadt von illinois
mrl:answer(capital(loc_2(stateid('illinois'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' illinois ' })

id:324
nl:was ist die hauptstadt von indiana
mrl:answer(capital(loc_2(stateid('indiana'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' indiana ' })

id:325
nl:welches ist die hauptstadt von iowa
mrl:answer(capital(loc_2(stateid('iowa'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' iowa ' })

id:326
nl:wie heisst die hauptstadt von maine
mrl:answer(capital(loc_2(stateid('maine'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' maine ' })

id:327
nl:wie lautet die hauptstadt von maryland
mrl:answer(capital(loc_2(stateid('maryland'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' maryland ' })

id:328
nl:wie lautet die hauptstadt von massachusetts
mrl:answer(capital(loc_2(stateid('massachusetts'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' massachusetts ' })

id:329
nl:welches ist die hauptstadt von michigan
mrl:answer(capital(loc_2(stateid('michigan'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' michigan ' })

id:330
nl:wie lautet die hauptstadt von new hampshire
mrl:answer(capital(loc_2(stateid('new hampshire'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new hampshire ' })

id:331
nl:wie lautet die hauptstadt von new jersey
mrl:answer(capital(loc_2(stateid('new jersey'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new jersey ' })

id:332
nl:welches ist die hauptstadt von new york
mrl:answer(capital(loc_2(stateid('new york'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new york ' })

id:333
nl:wie lautet die hauptstadt von north dakota
mrl:answer(capital(loc_2(stateid('north dakota'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' north dakota ' })

id:334
nl:wie lautet die hauptstadt von ohio
mrl:answer(capital(loc_2(stateid('ohio'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' ohio ' })

id:335
nl:welches ist die hauptstadt von pennsylvania
mrl:answer(capital(loc_2(stateid('pennsylvania'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' pennsylvania ' })

id:336
nl:wie lauten die hauptstadte der staaten welche staedte mit dem namen durham haben
mrl:answer(capital(loc_2(state(loc_1(city(cityid('durham', _)))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' durham ' })

id:337
nl:welches ist die hauptstadt von texas
mrl:answer(capital(loc_2(stateid('texas'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:338
nl:welches ist die hauptstadt des staates alabama
mrl:answer(capital(loc_2(state(stateid('alabama')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alabama ' })

id:339
nl:wie lautet die hauptstadt von florida state
mrl:answer(capital(loc_2(state(stateid('florida')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' florida ' })

id:340
nl:wie lautet die hauptstadt des groessten staates
mrl:answer(capital(loc_2(largest(state(all)))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:341
nl:welches ist die hauptstadt des kleinsten staates
mrl:answer(capital(loc_2(smallest(state(all)))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:342
nl:kannst du mir die hauptstadt von texas nennen
mrl:answer(capital(loc_2(state(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:343
nl:was ist die hauptstadt des staates der die meisten staaten angrenzt
mrl:answer(capital(loc_2(most(state(next_to_2(state(all)))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:344
nl:was ist die hauptstadt des staates der an den staat der texas angrenzt angrenzt
mrl:answer(capital(loc_2(state(next_to_2(state(next_to_2(stateid('texas'))))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:345
nl:was ist die hauptstadt des staates mit der groesten hoehe
mrl:answer(capital(loc_2(state(loc_1(highest(place(all)))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:346
nl:wie lautet die hauptstadt des staats mit der hoechsten erhebung
mrl:answer(capital(loc_2(state(loc_1(highest(place(all)))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:347
nl:wie lautet die hauptstadt des staat mit den meisten einwohnern
mrl:answer(capital(loc_2(largest_one(population_1(state(all))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:348
nl:wie lautet die hauptstadt des staat mit dem groessten bevoelkerungsdichte
mrl:answer(capital(loc_2(largest_one(density_1(state(all))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ largest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:349
nl:welches ist die hauptstadt des staates mit dem laengsten fluss
mrl:answer(capital(loc_2(state(loc_1(longest(river(all)))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( all ) })

id:350
nl:wie lautet die hauptstadt des staat mit der groessten bevoelkerung
mrl:answer(capital(loc_2(largest_one(population_1(state(all))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:351
nl:welches ist die hauptstadt von utah
mrl:answer(capital(loc_2(stateid('utah'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' utah ' })

id:352
nl:welches ist die hauptstadt von vermont
mrl:answer(capital(loc_2(stateid('vermont'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' vermont ' })

id:353
nl:was ist die hauptstadt von washington
mrl:answer(capital(loc_2(stateid('washington'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' washington ' })

id:354
nl:welche staedte in texas haben die hoechste einwohnerzahl
mrl:answer(largest_one(population_1(city(loc_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:355
nl:was ist die stadt mit der kleinsten bevoelkerung
mrl:answer(smallest_one(population_1(city(all))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ smallest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( all ) })

id:356
nl:wie gross ist die gesamte flaeche aller staaten
mrl:answer(sum(area_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ sum ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:357
nl:wie lautet die gesamte bevoelkerung aller 50 staaten
mrl:answer(sum(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ sum ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:358
nl:wie gross ist die bevoelkerung von texas
mrl:answer(density_1(stateid('texas')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:359
nl:welches ist die dichte von new york
mrl:answer(density_1(stateid('new york')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new york ' })

id:360
nl:wie hoch liegt death valley
mrl:answer(elevation_1(placeid('death valley')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ placeid ( *n:PlaceName ) })
*n:PlaceName -> ({ ' death valley ' })

id:361
nl:was ist die hoehe des hoechsten punktes in den usa
mrl:answer(elevation_1(highest(place(loc_2(countryid('usa'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:362
nl:was ist die hoehe mount mckinleys
mrl:answer(elevation_1(placeid('mount mckinley')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ placeid ( *n:PlaceName ) })
*n:PlaceName -> ({ ' mount mckinley ' })

id:363
nl:wie lautet die hoehe des hoechsten berges in texas
mrl:answer(elevation_1(highest(mountain(loc_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ mountain ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:364
nl:was ist die hoehe des hoechsten punktes in der usa
mrl:answer(elevation_1(highest(place(loc_2(countryid('usa'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:365
nl:wie lautet der hoechste punkt in wyoming
mrl:answer(high_point_1(stateid('wyoming')))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ high_point_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' wyoming ' })

id:366
nl:welcher ist der hoechste punkt in new mexico
mrl:answer(highest(place(loc_2(stateid('new mexico')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new mexico ' })

id:367
nl:welches ist die hoechste erhoehung in south carolina
mrl:answer(highest(place(loc_2(stateid('south carolina')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' south carolina ' })

id:368
nl:was ist der hoechste punkt in texas
mrl:answer(highest(place(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:369
nl:wie lautet die hoechste erhebung in den vereinigten staaten
mrl:answer(highest(place(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:370
nl:welches ist der hoechste berg in alaska
mrl:answer(highest(mountain(loc_2(stateid('alaska')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ mountain ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:371
nl:welches ist der hoechste berg in texas
mrl:answer(highest(mountain(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ mountain ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:372
nl:welches ist der hoechste berg der vereinigten staaten
mrl:answer(highest(mountain(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ mountain ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:373
nl:welches ist der hoechste berg in den usa
mrl:answer(highest(mountain(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ mountain ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:374
nl:wie lautet der hoechste punkt in colorado
mrl:answer(highest(place(loc_2(stateid('colorado')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:375
nl:welches ist der hoechste punkt von delaware
mrl:answer(highest(place(loc_2(stateid('delaware')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' delaware ' })

id:376
nl:welches sind die hoechsten punkte der staaten dessen tiefster punkt auf meeresniveau liegt
mrl:answer(highest(place(loc_2(state(loc_1(place(elevation_2(0))))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ elevation_2 ( *n:Num ) })
*n:Num -> ({ 0 })

id:377
nl:welches ist der hoechste punkt in florida
mrl:answer(highest(place(loc_2(stateid('florida')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' florida ' })

id:378
nl:wie lautet der hoechste punkt in iowa
mrl:answer(highest(place(loc_2(stateid('iowa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' iowa ' })

id:379
nl:wie lautet der hoechste punkt in kansas
mrl:answer(highest(place(loc_2(stateid('kansas')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' kansas ' })

id:380
nl:welches ist der hoechstgelegene punkt in maine
mrl:answer(highest(place(loc_2(stateid('maine')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' maine ' })

id:381
nl:wie lautet der hoechste punkt in montana
mrl:answer(highest(place(loc_2(stateid('montana')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' montana ' })

id:382
nl:welches ist der hoechstgelegene punkt in nevada gemessen in metern
mrl:answer(highest(place(loc_2(stateid('nevada')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' nevada ' })

id:383
nl:was ist die hoechste hoehe in new mexico
mrl:answer(highest(place(loc_2(stateid('new mexico')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new mexico ' })

id:384
nl:was ist der hoechste punkt in ohio
mrl:answer(highest(place(loc_2(stateid('ohio')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' ohio ' })

id:385
nl:welches ist der hoechstgelegene punkt in rhode island
mrl:answer(highest(place(loc_2(stateid('rhode island')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' rhode island ' })

id:386
nl:welches ist der hoechste punkt der an georgia grenzenden staaten
mrl:answer(highest(place(loc_2(state(next_to_2(stateid('georgia')))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' georgia ' })

id:387
nl:welches ist die hoechste erhebung in texas
mrl:answer(highest(place(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:388
nl:wie lautet der hoechste punkt der usa
mrl:answer(highest(place(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:389
nl:was ist der hoechste punkt im kleinsten staat
mrl:answer(highest(place(loc_2(smallest(state(all))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:390
nl:wie lautet der hoechste punkt in dem staat mit der hauptstadt austin
mrl:answer(highest(place(loc_2(state(loc_1(capital(cityid('austin', _))))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' austin ' })

id:391
nl:welches ist der hoechste punkt im staate mit hauptstadt des moines
mrl:answer(highest(place(loc_2(state(loc_1(capital(cityid('des moines', _))))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' des moines ' })

id:392
nl:wie heisst der hoechste punkt in dem staat mit der hauptstadt des moines
mrl:answer(highest(place(loc_2(state(loc_1(capital(cityid('des moines', _))))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' des moines ' })

id:393
nl:was ist der hoechste punkt in dem staat mit den meisten fluessen
mrl:answer(highest(place(loc_2(most(state(traverse_1(river(all))))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( all ) })

id:394
nl:wie lautet der hoechste punkt in dem staat mit der kleinsten bevoelkerung
mrl:answer(highest(place(loc_2(smallest_one(population_1(state(all)))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ smallest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:395
nl:wie lautet der hoechste punkt in den staaten welche an colorado grenzen
mrl:answer(highest(place(loc_2(state(next_to_2(stateid('colorado')))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:396
nl:was ist der hoechste punkt in den vereinigten staaten
mrl:answer(highest(place(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:397
nl:wie lautet der hoechste punkt in dem land
mrl:answer(highest(place(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:398
nl:wie lautet der hoechste punkt in den usa
mrl:answer(highest(place(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:399
nl:welches ist der hoechstgelegene punkt in virginia
mrl:answer(highest(place(loc_2(stateid('virginia')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' virginia ' })

id:400
nl:welches ist der hoechstgelegene punkt von wyoming
mrl:answer(highest(place(loc_2(stateid('wyoming')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' wyoming ' })

id:401
nl:welches ist der hoechste punkt des bezueglich flaeche groessten staates
mrl:answer(highest(place(loc_2(largest_one(area_1(state(all)))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ largest_one ( area_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:402
nl:wie lautet der hoechste punkt des staat mit der gerinsten bevoelkerungsdichte
mrl:answer(highest(place(loc_2(smallest_one(density_1(state(all)))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:403
nl:wie lautet die hoechste erhebung der usa
mrl:answer(highest(place(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:404
nl:was ist die groesste hauptstadt
mrl:answer(largest(capital(all)))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ capital ( all ) })

id:405
nl:wie lautet die groesste hauptstadt in den usa
mrl:answer(largest(capital(city(loc_2(countryid('usa'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:406
nl:was ist die groesste stadt in einer staat die texas angrenzt
mrl:answer(largest(city(loc_2(state(next_to_2(stateid('texas')))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:407
nl:welcher ist der groesste stadt in alabama
mrl:answer(largest(city(loc_2(stateid('alabama')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alabama ' })

id:408
nl:wie lautet die groesste stadt in california
mrl:answer(largest(city(loc_2(stateid('california')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:409
nl:welches ist die groesste stadt in michigan
mrl:answer(largest(city(loc_2(stateid('michigan')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' michigan ' })

id:410
nl:welches ist die bevoelkerungsreichste stadt in minnesota
mrl:answer(largest_one(population_1(city(loc_2(stateid('minnesota'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' minnesota ' })

id:411
nl:wie lautet die groesste stadt in missouri
mrl:answer(largest(city(loc_2(stateid('missouri')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' missouri ' })

id:412
nl:welches ist die groesste stadt in rhode island
mrl:answer(largest(city(loc_2(stateid('rhode island')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' rhode island ' })

id:413
nl:welches ist die groesste stadt im kleinsten staat durch den der mississippi fliesst
mrl:answer(largest(city(loc_2(smallest(state(traverse_1(riverid('mississippi'))))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:414
nl:was ist die groesste stadt in staaten die california angrenzen
mrl:answer(largest(city(loc_2(state(next_to_2(stateid('california')))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:415
nl:welches ist die groesste stadt in texas
mrl:answer(largest(city(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:416
nl:welches ist die groesste stadt des kleinsten staates in den usa
mrl:answer(largest(city(loc_2(smallest(state(loc_2(countryid('usa'))))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:417
nl:wie lautet die groesste stadt in wisconsin
mrl:answer(largest(city(loc_2(stateid('wisconsin')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' wisconsin ' })

id:418
nl:wie lautet die groesste stadt in kansas
mrl:answer(largest(city(loc_2(stateid('kansas')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' kansas ' })

id:419
nl:welcher ist der groesste staat durch den der rio grande fliesst
mrl:answer(largest(state(traverse_1(riverid('rio grande')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' rio grande ' })

id:420
nl:nenne mir die laenge des laengsten flusses in washington state
mrl:answer(longest(river(loc_2(state(stateid('washington'))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' washington ' })

id:421
nl:nenne mir den groessten staat
mrl:answer(largest(state(all)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:422
nl:welches ist der groesste an arkansas grenzende staat
mrl:answer(largest(state(next_to_2(stateid('arkansas')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' arkansas ' })

id:423
nl:welches ist der groesste an texas grenzende staat
mrl:answer(largest(state(next_to_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:424
nl:welche hauptstadt hat die groesste bevoelkerung
mrl:answer(largest_one(population_1(capital_1(state(all)))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ capital_1 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:425
nl:wie lautet der groesste staat in den usa
mrl:answer(largest(state(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:426
nl:welcher ist der groesste staat in den usa
mrl:answer(largest(state(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:427
nl:wie lautet der groesste staat der an california grenzt
mrl:answer(largest(state(next_to_2(stateid('california')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:428
nl:welcher der an texas grenzenden staaten ist der groesste
mrl:answer(largest(state(next_to_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:429
nl:was is der groesste staat der den staat mit der groessten bevoelkerung
mrl:answer(largest(state(next_to_2(largest_one(population_1(state(all)))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:430
nl:wie lautet der groesste staat welcher an den staat grenzt welcher die niedrigste erhebung in den usa hat
mrl:answer(largest(state(next_to_2(state(loc_1(lowest(place(loc_2(countryid('usa'))))))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:431
nl:wie lautet der groesste staat durch welchen der mississippi fluss verlaeuft
mrl:answer(largest(state(traverse_1(river(riverid('mississippi'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:432
nl:welches ist der staat mit der niedrigsten bevoelkerungszahl
mrl:answer(smallest_one(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:433
nl:wie lang ist der fluss colorado
mrl:answer(len(river(riverid('colorado'))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' colorado ' })

id:434
nl:was ist die laenge des colorado flusses in texas
mrl:answer(len(intersection(riverid('colorado'), river(loc_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ intersection ( *n:River , *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' colorado ' })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:435
nl:wie lang ist der laengste fluss der usa
mrl:answer(len(longest(river(loc_2(countryid('usa'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:436
nl:wie lautet die laenge des lanegsten fluesses der durch texas verlaeuft
mrl:answer(len(longest(river(traverse_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:437
nl:wie lang ist der mississippi
mrl:answer(len(river(riverid('mississippi'))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:438
nl:wie lang ist der fluss welcher durch die misten staaten fliesst
mrl:answer(len(most(river(traverse_2(state(all))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ most ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:439
nl:wie lange ist der fluss welcher durch die groesste anzahl von staaten fliesst
mrl:answer(len(most(river(traverse_2(state(all))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ most ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:440
nl:was ist die laenge des flusses der durch die groessten anzahl staaten fliesst
mrl:answer(len(most(river(traverse_2(state(all))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ most ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:441
nl:wie lang ist der fluss welcher am meisten staaten durchquert
mrl:answer(len(most(river(traverse_2(state(all))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ most ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:442
nl:was ist der laengste fluss
mrl:answer(longest(river(all)))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( all ) })

id:443
nl:welches ist der laengste fluss new yorks
mrl:answer(longest(river(traverse_2(stateid('new york')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new york ' })

id:444
nl:welches ist der laengste fluss der vereinigten staaten
mrl:answer(longest(river(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:445
nl:was ist der laengste fluss in california
mrl:answer(longest(river(loc_2(stateid('california')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:446
nl:welches ist der laengste fluss in florida
mrl:answer(longest(river(loc_2(stateid('florida')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' florida ' })

id:447
nl:wie lautet der laengste fluss in mississippi
mrl:answer(longest(river(loc_2(stateid('mississippi')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' mississippi ' })

id:448
nl:welches ist der laengste fluss in new york
mrl:answer(longest(river(loc_2(stateid('new york')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new york ' })

id:449
nl:wie lautet der laengste fluss in pennsylvania
mrl:answer(longest(river(loc_2(stateid('pennsylvania')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' pennsylvania ' })

id:450
nl:was ist der laengste fluss in texas
mrl:answer(longest(river(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:451
nl:welches ist der laengste fluss im groessten staat
mrl:answer(longest(river(loc_2(largest(state(all))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:452
nl:was ist der laengste fluss in dem kleinsten staat in den usa
mrl:answer(longest(river(loc_2(smallest(state(loc_2(countryid('usa'))))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:453
nl:welches ist der laenste fluss im staate mit dem hoechstgelegenen punkt
mrl:answer(longest(river(loc_2(state(loc_1(highest(place(all))))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:454
nl:welches ist der laengste fluss im staat mit der groessten anzahl grosser staedte
mrl:answer(longest(river(loc_2(most(state(loc_1(major(city(all)))))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( all ) })

id:455
nl:wie lautet der laengste fluss in den staaten welcher an nebraska grenzt
mrl:answer(longest(river(loc_2(state(next_to_2(stateid('nebraska')))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' nebraska ' })

id:456
nl:welches ist der laengste fluss in amerika
mrl:answer(longest(river(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:457
nl:nenne den laengsten fluss in den usa
mrl:answer(longest(river(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:458
nl:wie lautet der laengste fluss der nicht durch texas verlaeuft
mrl:answer(longest(exclude(river(all), traverse_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ exclude ( *n:River , *n:River ) })
*n:River -> ({ river ( all ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:459
nl:wie lautet der laengste fluss welcher durch einen staat verlaeuft der an indiana grenzt
mrl:answer(longest(river(traverse_2(state(next_to_2(stateid('indiana')))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' indiana ' })

id:460
nl:wie lautet der laengste fluss der durch colorado verlaeuft
mrl:answer(longest(river(traverse_2(stateid('colorado')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:461
nl:wie lautet der laengste fluss der durch die staaten verlaeuft welche an den staat grenzen der die meisten nachbar-staaten hat
mrl:answer(longest(river(traverse_2(state(next_to_2(most(state(next_to_2(state(all))))))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:462
nl:welchest ist der laengste fluss der durch einen an tennessee grenzenden staat fliesst
mrl:answer(longest(river(traverse_2(state(next_to_2(stateid('tennessee')))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' tennessee ' })

id:463
nl:welches ist die niedrigste erhoehung in pennsylvania
mrl:answer(lowest(place(loc_2(stateid('pennsylvania')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' pennsylvania ' })

id:464
nl:welches ist der tiefstgelegene punkt in arkansas
mrl:answer(lowest(place(loc_2(stateid('arkansas')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' arkansas ' })

id:465
nl:welches ist der tiefstgelegene punkt in kalifornien
mrl:answer(lowest(place(loc_2(stateid('california')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:466
nl:welches ist der tiefstgelegene punkt in louisiana
mrl:answer(lowest(place(loc_2(stateid('louisiana')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' louisiana ' })

id:467
nl:wie lautet der niedrigste punkt in massachusetts
mrl:answer(lowest(place(loc_2(stateid('massachusetts')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' massachusetts ' })

id:468
nl:welches ist der tiefste punkt in mississippi
mrl:answer(lowest(place(loc_2(stateid('mississippi')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' mississippi ' })

id:469
nl:wie hoch ist die niedrigste erhebung von nebraska
mrl:answer(lowest(place(loc_2(stateid('nebraska')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' nebraska ' })

id:470
nl:was ist der niedrigste punkt in oregon
mrl:answer(lowest(place(loc_2(stateid('oregon')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' oregon ' })

id:471
nl:wie lautet der niedrigste punkt in texas
mrl:answer(lowest(place(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:472
nl:wie lautet der niedrigste punkt in dem staat california
mrl:answer(lowest(place(loc_2(state(stateid('california'))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:473
nl:welches ist der tiefstgelegene punkt von texas
mrl:answer(lowest(place(loc_2(state(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:474
nl:wie lautet der niedrigste punkt in den vereinigten staaten
mrl:answer(lowest(place(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:475
nl:wie lautet der niedrigste punkt in den usa
mrl:answer(lowest(place(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:476
nl:welches ist der tiefstgelegene punkt in wisconsin
mrl:answer(lowest(place(loc_2(stateid('wisconsin')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' wisconsin ' })

id:477
nl:welches ist der tiefste punkt aller staaten durch die der fluss colorado fliesst
mrl:answer(lowest(place(loc_2(state(traverse_1(river(riverid('colorado'))))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' colorado ' })

id:478
nl:welches ist der tiefstgelegene punkt in colorado
mrl:answer(lowest(place(loc_2(stateid('colorado')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:479
nl:was ist die tiefste stelle des staates mit der groesste flaeche
mrl:answer(lowest(place(loc_2(largest_one(area_1(state(all)))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ largest_one ( area_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:480
nl:welches ist der tiefstgelegene punkt der usa
mrl:answer(lowest(place(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:481
nl:was sind die groessere staedte in montana
mrl:answer(major(city(loc_2(stateid('montana')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' montana ' })

id:482
nl:welches ist die maximale erhoehung von san francisco
mrl:answer(highest(place(loc_2(cityid('san francisco', _)))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' san francisco ' })

id:483
nl:welches ist der dichteste staat in den usa
mrl:answer(largest_one(density_1(state(loc_2(countryid('usa'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:484
nl:welche ist die meist bevoelkerte stadt in den usa
mrl:answer(largest_one(population_1(capital(loc_2(countryid('usa'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:485
nl:welches ist der bevoelkerungsreichste staat der an oklahoma grenzt
mrl:answer(largest_one(population_1(state(next_to_2(stateid('oklahoma'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' oklahoma ' })

id:486
nl:wie lautet die stadt mit der groessten bevoelkerung
mrl:answer(largest_one(population_1(city(all))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( all ) })

id:487
nl:welche texanische stadt hat die groesste bevoelkerungszahl
mrl:answer(largest_one(population_1(city(loc_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:488
nl:was ist die meist bevoelkerte stadt in wyoming
mrl:answer(largest_one(population_1(city(loc_2(stateid('wyoming'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' wyoming ' })

id:489
nl:welcher staat hat die groesse bevoelkerung
mrl:answer(largest_one(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:490
nl:welcher ist der meist bevoelkerte staat in den usa
mrl:answer(largest_one(population_1(state(loc_2(countryid('usa'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:491
nl:welcher staat durch den der mississippi fliesst hat die groesste bevoelkerung
mrl:answer(largest_one(population_1(state(traverse_1(riverid('mississippi'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:492
nl:wie lautet der name des staates mit der geringsten erhebung
mrl:answer(state(loc_1(lowest(place(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:493
nl:wie viele staaten grenzen an kentucky
mrl:answer(count(state(next_to_2(stateid('kentucky')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' kentucky ' })

id:494
nl:was ist die bevoelkerungsdichte in dem staat mit hauptstadt austin
mrl:answer(density_1(state(loc_1(capital(cityid('austin', _))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' austin ' })

id:495
nl:welches ist die bevoelkerungsdichte von maine
mrl:answer(density_1(stateid('maine')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' maine ' })

id:496
nl:was ist die bevoelkerungsdichte von south dakota
mrl:answer(density_1(stateid('south dakota')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' south dakota ' })

id:497
nl:wie lautet die bevoelkerungsdichte von texas
mrl:answer(density_1(stateid('texas')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:498
nl:welches ist die bevoelkerungsdichte des groessten staates
mrl:answer(density_1(largest(state(all))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:499
nl:wie gross ist die bevoelkerungsdichte des kleinsten staates
mrl:answer(density_1(smallest(state(all))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:500
nl:was ist die bevoelkerungsdichte des staates mit der kleinsten groesse
mrl:answer(density_1(smallest_one(area_1(state(all)))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:State ) })
*n:State -> ({ smallest_one ( area_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:501
nl:wie hoch die bevoelkerungsdichte des staat mit der kleinsten bevoelkerung
mrl:answer(density_1(smallest_one(population_1(state(all)))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:State ) })
*n:State -> ({ smallest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:502
nl:was ist die bevoelkerungsdichte wyomings ?
mrl:answer(density_1(stateid('wyoming')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' wyoming ' })

id:503
nl:wie gross ist die bevoelkerung von boston
mrl:answer(population_1(cityid('boston', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' boston ' })

id:504
nl:welches ist die bevoelkerungszahl von alaska
mrl:answer(population_1(stateid('alaska')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:505
nl:wie gross ist die bevoelkerung von arizona
mrl:answer(population_1(stateid('arizona')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' arizona ' })

id:506
nl:wie gross ist die bevoelkerung von atlanta
mrl:answer(population_1(cityid('atlanta', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' atlanta ' })

id:507
nl:wieviele einwohner hat atlanta ga
mrl:answer(population_1(cityid('atlanta', 'ga')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })
*n:CityName -> ({ ' atlanta ' })
*n:StateAbbrev -> ({ ' ga ' })

id:508
nl:welches ist die einwohnerzahl von austin
mrl:answer(population_1(cityid('austin', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' austin ' })

id:509
nl:wie gross ist die bevoelkerung von austin texas
mrl:answer(population_1(cityid('austin', 'tx')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })
*n:CityName -> ({ ' austin ' })
*n:StateAbbrev -> ({ ' tx ' })

id:510
nl:was ist die bevoelkerung von boston massachusetts
mrl:answer(population_1(cityid('boston', 'ma')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })
*n:CityName -> ({ ' boston ' })
*n:StateAbbrev -> ({ ' ma ' })

id:511
nl:wie hoch ist die bevoelkerung von boulder
mrl:answer(population_1(cityid('boulder', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' boulder ' })

id:512
nl:wie viele leute leben in kalifornien
mrl:answer(population_1(stateid('california')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:513
nl:wie viele einwohner hat dallas
mrl:answer(population_1(cityid('dallas', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' dallas ' })

id:514
nl:welches ist die bevoelkerungszahl von denver
mrl:answer(population_1(cityid('denver', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' denver ' })

id:515
nl:wie gross ist die bevoelkerung von erie in pennsylvania
mrl:answer(population_1(cityid('erie', 'pa')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })
*n:CityName -> ({ ' erie ' })
*n:StateAbbrev -> ({ ' pa ' })

id:516
nl:wieviel menschen laeben in hawaii
mrl:answer(population_1(stateid('hawaii')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' hawaii ' })

id:517
nl:wie hoch ist die bevoelkerung von houston
mrl:answer(population_1(cityid('houston', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' houston ' })

id:518
nl:wie viele einwohner hat idaho
mrl:answer(population_1(stateid('idaho')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' idaho ' })

id:519
nl:wie gross ist die bevoelkerungszahl von illinois
mrl:answer(population_1(stateid('illinois')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' illinois ' })

id:520
nl:was ist die bevoelkerung von maine
mrl:answer(population_1(stateid('maine')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' maine ' })

id:521
nl:wie gross ist die bevoelkerung von maryland
mrl:answer(population_1(stateid('maryland')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' maryland ' })

id:522
nl:wie gross ist die bevoelkerung von minnesota
mrl:answer(population_1(stateid('minnesota')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' minnesota ' })

id:523
nl:wie gross ist die bevoelkerung von montana
mrl:answer(population_1(stateid('montana')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' montana ' })

id:524
nl:vie viele leute wohnen in new mexico
mrl:answer(population_1(stateid('new mexico')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new mexico ' })

id:525
nl:wie viele leute leben in new york
mrl:answer(population_1(stateid('new york')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new york ' })

id:526
nl:wie gross ist die bevoelkerung von new york city
mrl:answer(population_1(city(cityid('new york', _))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' new york ' })

id:527
nl:wie viele einwohner hat oregon
mrl:answer(population_1(stateid('oregon')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' oregon ' })

id:528
nl:was ist die bevoelkerung von portland maine
mrl:answer(population_1(cityid('portland', 'me')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })
*n:CityName -> ({ ' portland ' })
*n:StateAbbrev -> ({ ' me ' })

id:529
nl:wie gross ist die bevoelkerung von rhode island
mrl:answer(population_1(stateid('rhode island')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' rhode island ' })

id:530
nl:wie gross is die bevoelkerungszahl von sacramento
mrl:answer(population_1(cityid('sacramento', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' sacramento ' })

id:531
nl:wie lautet die bevoelkerung von san antonio
mrl:answer(population_1(cityid('san antonio', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' san antonio ' })

id:532
nl:wie lautet die bevoelkerung von seattle
mrl:answer(population_1(cityid('seattle', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' seattle ' })

id:533
nl:wie gross ist die bevoelkerung von seattle in washington
mrl:answer(population_1(cityid('seattle', 'wa')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })
*n:CityName -> ({ ' seattle ' })
*n:StateAbbrev -> ({ ' wa ' })

id:534
nl:wie gross ist die bevoelkerung in south dakota
mrl:answer(population_1(stateid('south dakota')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' south dakota ' })

id:535
nl:wie gross ist die einwohnerzahl von springfield missouri
mrl:answer(population_1(cityid('springfield', 'mo')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })
*n:CityName -> ({ ' springfield ' })
*n:StateAbbrev -> ({ ' mo ' })

id:536
nl:wie gross ist die bevoelkerung von springfield in south dakota
mrl:answer(population_1(cityid('springfield', 'sd')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })
*n:CityName -> ({ ' springfield ' })
*n:StateAbbrev -> ({ ' sd ' })

id:537
nl:welches ist die bevoelkerungszahl von tempe arizona
mrl:answer(population_1(cityid('tempe', 'az')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })
*n:CityName -> ({ ' tempe ' })
*n:StateAbbrev -> ({ ' az ' })

id:538
nl:wie gross ist die bevoelkerung von texas
mrl:answer(population_1(stateid('texas')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:539
nl:was ist die bevoelkerung der hauptstadt des groessten staates
mrl:answer(population_1(capital(loc_2(largest(state(all))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:540
nl:was ist die bevoelkerung der hauptstadt des groessten staates durch den der mississippi fliesst
mrl:answer(population_1(capital(loc_2(largest(state(traverse_1(riverid('mississippi'))))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:541
nl:welches ist die einwohnerzahl der hauptstadt des kleinsten staates
mrl:answer(population_1(capital(loc_2(smallest(state(all))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:542
nl:was ist die bevoelkerungszahl der groessten stadt des staates mit der groessten flaechenausdehnung
mrl:answer(population_1(largest(city(loc_2(largest_one(area_1(state(all))))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ largest_one ( area_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:543
nl:wie gross ist die bevoelkerung in dem groessten staat
mrl:answer(population_1(largest(state(all))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:544
nl:was ist die bevoelkerung des groessten staates der texas angrenzt
mrl:answer(population_1(largest(state(next_to_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:545
nl:was ist die bevoelkerung der groesseren staedte in wisconsin
mrl:answer(population_1(major(city(loc_2(stateid('wisconsin'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' wisconsin ' })

id:546
nl:welches ist die einwohnerzahl des kleinsten staates
mrl:answer(smallest(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ smallest ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:547
nl:wie lautet die bevoelkerung des staat welche an die meisten staaten grenzt
mrl:answer(population_1(most(state(next_to_2(state(all))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:548
nl:wie viele leute wohnen in den staat mit der groessten bevoelkerungsdichte
mrl:answer(population_1(largest_one(density_1(state(all)))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ largest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:549
nl:was ist die bevoelkerung des staates mit der groessten flaeche
mrl:answer(population_1(largest_one(area_1(state(all)))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ largest_one ( area_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:550
nl:was ist die einwohnerzahl von tucson
mrl:answer(population_1(cityid('tucson', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' tucson ' })

id:551
nl:wie viele einwohner hat utah
mrl:answer(population_1(stateid('utah')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' utah ' })

id:552
nl:wie viele leute wohnen in washington
mrl:answer(population_1(stateid('washington')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' washington ' })

id:553
nl:wie viele einwohner leben in washington dc
mrl:answer(population_1(cityid('washington', 'dc')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })
*n:CityName -> ({ ' washington ' })
*n:StateAbbrev -> ({ ' dc ' })

id:554
nl:welcher fluss fliesst durch ohio
mrl:answer(river(traverse_2(stateid('ohio'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' ohio ' })

id:555
nl:welches ist der kuerzeste fluss
mrl:answer(shortest(river(all)))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ shortest ( *n:River ) })
*n:River -> ({ river ( all ) })

id:556
nl:was ist der kuerzester fluss in alaska
mrl:answer(shortest(river(loc_2(stateid('alaska')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ shortest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:557
nl:was ist der kuerzeste fluss in iowa
mrl:answer(shortest(river(loc_2(stateid('iowa')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ shortest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' iowa ' })

id:558
nl:wie lautet der kuerzeste fluss in nebraska
mrl:answer(shortest(river(loc_2(stateid('nebraska')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ shortest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' nebraska ' })

id:559
nl:wie lautet der kuerzeste fluss in texas
mrl:answer(shortest(river(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ shortest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:560
nl:welches ist der kuerzeste fluss der vereinigten staaten
mrl:answer(shortest(river(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ shortest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:561
nl:welches ist der kuerzeste fluss in den usa
mrl:answer(shortest(river(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ shortest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:562
nl:was ist der kuerzeste fluss in den usa
mrl:answer(shortest(river(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ shortest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:563
nl:wie gross ist kalifornien
mrl:answer(size(stateid('california')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ size ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:564
nl:wie gross ist florida
mrl:answer(size(stateid('florida')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ size ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' florida ' })

id:565
nl:welche flaeche hat texas
mrl:answer(size(stateid('texas')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ size ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:566
nl:was ist die groesse der hauptstadt texas
mrl:answer(size(capital(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ size ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:567
nl:wie lautet die flaeche des groessten staates in den usa
mrl:answer(size(largest(state(loc_2(countryid('usa'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ size ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:568
nl:was ist die kleinste stadt in alaska
mrl:answer(smallest(city(loc_2(stateid('alaska')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ smallest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:569
nl:welches ist die kleinste stadt in arkansas
mrl:answer(smallest(city(loc_2(stateid('arkansas')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ smallest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' arkansas ' })

id:570
nl:welches ist die kleinste stadt in hawaii
mrl:answer(smallest(city(loc_2(stateid('hawaii')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ smallest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' hawaii ' })

id:571
nl:wie lautet die kleinste stadt in dem groessten staat
mrl:answer(smallest(city(loc_2(largest(state(all))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ smallest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:572
nl:welches ist die kleinste stadt der usa
mrl:answer(smallest(city(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ smallest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:573
nl:wie lautet die kleinste stadt in den us
mrl:answer(smallest(city(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ smallest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:574
nl:was ist die kleinste stadt in washington
mrl:answer(smallest(city(loc_2(stateid('washington')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ smallest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' washington ' })

id:575
nl:wie lautet die kleinste stadt des kleinsten staates in den usa
mrl:answer(smallest(city(loc_2(smallest(state(loc_2(countryid('usa'))))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ smallest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:576
nl:wie lautet der kleinste staat welcher an ohio grenzt
mrl:answer(smallest(state(next_to_2(stateid('ohio')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' ohio ' })

id:577
nl:wie lautet der kleinste staat welcher an wyoming grenzt
mrl:answer(smallest(state(next_to_2(stateid('wyoming')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' wyoming ' })

id:578
nl:welcher staat hat die kleinste flaechenausdehnung
mrl:answer(smallest_one(area_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( area_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:579
nl:welches ist der kleinste staat der usa
mrl:answer(smallest(state(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:580
nl:welches ist der kleinste an texas angrenzende staat
mrl:answer(smallest(state(next_to_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:581
nl:welches ist der kleinste staat der am meisten staaten angrenzt
mrl:answer(smallest(most(state(next_to_2(state(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:582
nl:welches ist der kleinste staat durch den der mississippi fliesst
mrl:answer(smallest(state(traverse_1(river(riverid('mississippi'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:583
nl:welches ist der kleinste unter den staaten durch die der laengste fluss laeuft
mrl:answer(smallest(state(traverse_1(longest(river(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( all ) })

id:584
nl:welcher staat hat die hoechste erhebung
mrl:answer(state(loc_1(highest(place(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:585
nl:in welchem staat liegt die hoechste erhebung in den vereinigten staaten
mrl:answer(state(loc_1(highest(place(loc_2(countryid('usa')))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:586
nl:welcher staat hat die groesste flaechenausdehnung
mrl:answer(largest_one(area_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( area_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:587
nl:welcher staat hat die hoechste dichte in den usa
mrl:answer(largest_one(density_1(state(loc_2(countryid('usa'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:588
nl:welcher staat hat die groesste bevoelkerungsdichte
mrl:answer(largest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:589
nl:welcher staat hat die niedrigste erhebung
mrl:answer(state(loc_1(lowest(place(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:590
nl:welcher staat hat die kleinste bevoelkerung
mrl:answer(smallest_one(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:591
nl:welche staaten haben die niedrigste  bevoelkerungsdichte
mrl:answer(smallest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:592
nl:welcher ist der kleinste staat nach flaeche
mrl:answer(smallest_one(area_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( area_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:593
nl:welches ist der hoechste berg in amerika
mrl:answer(highest(mountain(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ mountain ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:594
nl:welches ist der hoechste berg in den usa
mrl:answer(highest(mountain(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ mountain ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:595
nl:welche flaeche hat die usa
mrl:answer(area_1(countryid('usa')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:596
nl:welches ist die gesamtlaenge aller flÃ¼sse in den usa
mrl:answer(sum(len(river(all))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ sum ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ river ( all ) })

id:597
nl:welches ist die summe der bevoelkerungszahlen der an texas grenzenden staaten
mrl:answer(sum(population_1(state(next_to_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ sum ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:598
nl:wie lang ist der mississippi
mrl:answer(len(riverid('mississippi')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:599
nl:welche grossen staedte gibt es in pennsylvania
mrl:answer(major(city(loc_2(stateid('pennsylvania')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' pennsylvania ' })

id:600
nl:welche grossen fluesse fliessen durch illinois
mrl:answer(major(river(traverse_2(stateid('illinois')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ major ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' illinois ' })

id:601
nl:welche berge gibt es in alaska
mrl:answer(mountain(loc_2(stateid('alaska'))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ mountain ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:602
nl:welcher fluss fliesst durch kansas
mrl:answer(river(traverse_2(stateid('kansas'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' kansas ' })

id:603
nl:welches flÃ¼sse gibt es in texas
mrl:answer(river(traverse_2(stateid('texas'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:604
nl:welcher fluss fliesst durch die groesste anzahl an staaten
mrl:answer(most(river(traverse_2(state(all)))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ most ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:605
nl:welcher fluss ist der laengste in den vereinigten staaten
mrl:answer(longest(river(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:606
nl:welcher fluss durchfliesst illinois
mrl:answer(river(traverse_2(stateid('illinois'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' illinois ' })

id:607
nl:welcher fluss verlaeuft durch die meisten staaten
mrl:answer(most(river(traverse_2(state(all)))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ most ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:608
nl:welcher fluss fliesst durch den staat mit den meisten staedten
mrl:answer(river(traverse_2(most(state(loc_1(city(all)))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( all ) })

id:609
nl:welcher fluss fliesst durch virginia
mrl:answer(river(traverse_2(stateid('virginia'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' virginia ' })

id:610
nl:welcher fluss durchquert am meisten staaten
mrl:answer(most(river(traverse_2(state(all)))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ most ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:611
nl:welcher fluss verlaeuft durch den staat welcher an die meisten staaten grenzt
mrl:answer(river(traverse_2(most(state(next_to_2(state(all)))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:612
nl:welche fluesse gibt es in nevada
mrl:answer(river(loc_2(stateid('nevada'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' nevada ' })

id:613
nl:welche fluesse gibt es in new mexico
mrl:answer(river(loc_2(stateid('new mexico'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new mexico ' })

id:614
nl:welche fleusse gibt es in oregon
mrl:answer(river(loc_2(stateid('oregon'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' oregon ' })

id:615
nl:welche flÃ¼sse gibt es in an texas grenzende staaten
mrl:answer(river(loc_2(state(next_to_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:616
nl:welche fluesse verlaufen durch texas
mrl:answer(river(loc_2(stateid('texas'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:617
nl:welche fluesse gibt es in utah
mrl:answer(river(loc_2(stateid('utah'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' utah ' })

id:618
nl:welche fluesse fluesse gibt es in texas
mrl:answer(river(loc_2(stateid('texas'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:619
nl:welche fluesse fliessen nicht durch tennessee
mrl:answer(exclude(river(all), traverse_2(stateid('tennessee'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ exclude ( *n:River , *n:River ) })
*n:River -> ({ river ( all ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' tennessee ' })

id:620
nl:nenne alle fluesse in colorado
mrl:answer(river(traverse_2(stateid('colorado'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:621
nl:welche fluesse verlaufen durch missouri
mrl:answer(river(traverse_2(stateid('missouri'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' missouri ' })

id:622
nl:welche fluesse verlaufen durch staaten welche an alabama grenzen
mrl:answer(river(traverse_2(state(next_to_1(stateid('alabama'))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alabama ' })

id:623
nl:bevoelkerung angrenzen
mrl:answer(river(traverse_2(state(next_to_2(largest_one(population_1(state(all))))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:624
nl:welche fluesse verlauften durch den groessten staat
mrl:answer(river(traverse_2(largest(state(all)))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:625
nl:welche fluesse fliessen durch den bevoelkerungsreichsten staat
mrl:answer(river(traverse_2(largest_one(population_1(state(all))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:626
nl:welche fluesse fliessen durch arizona
mrl:answer(river(traverse_2(stateid('arizona'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' arizona ' })

id:627
nl:welche fluesse fliessen durch austin texas
mrl:answer(river(traverse_2(cityid('austin', 'tx'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })
*n:CityName -> ({ ' austin ' })
*n:StateAbbrev -> ({ ' tx ' })

id:628
nl:welche fluesse verlaufen durch colorado
mrl:answer(river(traverse_2(stateid('colorado'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:629
nl:welche fluesse fliessen durch louisiana
mrl:answer(river(traverse_2(stateid('louisiana'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' louisiana ' })

id:630
nl:welche fluesse verlaufen durch maine
mrl:answer(river(traverse_2(stateid('maine'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' maine ' })

id:631
nl:flÃ¼sse in new york
mrl:answer(river(traverse_2(stateid('new york'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new york ' })

id:632
nl:welche fluesse verlaufen durch den staat mit dem niedrigsten punkt in den usa
mrl:answer(river(traverse_2(state(loc_1(lowest(place(loc_2(countryid('usa')))))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:633
nl:welche fluesse verlaufen duch die staaten welche an den staat mit der hauptstadt atlanta grenzen
mrl:answer(river(traverse_2(state(next_to_2(state(loc_1(capital(cityid('atlanta', _)))))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' atlanta ' })

id:634
nl:welche fluesse fliessen durch west virginia
mrl:answer(river(traverse_2(stateid('west virginia'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' west virginia ' })

id:635
nl:welcher fluss verlauft durch den staat welcher an die meisten staaten grenzt
mrl:answer(river(traverse_2(most(state(next_to_2(state(all)))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:636
nl:welcher an nevada grenzende staat hat die groesste bevoelkerungszahl
mrl:answer(largest_one(population_1(state(next_to_2(stateid('nevada'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' nevada ' })

id:637
nl:welche staedte grenzen an michigan
mrl:answer(state(next_to_2(stateid('michigan'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' michigan ' })

id:638
nl:welcher staat hat die meisten nachbarstaaten
mrl:answer(most(state(next_to_2(state(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:639
nl:welche staaten grenzen an new york
mrl:answer(state(next_to_2(stateid('new york'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new york ' })

id:640
nl:welcher staat grenzt an die wenigsten staaten an
mrl:answer(fewest(state(next_to_2(state(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ fewest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:641
nl:welcher staat grezt an die wenigsten staaten exclusiv alaska und exclusiv hawaii an
mrl:answer(fewest(state(next_to_2(exclude(exclude(state(all), stateid('alaska')), stateid('hawaii'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ fewest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ exclude ( *n:State , *n:State ) })
*n:State -> ({ exclude ( *n:State , *n:State ) })
*n:State -> ({ state ( all ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' hawaii ' })

id:642
nl:welcher staat grenzt an die meisten staaten
mrl:answer(most(state(next_to_2(state(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:643
nl:welcher staat grenzt an den staat mit der kleinsten bevoelkerung
mrl:answer(state(next_to_2(smallest_one(population_1(state(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ smallest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:644
nl:in welchem staat liegt der hoechste punkt der usa
mrl:answer(state(loc_1(highest(place(loc_2(countryid('usa')))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:645
nl:welcher der staaten durch die der colorado fliesst hat die hoechste erhebung
mrl:answer(state(loc_1(highest(place(loc_2(state(traverse_1(river(riverid('colorado'))))))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' colorado ' })

id:646
nl:welcher staat hat die hoechste erhebung
mrl:answer(state(loc_1(highest(place(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:647
nl:welcher staat hat keine fluesse
mrl:answer(exclude(state(all), loc_1(river(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ exclude ( *n:State , *n:State ) })
*n:State -> ({ state ( all ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ river ( all ) })

id:648
nl:welcher staat hat die hauptstadt salem
mrl:answer(state(loc_1(capital(cityid('salem', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' salem ' })

id:649
nl:in welchem staat liegt die stadt flint
mrl:answer(state(loc_1(city(cityid('flint', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' flint ' })

id:650
nl:in welchem staat befindet sich die bevoelkerungsreichste stadt
mrl:answer(state(loc_1(largest_one(population_1(city(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( all ) })

id:651
nl:welcher staat hat die stadt mit der groessten bevoelkerung
mrl:answer(state(loc_1(largest_one(population_1(city(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( all ) })

id:652
nl:welcher staat hat die groesste bevoelkerungsidchte
mrl:answer(largest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:653
nl:welcher staat hat die hoechste erhebung
mrl:answer(state(loc_1(highest(place(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:654
nl:welcher staat hat die groesste bevoelkerung
mrl:answer(largest_one(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:655
nl:welcher staat hat die groesste dichte
mrl:answer(largest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:656
nl:welches ist der staat mit der groessten flaeche
mrl:answer(largest_one(area_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( area_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:657
nl:welcher staat hat die groesste hauptstadt
mrl:answer(state(loc_1(largest(capital(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ capital ( all ) })

id:658
nl:welcher staat hat die groesste stadt
mrl:answer(state(loc_1(largest(city(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( all ) })

id:659
nl:welcher staat hat die groesste bevoelkerung
mrl:answer(largest_one(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:660
nl:wie lautet der staat mit der groessten bevoelkerungsdichte
mrl:answer(largest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:661
nl:welcher staat hat am meisten einwohner
mrl:answer(largest_one(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:662
nl:welcher staat hat die niedrigste bevoelkerungsdichte
mrl:answer(smallest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:663
nl:welches sind die staaten welche vom laengsten fluss durchflossen werden
mrl:answer(state(loc_1(longest(river(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( all ) })

id:664
nl:welcher staat hat die kleinste durchschnittliche urbane bevoelkerungzahl
mrl:answer(smallest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:665
nl:welcher staat hat die meisten staedte
mrl:answer(most(state(loc_1(city(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( all ) })

id:666
nl:welcher staat hat die meisten wichtigsten staedte
mrl:answer(most(state(loc_1(major(city(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( all ) })

id:667
nl:welcher staat hat die meisten fluesse
mrl:answer(most(state(traverse_1(major(river(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ major ( *n:River ) })
*n:River -> ({ river ( all ) })

id:668
nl:welches ist der bevoelkerungsreichste staat
mrl:answer(largest_one(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:669
nl:welcher staat hat die meisten fluesse
mrl:answer(most(state(loc_1(river(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ river ( all ) })

id:670
nl:welcher staat hat die meisten fluesse
mrl:answer(most(state(traverse_1(river(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( all ) })

id:671
nl:durch welche staaten fliesst der kuerzeste fluss
mrl:answer(state(loc_1(shortest(river(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ shortest ( *n:River ) })
*n:River -> ({ river ( all ) })

id:672
nl:welches ist der staat mit der geringsten flaechenausdehnung
mrl:answer(smallest_one(area_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( area_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:673
nl:welcher staat hat die kleinste hauptstadt
mrl:answer(state(loc_1(smallest(capital(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ smallest ( *n:City ) })
*n:City -> ({ capital ( all ) })

id:674
nl:welcher staat hat die kleinste anzahl urbaner einwohner
mrl:answer(smallest_one(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:675
nl:welcher staat hat die kleinste bevoelkerungsdichte
mrl:answer(smallest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:676
nl:welches ist der bevoelkerungsaermste staat
mrl:answer(smallest_one(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:677
nl:welcher staat hat die niedrigsten bevoelkerungsdichte
mrl:answer(smallest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:678
nl:welcher staat liegt in austin
mrl:answer(state(loc_1(cityid('austin', _))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' austin ' })

id:679
nl:von welchem staat ist austin die hauptstadt
mrl:answer(state(loc_1(capital(cityid('austin', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' austin ' })

id:680
nl:in welchem staat ist boston
mrl:answer(state(loc_1(cityid('boston', _))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' boston ' })

id:681
nl:welcher staat hat columbus als hauptstadt
mrl:answer(state(loc_1(capital(cityid('columbus', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' columbus ' })

id:682
nl:in welchem staat liegt dallas
mrl:answer(state(loc_1(cityid('dallas', _))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' dallas ' })

id:683
nl:in welchem staat ist des moines
mrl:answer(state(loc_1(cityid('des moines', _))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' des moines ' })

id:684
nl:in welchem staat liegt miami
mrl:answer(state(loc_1(cityid('miami', _))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' miami ' })

id:685
nl:in welcher staat ist pittsburgh
mrl:answer(state(loc_1(cityid('pittsburgh', _))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' pittsburgh ' })

id:686
nl:welcher ist der grosste staat
mrl:answer(largest(state(all)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:687
nl:welcher staat hat die groesste bevoelkerung in den staedten
mrl:answer(largest_one(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:688
nl:welcher staat hat die meisten fluesse
mrl:answer(state(most(state(loc_1(river(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ river ( all ) })

id:689
nl:welcher staat der an texas grenzt hat die groesste bevoelkerung
mrl:answer(largest_one(population_1(state(next_to_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:690
nl:welches ist der groesste an texas grenzende staat
mrl:answer(largest(state(next_to_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:691
nl:wie lautet der meistbevoelkerte staat durch welchen der mississippi fluss verlaeuft
mrl:answer(largest_one(population_1(state(traverse_1(riverid('mississippi'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:692
nl:welche staaten sind neben arizona
mrl:answer(state(next_to_2(stateid('arizona'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' arizona ' })

id:693
nl:welche staaten grenzen an texas
mrl:answer(state(next_to_2(stateid('texas'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:694
nl:welche staaten grenzen an mississippi
mrl:answer(state(next_to_2(stateid('mississippi'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' mississippi ' })

id:695
nl:welche staaten grenzen an alaska
mrl:answer(state(next_to_2(stateid('alaska'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:696
nl:welche staaten grenzen an arkansas
mrl:answer(state(next_to_2(stateid('arkansas'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' arkansas ' })

id:697
nl:welche staaten grenzen an delaware
mrl:answer(state(next_to_2(stateid('delaware'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' delaware ' })

id:698
nl:welche staaten grenzen an florida
mrl:answer(state(next_to_2(stateid('florida'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' florida ' })

id:699
nl:welche staaten grenzen an georgia
mrl:answer(state(next_to_2(stateid('georgia'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' georgia ' })

id:700
nl:welcher staat grenzt hawaii
mrl:answer(state(next_to_2(stateid('hawaii'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' hawaii ' })

id:701
nl:welche staaten grenzen an indiana
mrl:answer(state(next_to_2(stateid('indiana'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' indiana ' })

id:702
nl:welche staaten grenzen an kentucky
mrl:answer(state(next_to_2(stateid('kentucky'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' kentucky ' })

id:703
nl:welche staaten grenzen an michigan
mrl:answer(state(next_to_2(stateid('michigan'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' michigan ' })

id:704
nl:welche staaten grenzen an missouri
mrl:answer(state(next_to_2(stateid('missouri'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' missouri ' })

id:705
nl:wie viele staaten grenzen an montana
mrl:answer(state(next_to_2(stateid('montana'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' montana ' })

id:706
nl:welche staaten grenzen an new hampshire
mrl:answer(state(next_to_2(stateid('new hampshire'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new hampshire ' })

id:707
nl:welche staaten grenzen an new jersey
mrl:answer(state(next_to_2(stateid('new jersey'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new jersey ' })

id:708
nl:welche staaten grenzen an ohio an
mrl:answer(state(next_to_2(stateid('ohio'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' ohio ' })

id:709
nl:welche staaten grenzen an rhode island
mrl:answer(state(next_to_2(stateid('rhode island'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' rhode island ' })

id:710
nl:welche staaten grenzen an colorado grenzende staaten
mrl:answer(state(next_to_2(state(next_to_2(stateid('colorado'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:711
nl:welche staaten grenzen an staaten welche an mississippi grenzen
mrl:answer(state(next_to_2(state(next_to_2(stateid('mississippi'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' mississippi ' })

id:712
nl:welche staaten grenzen an staaten an die an staaten angrenzen die florida angrenzen
mrl:answer(state(next_to_2(state(next_to_2(state(next_to_2(stateid('florida'))))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' florida ' })

id:713
nl:welche staaten grenzen an staaten welche an staaten grenzen welche staaten grenzen die an texas grenzen
mrl:answer(state(next_to_2(state(next_to_2(state(next_to_2(state(next_to_2(stateid('texas'))))))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:714
nl:welche staaten grenzen an staaten welche an den staat mit der groessten bevoelkerung grenzen
mrl:answer(state(next_to_2(state(next_to_2(largest_one(population_1(state(all))))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:715
nl:welche staaten grenzen an staaten durch denen die mississippi fliesst
mrl:answer(state(next_to_2(state(traverse_1(riverid('mississippi'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:716
nl:welche staaten grenzen staaten durch welche der ohio fluss verlaeuft
mrl:answer(state(next_to_2(state(traverse_1(riverid('ohio'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' ohio ' })

id:717
nl:welche staaten grenzen an staaten an durch denen der mississippi fliesst
mrl:answer(state(next_to_2(state(traverse_1(riverid('mississippi'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:718
nl:welche staaten grenzen an texas an
mrl:answer(state(next_to_2(stateid('texas'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:719
nl:welche staaten grenzen texas und haben einen wichtigen fluss
mrl:answer(intersection(state(next_to_2(stateid('texas'))), loc_1(major(river(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ intersection ( *n:State , *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ major ( *n:River ) })
*n:River -> ({ river ( all ) })

id:720
nl:welche staaten grenzen an den mississippi fluss an
mrl:answer(state(next_to_2(river(riverid('mississippi')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:721
nl:welche staaten grenzen an den bevoelkerungsreichsten staat
mrl:answer(state(next_to_2(largest_one(population_1(state(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:722
nl:welcher staat grenzt dem staat welche an die meisten staaten grenzt
mrl:answer(state(next_to_2(most(state(next_to_2(state(all)))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:723
nl:welche staaten grenzen dem staat mit den meisten staedten
mrl:answer(state(next_to_2(most(state(loc_1(city(all)))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( all ) })

id:724
nl:welche staaten grenzen dem staat mit den meisten wichtigsten staedten
mrl:answer(state(next_to_2(most(state(loc_1(major(city(all))))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( all ) })

id:725
nl:welcher staat grenzt an den staat mit der kleinsten flaeche
mrl:answer(state(next_to_2(smallest_one(area_1(state(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ smallest_one ( area_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:726
nl:welche staaten grenzen an die staaten mit den meisten staedten an
mrl:answer(state(next_to_2(most(state(loc_1(city(all)))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( all ) })

id:727
nl:welche staaten grenzen an wisconsin an
mrl:answer(state(next_to_2(stateid('wisconsin'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' wisconsin ' })

id:728
nl:welcher staat hat dover als hauptstadt
mrl:answer(state(capital_2(cityid('dover', _))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ capital_2 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' dover ' })

id:729
nl:durch welche staaten fliesst mindestens einer der hauptflÃ¼sse
mrl:answer(state(loc_1(major(river(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ major ( *n:River ) })
*n:River -> ({ river ( all ) })

id:730
nl:durch welche staaten fliesst der fluss colorado
mrl:answer(state(traverse_1(river(riverid('colorado')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' colorado ' })

id:731
nl:durch welche staaten fliesst der delaware
mrl:answer(state(traverse_1(river(riverid('delaware')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' delaware ' })

id:732
nl:durch welche staaten verlaeuft der mississippi
mrl:answer(state(traverse_1(river(riverid('mississippi')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:733
nl:durch welche staaten fliesst der mississippi
mrl:answer(state(traverse_1(riverid('mississippi'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:734
nl:durch welche staaten verlaeuft der missouri fluss
mrl:answer(state(traverse_1(river(riverid('missouri')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' missouri ' })

id:735
nl:durch welche staaten fliesst der missouri fluss
mrl:answer(state(traverse_1(riverid('missouri'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' missouri ' })

id:736
nl:durch \welche staaten verlaeuft der ohio fluss
mrl:answer(state(traverse_1(river(riverid('ohio')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' ohio ' })

id:737
nl:durch welche staaten fliesst der ohio fluss
mrl:answer(state(traverse_1(river(riverid('ohio')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' ohio ' })

id:738
nl:welcher staat hat den kuerzesten fluss
mrl:answer(state(traverse_1(shortest(river(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ shortest ( *n:River ) })
*n:River -> ({ river ( all ) })

id:739
nl:welche staaten haben eine hauptstadt die der hoechste punkt des staates ist
mrl:answer(state(loc_1(capital(highest(place(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ capital ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:740
nl:welche staaten haben staedte mit dem namen austin
mrl:answer(state(loc_1(city(cityid('austin', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' austin ' })

id:741
nl:welche staaten haben staedte die austin heissen
mrl:answer(state(loc_1(city(cityid('austin', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' austin ' })

id:742
nl:welche staaten haben staedte mit dem namen dallas
mrl:answer(state(loc_1(city(cityid('dallas', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' dallas ' })

id:743
nl:welche staaten haben staedte mit dem namen plano
mrl:answer(state(loc_1(city(cityid('plano', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' plano ' })

id:744
nl:welche staaten haben staedte mit dem namen portland
mrl:answer(state(loc_1(city(cityid('portland', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' portland ' })

id:745
nl:in welchen staaten gibt es staedte mit dem namen rochester
mrl:answer(state(loc_1(city(cityid('rochester', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' rochester ' })

id:746
nl:welche staaten haben staedte mit dem namen salt lake city
mrl:answer(state(loc_1(city(cityid('salt lake city', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' salt lake city ' })

id:747
nl:welche staaten haben keine angrenzende staaten
mrl:answer(exclude(state(all), next_to_2(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ exclude ( *n:State , *n:State ) })
*n:State -> ({ state ( all ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:748
nl:wie viele staaten haben fluesse mit dem namen colorado
mrl:answer(state(loc_1(river(riverid('colorado')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' colorado ' })

id:749
nl:welche staaten haben einen fluss
mrl:answer(state(traverse_1(river(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( all ) })

id:750
nl:welche staaten haben staedte mit dem namen springfield
mrl:answer(state(loc_1(city(cityid('springfield', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' springfield ' })

id:751
nl:welche hoechstgelegenen punkte eines staates liegen hoeher als derjenige von colorado
mrl:answer(state(high_point_2(higher_2(high_point_1(stateid('colorado'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ high_point_2 ( *n:Place ) })
*n:Place -> ({ higher_2 ( *n:Place ) })
*n:Place -> ({ high_point_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:752
nl:welche staaten in den vereinigten staaten habe eine stadt springfield
mrl:answer(intersection(state(loc_2(countryid('usa'))), loc_1(city(cityid('springfield', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ intersection ( *n:State , *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' springfield ' })

id:753
nl:welche staaten grenzen an maine
mrl:answer(state(next_to_2(stateid('maine'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' maine ' })

id:754
nl:welche staaten grenzen an kentucky
mrl:answer(state(next_to_2(stateid('kentucky'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' kentucky ' })

id:755
nl:welches ist die bevoelkerungsreichste stadt von texas
mrl:answer(largest_one(population_1(city(loc_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:756
nl:welches ist die groesste stadt
mrl:answer(largest(city(all)))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( all ) })

id:757
nl:wo gibt es berge
mrl:answer(loc_1(mountain(all)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ mountain ( all ) })

id:758
nl:wo liegt austin
mrl:answer(loc_1(cityid('austin', _)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' austin ' })

id:759
nl:wo ist baton rouge
mrl:answer(loc_1(cityid('baton rouge', _)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' baton rouge ' })

id:760
nl:wo liegt dallas
mrl:answer(loc_1(cityid('dallas', _)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' dallas ' })

id:761
nl:wo is fort wayne
mrl:answer(loc_1(cityid('fort wayne', _)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' fort wayne ' })

id:762
nl:wo ist houston
mrl:answer(loc_1(cityid('houston', _)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' houston ' })

id:763
nl:wo ist indianapolis
mrl:answer(loc_1(cityid('indianapolis', _)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' indianapolis ' })

id:764
nl:wo ist massachusetts
mrl:answer(loc_1(stateid('massachusetts')))
productions:
*n:Query -> ({ answer ( *n:Country ) })
*n:Country -> ({ loc_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' massachusetts ' })

id:765
nl:wo befindet sich mount whitney
mrl:answer(loc_1(placeid('mount whitney')))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ placeid ( *n:PlaceName ) })
*n:PlaceName -> ({ ' mount whitney ' })

id:766
nl:wo liegt mount whitney
mrl:answer(loc_1(placeid('mount whitney')))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ placeid ( *n:PlaceName ) })
*n:PlaceName -> ({ ' mount whitney ' })

id:767
nl:wo liegt new hampshire
mrl:answer(loc_1(stateid('new hampshire')))
productions:
*n:Query -> ({ answer ( *n:Country ) })
*n:Country -> ({ loc_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new hampshire ' })

id:768
nl:wo ist new orleans
mrl:answer(loc_1(cityid('new orleans', _)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' new orleans ' })

id:769
nl:wo liegt portland
mrl:answer(loc_1(cityid('portland', _)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' portland ' })

id:770
nl:wo liegt san diego
mrl:answer(loc_1(cityid('san diego', _)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' san diego ' })

id:771
nl:wo liegt san jose
mrl:answer(loc_1(cityid('san jose', _)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' san jose ' })

id:772
nl:wo liegt scotts valley
mrl:answer(loc_1(cityid('scotts valley', _)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' scotts valley ' })

id:773
nl:wo ist springfield
mrl:answer(loc_1(cityid('springfield', _)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' springfield ' })

id:774
nl:wo liegt der chattahoochee fluss
mrl:answer(loc_1(river(riverid('chattahoochee'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' chattahoochee ' })

id:775
nl:wo liegt der hoechste berg der usa
mrl:answer(highest(mountain(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ mountain ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:776
nl:woe liegt der hoechste punkt in hawaii
mrl:answer(highest(place(loc_2(stateid('hawaii')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' hawaii ' })

id:777
nl:wo liegt der hoechste punkt in montana
mrl:answer(highest(place(loc_2(stateid('montana')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' montana ' })

id:778
nl:wie lautet der niedrigste punkt in maryland
mrl:answer(lowest(place(loc_2(stateid('maryland')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' maryland ' })

id:779
nl:wo ist der tiefster punkt in den usa
mrl:answer(lowest(place(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:780
nl:wo ist der tiefste punkt in iowa
mrl:answer(lowest(place(loc_2(stateid('iowa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' iowa ' })

id:781
nl:wo liegt die am meisten bevoelkerte gegend von neu mexiko
mrl:answer(largest_one(population_1(city(loc_2(stateid('new mexico'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new mexico ' })

id:782
nl:wo liegt die kleinste stadt
mrl:answer(loc_1(smallest(city(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ smallest ( *n:City ) })
*n:City -> ({ city ( all ) })

id:783
nl:welches sind die hauptstaedte der an texas anliegenden staaten
mrl:answer(capital(loc_2(state(next_to_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:784
nl:welche hauptstaedte gehoeren nicht zu den groessten staedten
mrl:answer(exclude(capital(all), major(city(all))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ exclude ( *n:City , *n:City ) })
*n:City -> ({ capital ( all ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( all ) })

id:785
nl:welche stadt in california hat die groesste bevoelkerung
mrl:answer(largest_one(population_1(city(loc_2(stateid('california'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:786
nl:welches ist die dichte des staates durch den der groesste fluss der usa fliesst
mrl:answer(density_1(state(traverse_1(longest(river(loc_2(countryid('usa'))))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:787
nl:wie lautet der hoechste gipfel der nicht in alaska liegt
mrl:answer(highest(exclude(mountain(all), loc_2(stateid('alaska')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ exclude ( *n:Place , *n:Place ) })
*n:Place -> ({ mountain ( all ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:788
nl:wie lautet der laengste fluss der usa
mrl:answer(longest(river(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:789
nl:wie lautet der niedrigste punkt von den staaten durch die der mississippi verlaeuft
mrl:answer(lowest(place(loc_2(state(traverse_1(riverid('mississippi')))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:790
nl:welches ist der kuerzeste fluss
mrl:answer(shortest(river(all)))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ shortest ( *n:River ) })
*n:River -> ({ river ( all ) })

id:791
nl:wie lautet der kleinste staat
mrl:answer(smallest(state(all)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:792
nl:welcher der staaten welche an pennsylvania grenzt hat die groesste bevoelkerung
mrl:answer(largest_one(population_1(state(next_to_2(stateid('pennsylvania'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' pennsylvania ' })

id:793
nl:welcher fluss fliesst durch die meisten staaten
mrl:answer(most(river(traverse_2(state(all)))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ most ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:794
nl:welcher fluss fliesst durch die meisten staaten
mrl:answer(most(river(traverse_2(state(all)))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ most ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:795
nl:welcher fluss fliesst durch die meisten staaten
mrl:answer(most(river(traverse_2(state(all)))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ most ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:796
nl:welcher fluss durchquert die meisten staaten
mrl:answer(most(river(traverse_2(state(all)))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ most ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:797
nl:welcher fluss verlaeuft durch alaska
mrl:answer(river(loc_2(stateid('alaska'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:798
nl:welche flÃ¼sse fliessen nicht durch texas
mrl:answer(exclude(river(all), traverse_2(stateid('texas'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ exclude ( *n:River , *n:River ) })
*n:River -> ({ river ( all ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:799
nl:welche flÃ¼sse fliessen durch die usa
mrl:answer(exclude(river(all), traverse_2(countryid('usa'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ exclude ( *n:River , *n:River ) })
*n:River -> ({ river ( all ) })
*n:River -> ({ traverse_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:800
nl:welche fluesse gibt es in alaska
mrl:answer(river(traverse_2(stateid('alaska'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:801
nl:welcher fluss verlaeuft durch staaten welche an new mexico grenzen
mrl:answer(river(traverse_2(state(next_to_2(stateid('new mexico'))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new mexico ' })

id:802
nl:welcher fluss verlaeuft durch staaten welche dem staat mit der hauptstadt austin grenzen
mrl:answer(river(traverse_2(state(next_to_2(state(loc_1(capital(cityid('austin', _)))))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' austin ' })

id:803
nl:welche flÃ¼sse gehen durch staaten mit am wenigsten staedten
mrl:answer(river(traverse_2(fewest(state(loc_1(city(all)))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ fewest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( all ) })

id:804
nl:welche fluesse fliessen durch den staat mit der groesstes stadt in den usa
mrl:answer(river(traverse_2(state(loc_1(largest(city(loc_2(countryid('usa')))))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:805
nl:welche fluesse verlaufen durch den staat mit der niedrigsten erhebung in den usa
mrl:answer(river(traverse_2(state(loc_1(lowest(place(loc_2(countryid('usa')))))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:806
nl:welche staaten grenzen an kentucky
mrl:answer(state(next_to_2(stateid('kentucky'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' kentucky ' })

id:807
nl:welcher staat grenzt an florida
mrl:answer(state(next_to_2(stateid('florida'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' florida ' })

id:808
nl:welche staaten grenzen an hawaii
mrl:answer(state(next_to_2(stateid('hawaii'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' hawaii ' })

id:809
nl:welcher staat grenzt hat am meisten nachbarstaaten
mrl:answer(most(state(next_to_2(state(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:810
nl:welcher staat grenzt an die meisten anderen staaten
mrl:answer(most(state(next_to_2(state(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:811
nl:welcher hauptstadt hat die kleinste bevoelkerung
mrl:answer(smallest_one(population_1(capital(all))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ smallest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ capital ( all ) })

id:812
nl:welcher staat hat am meisten flÃ¼sse
mrl:answer(most(state(loc_1(river(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ river ( all ) })

id:813
nl:welcher staat hat die groesste bevoelkerung
mrl:answer(largest_one(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:814
nl:welcher staat hat die groesste bevoelkerungsdichte
mrl:answer(largest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:815
nl:welcher staat hat die meisten einwohner
mrl:answer(largest_one(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:816
nl:welche staat hat die hoechste erhoehung
mrl:answer(state(loc_1(highest(place(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:817
nl:in welchem staat liegt der hoechste gipfel des landes
mrl:answer(state(loc_1(highest(place(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:818
nl:welcher staat beinhaltet den hoechsten punkt
mrl:answer(state(loc_1(highest(place(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:819
nl:welcher staat hat die groesste dichte
mrl:answer(largest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:820
nl:welcher staat hat die groesste stadt
mrl:answer(state(loc_1(largest(city(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( all ) })

id:821
nl:welches ist die hoechste bevoelkerungsdichte
mrl:answer(largest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:822
nl:welcher staat hat die geringste bevoelkerungsdichte
mrl:answer(smallest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:823
nl:welcher staat hat den laengsten fluss
mrl:answer(state(loc_1(longest(river(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( all ) })

id:824
nl:in welchem staat liegt der tiefste punkt
mrl:answer(state(loc_1(lowest(place(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:825
nl:in welchem stadt liegt der tiefste an idaho grenzende punkt
mrl:answer(state(loc_1(lowest(place(loc_2(next_to_2(stateid('idaho'))))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' idaho ' })

id:826
nl:welcher staat hat die kleinste bevoelkerungsdichte
mrl:answer(smallest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:827
nl:welcher staat hat die meisten wichtigsten staedte
mrl:answer(most(state(loc_1(major(city(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( all ) })

id:828
nl:durch welchen staat fliessen am meisten grosse flÃ¼sse
mrl:answer(most(state(loc_1(major(river(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ major ( *n:River ) })
*n:River -> ({ river ( all ) })

id:829
nl:welcher staat hat die meisten wichtigen fluesse
mrl:answer(most(state(traverse_1(major(river(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ major ( *n:River ) })
*n:River -> ({ river ( all ) })

id:830
nl:welcher staat hat die meisten einwohner
mrl:answer(largest_one(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:831
nl:welcher staat hat die hoechste bevoelkerung
mrl:answer(largest_one(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:832
nl:durch welchen staat fliessen am meisten fluesse
mrl:answer(most(state(loc_1(river(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ river ( all ) })

id:833
nl:durch welchen staat verlaufen die meisten fluesse
mrl:answer(most(state(traverse_1(river(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( all ) })

id:834
nl:welcher staat hat den red fluss
mrl:answer(state(loc_1(river(riverid('red')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' red ' })

id:835
nl:welcher staat hat die kleinste flaeche die texas angrenzt
mrl:answer(smallest_one(area_1(state(next_to_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( area_1 ( *n:State ) ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:836
nl:welcher staat hat die geringste bevoelkerungsdichte
mrl:answer(smallest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:837
nl:welcher staat hat die geringste bevoelkerungsdichte
mrl:answer(smallest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:838
nl:welcher staat hat die niedrigste bevoelkerungsdichte
mrl:answer(smallest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:839
nl:in welcher staat ist kalamazoo
mrl:answer(state(loc_1(cityid('kalamazoo', _))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' kalamazoo ' })

id:840
nl:in welchem staat liegt mount mckinley
mrl:answer(state(loc_1(placeid('mount mckinley'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ placeid ( *n:PlaceName ) })
*n:PlaceName -> ({ ' mount mckinley ' })

id:841
nl:in welchem staat liegt denver
mrl:answer(state(loc_1(city(cityid('denver', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' denver ' })

id:842
nl:in welchem staat liegt die groesste stadt in montana
mrl:answer(state(loc_1(largest(city(loc_2(stateid('montana')))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' montana ' })

id:843
nl:welcher staat ist am kleinsten
mrl:answer(smallest(state(all)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:844
nl:welche staaten benachbaren alabama
mrl:answer(state(next_to_2(stateid('alabama'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alabama ' })

id:845
nl:welche staaten grenzen an alabama
mrl:answer(state(next_to_2(stateid('alabama'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alabama ' })

id:846
nl:welche staaten grenzen an alaska
mrl:answer(state(next_to_2(stateid('alaska'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:847
nl:welche staaten grenzen an arizona
mrl:answer(state(next_to_2(stateid('arizona'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' arizona ' })

id:848
nl:welche staaten grenzen an colorado
mrl:answer(state(next_to_2(stateid('colorado'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:849
nl:welche staaten grenzen an hawaii an
mrl:answer(state(next_to_2(stateid('hawaii'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' hawaii ' })

id:850
nl:welche staaten grenzen an illinois
mrl:answer(state(next_to_2(stateid('illinois'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' illinois ' })

id:851
nl:welche staaten grenzen an iowa
mrl:answer(state(next_to_2(stateid('iowa'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' iowa ' })

id:852
nl:welche staaten grenzen an kentucky
mrl:answer(state(next_to_2(stateid('kentucky'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' kentucky ' })

id:853
nl:welcher staat grenzt an michigan an
mrl:answer(state(next_to_2(stateid('michigan'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' michigan ' })

id:854
nl:welche staaten grenzen an new york an
mrl:answer(state(next_to_2(stateid('new york'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new york ' })

id:855
nl:welche staaten grenzen an keinen anderen staaten an
mrl:answer(exclude(state(all), next_to_2(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ exclude ( *n:State , *n:State ) })
*n:State -> ({ state ( all ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:856
nl:welche staaten grenzen an south dakota an
mrl:answer(state(next_to_2(stateid('south dakota'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' south dakota ' })

id:857
nl:welche staaten grenzen an einen staat durch den der mississippi fliesst
mrl:answer(state(next_to_2(state(traverse_1(riverid('mississippi'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:858
nl:welche staaten grenzen an texas
mrl:answer(state(next_to_2(stateid('texas'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:859
nl:welche staaten grenzen an den laengsten fluesse in den usa
mrl:answer(state(next_to_2(longest(river(loc_2(countryid('usa')))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:860
nl:welche staaten grenzen an den fluss missouri
mrl:answer(state(next_to_2(river(riverid('missouri')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' missouri ' })

id:861
nl:welche staaten grenzen an den staat mit der kleinsten flaechenausdehnung
mrl:answer(state(next_to_2(smallest_one(area_1(state(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ smallest_one ( area_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:862
nl:welcher staat hat die groesste hauptstadt
mrl:answer(state(loc_1(largest(city(capital_1(state(all)))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ capital_1 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:863
nl:durch welche staaten fliesst der colorado fluss
mrl:answer(state(traverse_1(river(riverid('colorado')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' colorado ' })

id:864
nl:welche staaten grenzen nicht an texas an
mrl:answer(exclude(state(all), next_to_2(stateid('texas'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ exclude ( *n:State , *n:State ) })
*n:State -> ({ state ( all ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:865
nl:durch welchen staat querrt der chattahoochee fluss
mrl:answer(state(traverse_1(river(riverid('chattahoochee')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' chattahoochee ' })

id:866
nl:durch welche staaten verlaeuft der colorado fluss
mrl:answer(state(traverse_1(river(riverid('colorado')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' colorado ' })

id:867
nl:durch welche staaten fliesst der laengste fluss
mrl:answer(state(traverse_1(longest(river(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( all ) })

id:868
nl:welcher staat hat den laensten fluss
mrl:answer(state(traverse_1(longest(river(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( all ) })

id:869
nl:durch welche staaten verlaeuft der mississippi fluss
mrl:answer(state(traverse_1(river(riverid('mississippi')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:870
nl:durch welchen staat fliesst der mississippi
mrl:answer(state(traverse_1(riverid('mississippi'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:871
nl:durch welche staaten fliesst der missouri
mrl:answer(state(traverse_1(river(riverid('missouri')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' missouri ' })

id:872
nl:durch welche staaten fliesst der missouri fluss
mrl:answer(state(traverse_1(river(riverid('missouri')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' missouri ' })

id:873
nl:welche staaten haben eine wichtige staat mit dem namen austin
mrl:answer(state(loc_1(major(city(cityid('austin', _))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' austin ' })

id:874
nl:durch welche staaten fliessen fluesse
mrl:answer(state(loc_1(river(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ river ( all ) })

id:875
nl:in welchen staaten gibt es eine stadt namens austin
mrl:answer(state(loc_1(city(cityid('austin', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' austin ' })

id:876
nl:welche staaten haben erhebungen welche hoeher sind als der hoechste punkt in colorado
mrl:answer(state(loc_1(place(higher_2(highest(place(loc_2(stateid('colorado')))))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ higher_2 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:877
nl:welche staaten haben punkte die hoeher liegen als der hoechste punkt in texas
mrl:answer(state(loc_1(place(higher_2(highest(place(loc_2(stateid('texas')))))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ higher_2 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:878
nl:welche staates liegen entlang den laengsten fluss in den vereinigten staaten
mrl:answer(state(traverse_1(longest(river(loc_2(countryid('usa')))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:879
nl:welche staat in den usa hat die hoechste bevoelkerungsdichte
mrl:answer(largest_one(density_1(city(all))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( density_1 ( *n:City ) ) })
*n:City -> ({ city ( all ) })

