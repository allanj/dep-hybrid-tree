id:0
nl:δώσε μου τις πόλεις στην virginia
mrl:answer(city(loc_2(stateid('virginia'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' virginia ' })

id:1
nl:ποια είναι τα ψηλά σημεία των πολιτειών που περιβάλλουν τον mississippi
mrl:answer(high_point_1(state(next_to_2(stateid('mississippi')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ high_point_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' mississippi ' })

id:2
nl:ονόμασε τα ποτάμια στο arkansas
mrl:answer(river(loc_2(stateid('arkansas'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' arkansas ' })

id:3
nl:ονόμασε όλα τα ποτάμια του colorado
mrl:answer(river(loc_2(stateid('colorado'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:4
nl:μπορείς να μου πεις την πρωτεύουσα του texas
mrl:answer(capital(loc_2(stateid('texas'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:5
nl:μπορείς να μου πεις ποιο είναι το ψηλότερο σημείο στην πολιτεία του oregon
mrl:answer(highest(place(loc_2(state(stateid('oregon'))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' oregon ' })

id:6
nl:μέτρα τις πολιτείες που έχουν υψόμετρα χαμηλότερα από αυτό που έχει η alabama
mrl:answer(count(state(low_point_2(lower_2(low_point_1(stateid('alabama')))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ low_point_2 ( *n:Place ) })
*n:Place -> ({ lower_2 ( *n:Place ) })
*n:Place -> ({ low_point_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alabama ' })

id:7
nl:δώσε μου όλες τις πολιτείες των ηπα
mrl:answer(state(loc_2(countryid('usa'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:8
nl:δώσε μου τις πόλεις στο texas
mrl:answer(city(loc_2(stateid('texas'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:9
nl:δώσε μου τις πόλεις στις ηπα
mrl:answer(city(loc_2(countryid('usa'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:10
nl:δώσε μου τις πόλεις της virginia
mrl:answer(city(loc_2(stateid('virginia'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' virginia ' })

id:11
nl:δώσε μου τις πόλεις που υπάρχουν στο texas
mrl:answer(city(loc_2(stateid('texas'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:12
nl:δώσε μου τις λίμνες στην california
mrl:answer(lake(loc_2(stateid('california'))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lake ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:13
nl:δώσε μου τη μεγαλύτερη πολιτεία
mrl:answer(largest(state(all)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:14
nl:δώσε μου το μακρύτερο ποτάμι που διασχίζει τις ηπα
mrl:answer(longest(river(traverse_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:15
nl:δώσε μου τον αριθμό των ποταμιών στην california
mrl:answer(count(river(loc_2(stateid('california')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:16
nl:δώσε μου τις πολιτείες που συνορεύουν με τη utah
mrl:answer(state(next_to_2(stateid('utah'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' utah ' })

id:17
nl:πόσο μεγάλη είναι η alaska
mrl:answer(size(stateid('alaska')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ size ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:18
nl:πόσο μεγάλη είναι η massachusetts
mrl:answer(size(stateid('massachusetts')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ size ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' massachusetts ' })

id:19
nl:πόσο μεγάλο είναι το new mexico
mrl:answer(size(stateid('new mexico')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ size ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new mexico ' })

id:20
nl:πόσο μεγάλη είναι η north dakota
mrl:answer(size(stateid('north dakota')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ size ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' north dakota ' })

id:21
nl:πόσο μεγάλο είναι το texas
mrl:answer(size(stateid('texas')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ size ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:22
nl:πόση μεγάλη είναι η πόλη της new york
mrl:answer(size(city(cityid('new york', _))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ size ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' new york ' })

id:23
nl:πόσο ψηλά είναι τα ψηλότερα σημεία σε όλες τις πολιτείες
mrl:answer(elevation_1(highest(place(loc_2(state(all))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:24
nl:πόσο ψηλή είναι η κορυφή guadalupe
mrl:answer(elevation_1(placeid('guadalupe peak')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ placeid ( *n:PlaceName ) })
*n:PlaceName -> ({ ' guadalupe peak ' })

id:25
nl:πόσο ψηλό είναι το όρος mckinley
mrl:answer(elevation_1(placeid('mount mckinley')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ placeid ( *n:PlaceName ) })
*n:PlaceName -> ({ ' mount mckinley ' })

id:26
nl:πόσο ψηλό είναι το ψηλότερο σημείο στην αμερική
mrl:answer(elevation_1(highest(place(loc_2(countryid('usa'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:27
nl:πόσο ψηλό είναι το ψηλότερο σημείο στη montana
mrl:answer(elevation_1(highest(place(loc_2(stateid('montana'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' montana ' })

id:28
nl:πόσο ψηλό είναι το ψηλότερο σημείο στη μεγαλύτερη πολιτεία
mrl:answer(elevation_1(highest(place(loc_2(largest(state(all)))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:29
nl:πόσο ψηλό είναι το ψηλότερο σημείο στην alabama
mrl:answer(elevation_1(highest(place(loc_2(stateid('alabama'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alabama ' })

id:30
nl:πόσο ψηλά είναι το ψηλότερο σημείο στο delaware
mrl:answer(elevation_1(highest(place(loc_2(stateid('delaware'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' delaware ' })

id:31
nl:πόσο ψηλό είναι το ψηλότερο σημείο της florida
mrl:answer(elevation_1(highest(place(loc_2(stateid('florida'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' florida ' })

id:32
nl:ποιο είναι το ψηλότερο σημείο στη louisiana
mrl:answer(elevation_1(highest(place(loc_2(stateid('louisiana'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' louisiana ' })

id:33
nl:πόσο μεγάλη είναι η alaska
mrl:answer(size(stateid('alaska')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ size ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:34
nl:πόσο μεγάλο είναι το texas
mrl:answer(size(stateid('texas')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ size ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:35
nl:πόσο μεγάλη είναι η μεγαλύτερη πόλη στην alaska
mrl:answer(size(largest(city(loc_2(stateid('alaska'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ size ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:36
nl:πόσο μακρύ είναι το rio grande
mrl:answer(len(riverid('rio grande')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' rio grande ' })

id:37
nl:πόσο μακρύς είναι ο ποταμός colorado
mrl:answer(len(river(riverid('colorado'))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' colorado ' })

id:38
nl:πόσο μακρύς είναι ο ποταμός delaware
mrl:answer(len(river(riverid('delaware'))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' delaware ' })

id:39
nl:πόσο μακρύ είναι το μακρύτερο ποτάμι στην california
mrl:answer(len(longest(river(loc_2(stateid('california'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:40
nl:πόσο μεγάλος είναι ο μακρύτερος ποταμός στις usa
mrl:answer(len(longest(river(loc_2(countryid('usa'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:41
nl:πόσο μακρύς είναι ο mississippi
mrl:answer(len(riverid('mississippi')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:42
nl:πόσο μακρύς είναι ο ποταμός mississippi
mrl:answer(len(river(riverid('mississippi'))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:43
nl:πόσο μεγάλος είναι ο mississippi ποταμός σε μίλια
mrl:answer(len(river(riverid('mississippi'))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:44
nl:πόσο μακρύς είναι ο ποταμός missouri
mrl:answer(len(river(riverid('missouri'))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' missouri ' })

id:45
nl:πόσο μεγάλος είναι ο βόρειος platte ποταμός
mrl:answer(len(river(riverid('north platte'))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' north platte ' })

id:46
nl:πόσο μακρύς είναι ο ποταμός ohio
mrl:answer(len(river(riverid('ohio'))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' ohio ' })

id:47
nl:πόσο μακρύς είναι ο ποταμός rio grande
mrl:answer(len(river(riverid('rio grande'))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' rio grande ' })

id:48
nl:πόσο μακρύ είναι το μικρότερο ποτάμι στις ηπα
mrl:answer(len(shortest(river(loc_2(countryid('usa'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ shortest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:49
nl:πόσες μεγάλες πόλεις υπάρχουν στην pennsylvania
mrl:answer(count(major(city(loc_2(stateid('pennsylvania'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' pennsylvania ' })

id:50
nl:πόσες πρωτεύουσες έχει το rhode island
mrl:answer(count(capital(loc_2(stateid('rhode island')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' rhode island ' })

id:51
nl:πόσες πόλλες είναι στη louisiana
mrl:answer(count(city(loc_2(stateid('louisiana')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' louisiana ' })

id:52
nl:πόσες πόλεις υπάρχουν στη montana
mrl:answer(count(city(loc_2(stateid('montana')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' montana ' })

id:53
nl:πόσες πόλεις υπάρχουν στις ηνωμένες πολιτείες
mrl:answer(count(city(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:54
nl:πόσες πόλεις υπάρχουν στις us
mrl:answer(count(city(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:55
nl:πόσες πόλεις υπάρχουν στις us
mrl:answer(count(city(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:56
nl:πόσες πόλεις υπάρχουν στις ηπα
mrl:answer(count(city(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:57
nl:πόσες πόλεις έχει το texas
mrl:answer(count(city(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:58
nl:πόσες πόλεις έχουν οι ηπα
mrl:answer(count(city(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:59
nl:πόσες πόλεις με το όνομα austin υπάρχουν στις ηπα
mrl:answer(count(intersection(city(cityid('austin', _)), loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ intersection ( *n:City , *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' austin ' })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:60
nl:πόσους κατοίκους έχει η μεγαλύτερη πόλη στις ηπα
mrl:answer(population_1(largest(city(all))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( all ) })

id:61
nl:πόσοι πολίτες στην alabama
mrl:answer(population_1(stateid('alabama')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alabama ' })

id:62
nl:πόσοι πολίτες στο boulder
mrl:answer(population_1(cityid('boulder', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' boulder ' })

id:63
nl:πόσοι πολίτες ζουν στην california
mrl:answer(population_1(stateid('california')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:64
nl:πόσοι ποταμοί colorado υπάρχουν
mrl:answer(count(river(riverid('colorado'))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' colorado ' })

id:65
nl:πόσους κατοίκους έχει το montgomery
mrl:answer(population_1(cityid('montgomery', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' montgomery ' })

id:66
nl:πόσες πόλεις υπάρχουν στην arizona
mrl:answer(count(major(city(loc_2(stateid('arizona'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' arizona ' })

id:67
nl:πόσες κύριες πόλεις υπάρχουν στη florida
mrl:answer(count(major(city(loc_2(stateid('florida'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' florida ' })

id:68
nl:πόσες κύριες πόλεις υπάρχουν σε πολιτείες που συνορεύουν με τη nebraska
mrl:answer(count(major(city(loc_2(state(next_to_2(stateid('nebraska'))))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' nebraska ' })

id:69
nl:πόσες κύριες πόλεις είναι σε πολιτείες που συνορεύουν με την utah
mrl:answer(count(major(city(loc_2(state(next_to_2(stateid('utah'))))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' utah ' })

id:70
nl:πόσες κύριες πόλεις υπάρχουν στο texas
mrl:answer(count(major(city(loc_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:71
nl:πόσες κύριες πόλεις υπάρχουν
mrl:answer(count(major(city(all))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( all ) })

id:72
nl:πόσες κύριες πόλεις υπάρχουν στο oregon
mrl:answer(count(major(city(loc_2(stateid('oregon'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' oregon ' })

id:73
nl:πόσα κύρια ποτάμια διασχίζουν το ohio
mrl:answer(count(major(river(traverse_2(stateid('ohio'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ major ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' ohio ' })

id:74
nl:πόσοι άνθρωποι υπάρχουν στην πολιτεία της nevada
mrl:answer(population_1(state(stateid('nevada'))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' nevada ' })

id:75
nl:πόσοι άνθρωποι υπάρχουν στην iowa
mrl:answer(population_1(stateid('iowa')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' iowa ' })

id:76
nl:πόσοι άνθρωποι είναι στη new york
mrl:answer(population_1(stateid('new york')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new york ' })

id:77
nl:πόσοι άνθρωποι στο boulder
mrl:answer(population_1(cityid('boulder', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' boulder ' })

id:78
nl:πόσοι άνθρωποι ζουν στο austin
mrl:answer(population_1(cityid('austin', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' austin ' })

id:79
nl:πόσοι άνθρωποι ζουν στο austin texas
mrl:answer(population_1(cityid('austin', 'tx')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })
*n:CityName -> ({ ' austin ' })
*n:StateAbbrev -> ({ ' tx ' })

id:80
nl:πόσοι άνθρωποι ζουν στην california
mrl:answer(population_1(stateid('california')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:81
nl:πόσοι άνθρωποι ζουν στο chicago
mrl:answer(population_1(cityid('chicago', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' chicago ' })

id:82
nl:πόσοι άνθρωποι ζουν στο detroit
mrl:answer(population_1(cityid('detroit', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' detroit ' })

id:83
nl:πόσοι άνθρωποι ζουν στην hawaii
mrl:answer(population_1(stateid('hawaii')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' hawaii ' })

id:84
nl:πόσοι άνθρωποι ζουν στο houston
mrl:answer(population_1(cityid('houston', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' houston ' })

id:85
nl:πόσοι άνθρωποι ζουν στο kalamazoo
mrl:answer(population_1(cityid('kalamazoo', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' kalamazoo ' })

id:86
nl:πόσοι άνθρωποι ζουν στο kansas
mrl:answer(population_1(stateid('kansas')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' kansas ' })

id:87
nl:πόσοι άνθρωποι ζουν στη minneapolis minnesota
mrl:answer(population_1(cityid('minneapolis', 'mn')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })
*n:CityName -> ({ ' minneapolis ' })
*n:StateAbbrev -> ({ ' mn ' })

id:88
nl:πόσοι άνθρωποι ζουν στο mississippi
mrl:answer(population_1(stateid('mississippi')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' mississippi ' })

id:89
nl:πόσοι άνθρωποι μένουν στη montana
mrl:answer(population_1(stateid('montana')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' montana ' })

id:90
nl:πόσοι άνθρωποι κατοικούν στο new hampshire
mrl:answer(population_1(stateid('new hampshire')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new hampshire ' })

id:91
nl:πόσοι άνθρωποι ζουν στο new mexico
mrl:answer(population_1(stateid('new mexico')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new mexico ' })

id:92
nl:πόσοι άνθρωποι ζουν στη new york
mrl:answer(population_1(stateid('new york')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new york ' })

id:93
nl:πόσοι άνθρωποι κατοικούν στο rhode island
mrl:answer(population_1(stateid('rhode island')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' rhode island ' })

id:94
nl:πόσοι άνθρωποι ζουν στην όχθη ποταμού
mrl:answer(population_1(cityid('riverside', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' riverside ' })

id:95
nl:πόσοι άνθρωποι ζουν στο san francisco
mrl:answer(population_1(cityid('san francisco', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' san francisco ' })

id:96
nl:πόσοι άνθρωποι ζουν στη νότια dakota
mrl:answer(population_1(stateid('south dakota')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' south dakota ' })

id:97
nl:πόσοι άνθρωποι ζουν στο spokane washington
mrl:answer(population_1(cityid('spokane', 'wa')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })
*n:CityName -> ({ ' spokane ' })
*n:StateAbbrev -> ({ ' wa ' })

id:98
nl:πόσοι άνθρωποι ζουν στο texas
mrl:answer(population_1(stateid('texas')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:99
nl:πόσοι άνθρωποι ζουν στη μεγαλύτερη πόλη στην πολιτεία της new york
mrl:answer(population_1(largest(city(loc_2(state(stateid('new york')))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new york ' })

id:100
nl:πόσοι άνθρωποι ζουν στην πρωτεύουσα της georgia
mrl:answer(population_1(capital(loc_2(stateid('georgia')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' georgia ' })

id:101
nl:πόσοι άνθρωποι ζουν στην πρωτεύουσα του texas
mrl:answer(population_1(capital(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:102
nl:πόσοι άνθρωποι ζουν στη μικρότερη πολιτεία που συνορεύει με το wyoming
mrl:answer(population_1(smallest(state(next_to_2(stateid('wyoming'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' wyoming ' })

id:103
nl:πόσοι άνθρωποι ζουν στην πολιτεία με την μεγαλύτερη πυκνότητα πληθυσμού
mrl:answer(population_1(largest_one(density_1(state(all)))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ largest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:104
nl:πόσοι άνθρωποι ζουν στις ηνωμένες πολιτείες
mrl:answer(population_1(countryid('usa')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:105
nl:πόσοι άνθρωποι ζουν στην washington
mrl:answer(population_1(stateid('washington')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' washington ' })

id:106
nl:πόσοι άνθρωποι ζουν στην washington dc
mrl:answer(population_1(cityid('washington', 'dc')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })
*n:CityName -> ({ ' washington ' })
*n:StateAbbrev -> ({ ' dc ' })

id:107
nl:πόσοι άνθρωποι ζουν στο austin
mrl:answer(population_1(cityid('austin', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' austin ' })

id:108
nl:πόσοι άνθρωποι κατοικούν στη utah
mrl:answer(population_1(stateid('utah')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' utah ' })

id:109
nl:πόσοι άνθρωποι μένουν στη utah
mrl:answer(population_1(stateid('utah')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' utah ' })

id:110
nl:πόσοι κάτοικοι ζουν στο texas
mrl:answer(population_1(stateid('texas')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:111
nl:πόσα ποτάμια ονομάζονται colorado
mrl:answer(count(river(riverid('colorado'))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' colorado ' })

id:112
nl:πόσα ποτάμια βρίσκονται στο colorado
mrl:answer(count(river(loc_2(stateid('colorado')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:113
nl:πόσα ποτάμια υπάρχουν στο colorado
mrl:answer(count(river(loc_2(stateid('colorado')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:114
nl:πόσα ποτάμια υπάρχουν στην iowa
mrl:answer(count(river(loc_2(stateid('iowa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' iowa ' })

id:115
nl:πόσα ποτάμια υπάρχουν στο missouri
mrl:answer(count(river(loc_2(stateid('missouri')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' missouri ' })

id:116
nl:πόσα ποτάμια υπάρχουν στη new york
mrl:answer(count(river(loc_2(stateid('new york')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new york ' })

id:117
nl:πόσα ποτάμια υπάρχουν στη πολιτεία που έχει τα περισσότερα ποτάμια
mrl:answer(count(river(loc_2(most(state(loc_1(river(all))))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ river ( all ) })

id:118
nl:πόσα ποτάμια υπάρχουν στην πολιτεία με το ψηλότερο σημείο
mrl:answer(count(river(loc_2(state(loc_1(highest(place(all))))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:119
nl:πόσα ποτάμια υπάρχουν στην πολιτεία με τον μεγαλύτερο πληθυσμό
mrl:answer(count(river(loc_2(largest_one(population_1(state(all)))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:120
nl:πόσα ποτάμια υπάρχουν στο idaho
mrl:answer(count(river(loc_2(stateid('idaho')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' idaho ' })

id:121
nl:πόσα ποτάμια υπάρχουν στο texas
mrl:answer(count(river(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:122
nl:πόσα ποτάμια υπάρχουν στις ηπα
mrl:answer(count(river(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:123
nl:πόσα ποτάμια δεν διασχίζουν την πολιτεία με πρωτεύουσα το albany
mrl:answer(count(exclude(river(all), traverse_2(state(loc_1(capital(cityid('albany', _))))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ exclude ( *n:River , *n:River ) })
*n:River -> ({ river ( all ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' albany ' })

id:124
nl:πόσα ποτάμια έχει η alaska
mrl:answer(count(river(loc_2(stateid('alaska')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:125
nl:πόσα ποτάμια έχει το colorado
mrl:answer(count(river(loc_2(stateid('colorado')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:126
nl:πόσα ποτάμια στο texas είναι μακρύτερα από το red
mrl:answer(count(intersection(river(loc_2(stateid('texas'))), longer(riverid('red')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ intersection ( *n:River , *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })
*n:River -> ({ longer ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' red ' })

id:127
nl:πόσα ποτάμια στη washington
mrl:answer(count(river(loc_2(stateid('washington')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' washington ' })

id:128
nl:πόσα ποτάμια διασχίζουν το texas
mrl:answer(count(river(traverse_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:129
nl:πόσα ποτάμια διατρέχουν τις πολιτείες που συνορεύουν με το colorado
mrl:answer(count(river(traverse_2(state(next_to_2(stateid('colorado')))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:130
nl:πόσα τετραγωνικά χιλιόμετρα είναι οι ηπα
mrl:answer(area_1(countryid('usa')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:131
nl:πόσες πολιτείες είναι στις ηνωμένες πολιτείες
mrl:answer(count(state(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:132
nl:πόσες πολιτείες υπάρχουν στις ηπα
mrl:answer(count(state(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:133
nl:πόσες πολιτείες είναι δίπλα σε κύρια ποτάμια
mrl:answer(count(state(next_to_2(major(river(all))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:River ) })
*n:River -> ({ major ( *n:River ) })
*n:River -> ({ river ( all ) })

id:134
nl:πόσες πολιτείες υπάρχουν
mrl:answer(count(state(all)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( all ) })

id:135
nl:πόσες πολιτείες υπάρχουν στις usa
mrl:answer(count(state(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:136
nl:πόσες πολιτείες υπάρχουν στις ηνωμένες πολιτείες
mrl:answer(count(state(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:137
nl:πόσες πολιτείες συνορεύουν με την alaska
mrl:answer(count(state(next_to_2(stateid('alaska')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:138
nl:πόσες πολιτείες συνορεύουν με τουλάχιστον άλλη μια πολιτεία
mrl:answer(count(state(next_to_2(state(all)))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:139
nl:πόσες πολιτείες συνορεύουν με το colarado και συνορεύουν με το new mexico
mrl:answer(count(state(intersection(next_to_2(stateid('colorado')), next_to_2(stateid('new mexico'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ intersection ( *n:State , *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new mexico ' })

id:140
nl:πόσες πολιτείες συνορεύουν με τη hawaii
mrl:answer(count(state(next_to_2(stateid('hawaii')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' hawaii ' })

id:141
nl:πόσες πολιτείες συνορεύουν με την iowa
mrl:answer(count(state(next_to_2(stateid('iowa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' iowa ' })

id:142
nl:πόσες πολιτείες συνορεύουν με την πολιτεία της οποίας πρωτεύουσα είναι η boston
mrl:answer(count(state(next_to_2(state(loc_1(capital(cityid('boston', _))))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' boston ' })

id:143
nl:ποιες πολιτείες συνορεύουν με το tennessee
mrl:answer(count(state(next_to_2(stateid('tennessee')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' tennessee ' })

id:144
nl:πόσες πολιτείες συνορεύουν με το texas
mrl:answer(count(state(next_to_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:145
nl:πόσες πολιτείες συνορεύουν με τη μεγαλύτερη πολιτεία
mrl:answer(count(state(next_to_2(largest(state(all))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:146
nl:πόσες πολιτείες συνορεύουν τον mississippi ποταμό
mrl:answer(count(state(next_to_2(river(riverid('mississippi'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:147
nl:πόσες πολιτείες συνορεύουν με την πολιτεία την οποία συνορεύουν οι περισσότερες πολιτείες
mrl:answer(count(state(next_to_2(most(state(next_to_2(state(all))))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:148
nl:πόσες πολιτείες συνορεύουν την πολιτεία με το μεγαλύτερο πληθυσμό
mrl:answer(count(state(next_to_2(largest_one(population_1(state(all)))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:149
nl:πόσες πολιτείες δεν έχουν ποτάμια
mrl:answer(count(exclude(state(all), loc_1(river(all)))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ exclude ( *n:State , *n:State ) })
*n:State -> ({ state ( all ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ river ( all ) })

id:150
nl:με πόσες πολιτείες συνορεύει η iowa
mrl:answer(count(state(next_to_1(stateid('iowa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' iowa ' })

id:151
nl:πόσες πολιτείες συνορεύουν με το missouri
mrl:answer(count(state(next_to_1(stateid('missouri')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' missouri ' })

id:152
nl:με πόσες πολιτείες συνορεύει το tennessee
mrl:answer(count(state(next_to_1(stateid('tennessee')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' tennessee ' })

id:153
nl:ανάμεσα σε πόσες πολιτείες κυλά ο ποταμός colorado
mrl:answer(count(state(traverse_1(river(riverid('colorado'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' colorado ' })

id:154
nl:πόσες πολιτείες διασχίζει ο ποταμός colorado
mrl:answer(count(state(traverse_1(river(riverid('colorado'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' colorado ' })

id:155
nl:πόσες πολιτείες διασχίζει ο ποταμός mississippi
mrl:answer(count(state(traverse_1(river(riverid('mississippi'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:156
nl:πόσες πολιτείες διασχίζει ο mississippi
mrl:answer(count(state(traverse_1(riverid('mississippi')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:157
nl:πόσες πολιτείες διασχίζει ο ποταμός missouri
mrl:answer(count(state(traverse_1(river(riverid('missouri'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' missouri ' })

id:158
nl:πόσες πολιτείες έχουν οι usa
mrl:answer(count(state(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:159
nl:πόσες πολιτείες έχουν μια πόλη που λέγεται rochester
mrl:answer(count(state(loc_1(city(cityid('rochester', _))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' rochester ' })

id:160
nl:πόσες πολιτείες έχουν μια πόλη που ονομάζεται springfield
mrl:answer(count(state(loc_1(city(cityid('springfield', _))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' springfield ' })

id:161
nl:πόσες πολιτείες έχουν ψηλότερο σημείο από το ψηλότερο σημείο της πολιτείας με το τη μεγαλύτερη πρωτεύουσα πόλη στις us
mrl:answer(count(state(loc_1(place(higher_2(highest(place(loc_2(state(loc_1(largest(capital(city(loc_2(countryid('usa'))))))))))))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ higher_2 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:162
nl:πόσες πολιτείες έχουν όνομα austin
mrl:answer(count(state(loc_1(city(cityid('austin', _))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' austin ' })

id:163
nl:πόσες πολιτείες έχουν πόλεις ή κωμοπόλεις που ονομάζονται springfield
mrl:answer(count(state(loc_1(city(cityid('springfield', _))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' springfield ' })

id:164
nl:πόσες πολιτείες έχουν κύρια ποτάμια
mrl:answer(count(state(loc_1(major(river(all))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ major ( *n:River ) })
*n:River -> ({ river ( all ) })

id:165
nl:πόσες πολιτείες των ηπα διασχίζει το κοντύτερο ποτάμι
mrl:answer(count(intersection(state(loc_2(countryid('usa'))), traverse_1(shortest(river(all))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ intersection ( *n:State , *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ shortest ( *n:River ) })
*n:River -> ({ river ( all ) })

id:166
nl:πόσο πληθυσμό έχει το texas
mrl:answer(population_1(stateid('texas')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:167
nl:πόσο ψηλό είναι το όρος mckinley
mrl:answer(elevation_1(placeid('mount mckinley')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ placeid ( *n:PlaceName ) })
*n:PlaceName -> ({ ' mount mckinley ' })

id:168
nl:πόσο ψηλό είναι το ψηλότερο σημείο στη montana
mrl:answer(elevation_1(highest(place(loc_2(stateid('montana'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' montana ' })

id:169
nl:σε ποια πολιτεία είναι το όρος mckinley
mrl:answer(state(loc_1(placeid('mount mckinley'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ placeid ( *n:PlaceName ) })
*n:PlaceName -> ({ ' mount mckinley ' })

id:170
nl:σε ποια πολιτεία υπάρχει το ψηλότερο σημείο στις ηπα
mrl:answer(state(loc_1(highest(place(loc_2(countryid('usa')))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:171
nl:σε ποια πολιτεία είναι το rochester
mrl:answer(state(loc_1(cityid('rochester', _))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' rochester ' })

id:172
nl:η iowa συνορεύει με πόσες πολιτείες
mrl:answer(count(state(next_to_1(stateid('iowa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' iowa ' })

id:173
nl:σύνταξε κατάλογο των πολιτειών
mrl:answer(state(all))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( all ) })

id:174
nl:ονόμασε όλες τις λίμνες των ηπα
mrl:answer(lake(loc_2(countryid('usa'))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lake ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:175
nl:ονόμασε όλα τα ποτάμια στο colorado
mrl:answer(river(loc_2(stateid('colorado'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:176
nl:ονόμασε τις 50 πρωτεύουσες των usa
mrl:answer(capital(loc_2(countryid('usa'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:177
nl:ονόμασε το μακρύτερο ποτάμι στις us
mrl:answer(longest(river(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:178
nl:ονόμασε τις κύριες λίμνες στο michigan
mrl:answer(major(lake(loc_2(stateid('michigan')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ major ( *n:Place ) })
*n:Place -> ({ lake ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' michigan ' })

id:179
nl:ονόμασε τα κύρια ποτάμια στη florida
mrl:answer(major(river(loc_2(stateid('florida')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ major ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' florida ' })

id:180
nl:ονόμασε τα ποτάμια στο arkansas
mrl:answer(river(loc_2(stateid('arkansas'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' arkansas ' })

id:181
nl:ονόμασε τις πολιτείες που δεν έχουν περιβάλλουσες πολιτείες
mrl:answer(exclude(state(all), next_to_2(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ exclude ( *n:State , *n:State ) })
*n:State -> ({ state ( all ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:182
nl:ο αριθμός των πολιτών στο boulder
mrl:answer(population_1(cityid('boulder', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' boulder ' })

id:183
nl:αριθμός των ανθρώπων στο boulder
mrl:answer(population_1(cityid('boulder', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' boulder ' })

id:184
nl:αριθμός πολιτειών που συνορεύουν με την iowa
mrl:answer(count(state(next_to_2(stateid('iowa')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' iowa ' })

id:185
nl:από τις πολιτείες που βρέχονται από το ποταμό mississippi ποια έχει το χαμηλότερο σημείο
mrl:answer(state(loc_1(lowest(place(loc_2(state(traverse_1(river(riverid('mississippi'))))))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:186
nl:άνθρωποι στο boulder
mrl:answer(population_1(cityid('boulder', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' boulder ' })

id:187
nl:πληθυσμός του boulder
mrl:answer(population_1(cityid('boulder', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' boulder ' })

id:188
nl:ποτάμια στη new york
mrl:answer(river(loc_2(stateid('new york'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new york ' })

id:189
nl:το sacramento είναι πρωτεύουσα ποιας πολιτείας
mrl:answer(state(loc_1(capital(cityid('sacramento', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' sacramento ' })

id:190
nl:το san antonio είναι σε ποια πολιτεία
mrl:answer(state(loc_1(cityid('san antonio', _))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' san antonio ' })

id:191
nl:εμφάνισε κύριες πόλεις στο colorado
mrl:answer(major(city(loc_2(stateid('colorado')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:192
nl:δείξε μου όλες τις κύριες λίμνες στις us
mrl:answer(major(lake(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ major ( *n:Place ) })
*n:Place -> ({ lake ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:193
nl:ονόμασε την πολιτεία με τη μεγαλύτερη επιφάνεια
mrl:answer(largest_one(area_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( area_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:194
nl:πολιτείες που συνορεύουν με την iowa
mrl:answer(state(next_to_2(stateid('iowa'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' iowa ' })

id:195
nl:πες μου ποιες πόλεις είναι στο texas
mrl:answer(city(loc_2(stateid('texas'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:196
nl:πόσες πολιτείες διασχίζει το μεγαλύτερο ποτάμι στο texas
mrl:answer(state(traverse_1(longest(river(loc_2(stateid('texas')))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:197
nl:ποιες πολιτείες διασχίζει ο mississippi
mrl:answer(state(traverse_1(riverid('mississippi'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:198
nl:ποιες πολιτείες διασχίζει ο mississippi
mrl:answer(state(traverse_1(riverid('mississippi'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:199
nl:ποιοι είναι όλα τα ποτάμια στο texas
mrl:answer(river(loc_2(stateid('texas'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:200
nl:ποια είναι τα κύρια ποτάμια στο texas
mrl:answer(major(river(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ major ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:201
nl:ποια είναι τα μεγαλύτερα ποτάμια στο texas
mrl:answer(longest(river(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:202
nl:ποιες είναι οι πρωτεύουσες πόλεις των πολιτειών που συνορεύουν με το texas
mrl:answer(capital(city(loc_2(state(next_to_2(stateid('texas')))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:203
nl:ποια είναι η πρωτεύουσα πόλη του texas
mrl:answer(capital(city(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:204
nl:ποιες είναι οι πρωτεύουσες των πολιτειών που συνορεύουν με το missouri
mrl:answer(capital(loc_2(state(next_to_2(stateid('missouri'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' missouri ' })

id:205
nl:ποιες είναι οι πρωτεύουσες των πολιτειών που συνορεύουν με το texas
mrl:answer(capital(loc_2(state(next_to_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:206
nl:ποιες είναι οι πόλεις στην california
mrl:answer(city(loc_2(stateid('california'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:207
nl:ποιες είναι οι πόλεις στις πολιτείες τις οποίες διασχίζει ο mississippi
mrl:answer(city(loc_2(state(traverse_1(riverid('mississippi'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:208
nl:ποιες είναι οι πόλεις της πολιτείας με το ψηλότερο σημείο
mrl:answer(city(loc_2(state(loc_1(highest(place(all)))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:209
nl:ποια είναι τα ψηλότερα σημεία όλων των πολιτειών
mrl:answer(highest(place(loc_2(state(all)))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:210
nl:ποια είναι τα ψηλότερα σημεία των πολιτειών που περιβάλλουν τον mississippi
mrl:answer(highest(place(loc_2(state(next_to_2(stateid('mississippi')))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' mississippi ' })

id:211
nl:ποιες είναι οι λίμνες στις πολιτείες που συνορεύουν το texas
mrl:answer(lake(loc_2(state(next_to_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lake ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:212
nl:ποιες είναι οι μεγαλύτερες πόλεις στις πολιτείες που συνορεύουν με τη μεγαλύτερη πολιτεία
mrl:answer(largest(city(loc_2(state(next_to_2(largest(state(all))))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:213
nl:ποιες είναι οι κύριες πόλεις στην alabama
mrl:answer(major(city(loc_2(stateid('alabama')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alabama ' })

id:214
nl:ποιες είναι οι κύριες πόλεις στην alaska
mrl:answer(major(city(loc_2(stateid('alaska')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:215
nl:ποιες είναι οι κύριες πόλεις στην california
mrl:answer(major(city(loc_2(stateid('california')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:216
nl:ποιες είναι οι κύριες πολιτείες στο delaware
mrl:answer(major(city(loc_2(stateid('delaware')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' delaware ' })

id:217
nl:ποιες είναι οι κύριες πόλεις στο kansas
mrl:answer(major(city(loc_2(stateid('kansas')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' kansas ' })

id:218
nl:ποιες είναι οι κύριες πόλεις στο missouri
mrl:answer(major(city(loc_2(stateid('missouri')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' missouri ' })

id:219
nl:ποιες είναι οι κύριες πόλεις στο new mexico
mrl:answer(major(city(loc_2(stateid('new mexico')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new mexico ' })

id:220
nl:ποιες είναι οι κύριες πόλεις στη new york
mrl:answer(major(city(loc_2(stateid('new york')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new york ' })

id:221
nl:ποιες είναι οι κύριες πόλεις στη north carolina
mrl:answer(major(city(loc_2(stateid('north carolina')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' north carolina ' })

id:222
nl:ποιες είναι οι κύριες πολιτείες στο ohio
mrl:answer(major(city(loc_2(stateid('ohio')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' ohio ' })

id:223
nl:ποιες είναι οι κύριες πόλεις στην oklahoma
mrl:answer(major(city(loc_2(stateid('oklahoma')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' oklahoma ' })

id:224
nl:ποιες είναι οι κύριες πόλεις στο rhode island
mrl:answer(major(city(loc_2(stateid('rhode island')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' rhode island ' })

id:225
nl:ποιες είναι οι κύριες πόλεις στις πολιτείεςτις οποίες διατρέχει ο mississippi
mrl:answer(major(city(loc_2(state(traverse_1(riverid('mississippi')))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:226
nl:ποιες είναι οι κύριες πόλεις στο texas
mrl:answer(major(city(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:227
nl:ποιες είναι οι κύριες πόλεις στη μεγαλύτερη πολιτεία
mrl:answer(major(city(loc_2(largest(state(all))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:228
nl:ποιες είναι οι κύριες πόλεις στη μικρότερη πολιτεία στις ηπα
mrl:answer(major(city(loc_2(smallest(state(loc_2(countryid('usa'))))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:229
nl:ποιες είναι οι κύριες πόλεις στην πολιτεία της california
mrl:answer(major(city(loc_2(state(stateid('california'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:230
nl:ποιες είναι οι κύριες πόλεις στις πολιτείες τις οποίες διασχίζει το μεγαλύτερο ποτάμι στη virginia
mrl:answer(major(city(loc_2(state(traverse_1(major(river(loc_2(stateid('virginia'))))))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ major ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' virginia ' })

id:231
nl:ποιες είναι οι κύριες πόλεις στις ηπα
mrl:answer(major(city(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:232
nl:ποιες είναι οι κύριες πόλεις στο vermont
mrl:answer(major(city(loc_2(stateid('vermont')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' vermont ' })

id:233
nl:ποιες είναι οι κύριες πόλεις στο wyoming
mrl:answer(major(city(loc_2(stateid('wyoming')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' wyoming ' })

id:234
nl:ποιες είναι οι κύριες πόλεις στο texas
mrl:answer(major(city(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:235
nl:ποιες είναι οι κύριες πόλεις στις ηνωμένες πολιτείες
mrl:answer(major(city(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:236
nl:ποιες είναι οι κύριες πόλεις των ηπα
mrl:answer(major(city(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:237
nl:ποιες είναι οι κύριες λίμνες στις ηνωμένες πολιτείες
mrl:answer(major(lake(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ major ( *n:Place ) })
*n:Place -> ({ lake ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:238
nl:ποια είναι τα κύρια ποτάμια του ohio
mrl:answer(major(river(loc_2(stateid('ohio')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ major ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' ohio ' })

id:239
nl:ποια είναι τα κύρια ποτάμια στις ηπα
mrl:answer(major(river(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ major ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:240
nl:ποια είναι τα ονόματα των κύριων πόλεων στο illinois
mrl:answer(major(city(loc_2(stateid('illinois')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' illinois ' })

id:241
nl:ποιες είναι οι γειτονικές πολιτείες για το michigan
mrl:answer(state(next_to_2(stateid('michigan'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' michigan ' })

id:242
nl:ποιες είναι οι πυκνότητες πληθυσμού καθεμίας από τις πολιτείες των ηπα
mrl:answer(density_1(state(all)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:243
nl:ποιος είναι ο πληθυσμός του mississippi
mrl:answer(population_1(stateid('mississippi')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' mississippi ' })

id:244
nl:ποιοι είναι οι πληθυσμοί από όλες τις κύριες πόλεις στη montana
mrl:answer(population_1(major(city(loc_2(stateid('montana'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' montana ' })

id:245
nl:ποιοι είναι οι πληθυσμοί των πολιτειών τις οποίες διασχίζει ο ποταμός mississippi
mrl:answer(population_1(state(traverse_1(river(riverid('mississippi'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:246
nl:ποιοι είναι οι πληθυσμού των πολιτειών από τις οποίες περνά ο mississippi
mrl:answer(population_1(state(traverse_1(river(riverid('mississippi'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:247
nl:ποιοι είναι οι πληθυσμού των πολιτειών τις οποίες διασχίζει ο mississippi
mrl:answer(population_1(state(traverse_1(riverid('mississippi')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:248
nl:ποιοι είναι οι πληθυσμοί των πολιτειών τις οποίες διασχίζει ο mississippi
mrl:answer(population_1(state(traverse_1(riverid('mississippi')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:249
nl:ποιοι είναι οι πληθυσμοί των πολιτειών που συνορεύουν με το texas
mrl:answer(population_1(state(next_to_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:250
nl:ποιοι είναι οι πληθυσμοί των κύριων πόλεων του texas
mrl:answer(population_1(major(city(loc_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:251
nl:ποιοι είναι οι πληθυσμοί των πολιτειών τις οποίες διασχίζει ο ποταμός mississippi
mrl:answer(population_1(state(traverse_1(river(riverid('mississippi'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:252
nl:ποιοι είναι οι πληθυσμοί των πολιτειών τις οποίες διασχίζει ο ποταμός mississippi
mrl:answer(population_1(state(traverse_1(river(riverid('mississippi'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:253
nl:ποιοι είναι οι πληθυσμοί των πολιτειών τις οποίες διασχίζει ο mississippi
mrl:answer(population_1(state(traverse_1(riverid('mississippi')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:254
nl:ποιοι είναι οι πληθυσμοί των πολιτειών τους οποίους διασχίζει ο mississippi
mrl:answer(population_1(state(traverse_1(riverid('mississippi')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:255
nl:ποια είναι τα ποτάμια στην alaska
mrl:answer(river(loc_2(stateid('alaska'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:256
nl:ποια είναι τα ποτάμια στην πολιτεία της indiana
mrl:answer(river(loc_2(state(stateid('indiana')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' indiana ' })

id:257
nl:ποια είναι τα ποτάμια στην πολιτεία του texas
mrl:answer(river(loc_2(state(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:258
nl:ποια είναι τα ποτάμια στη montana
mrl:answer(river(loc_2(stateid('montana'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' montana ' })

id:259
nl:ποιες είναι οι πολιτείες
mrl:answer(state(all))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( all ) })

id:260
nl:ποιες είναι οι πολιτείες που συνορεύουν την πολιτεία με το μεγαλύτερο πληθυσμό
mrl:answer(state(next_to_2(largest_one(population_1(state(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:261
nl:ποιες είναι πολιτείες που διασχίζει ο potomac
mrl:answer(state(traverse_1(riverid('potomac'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' potomac ' })

id:262
nl:ποιες είναι οι πολιτείες τις οποίες διασχίζει ο μακρύτερος ποταμός
mrl:answer(state(traverse_1(longest(river(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( all ) })

id:263
nl:τι μπορείς να μου πεις για τον πληθυσμό του missouri
mrl:answer(population_1(stateid('missouri')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' missouri ' })

id:264
nl:ποια πολιτεία έχει τον μεγαλύτερο πληθυσμό
mrl:answer(largest_one(population_1(capital(all))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ capital ( all ) })

id:265
nl:ποια πρωτεύουσα είναι η μεγαλύτερη στις ηπα
mrl:answer(largest(capital(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:266
nl:ποιες πόλεις βρίσκονται στην pennsylvania
mrl:answer(city(loc_2(stateid('pennsylvania'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' pennsylvania ' })

id:267
nl:ποιες πόλεις στην california
mrl:answer(city(loc_2(stateid('california'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:268
nl:ποιες πόλεις στο texas έχουν τον μεγαλύτερο αριθμό πολιτών
mrl:answer(largest_one(population_1(city(loc_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:269
nl:ποιες πόλεις στο texas έχουν τους μεγαλύτερους πληθυσμούς
mrl:answer(largest_one(population_1(city(loc_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:270
nl:ποια πόλη έχει το μεγαλύτερο πληθυσμό
mrl:answer(largest_one(population_1(city(all))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( all ) })

id:271
nl:ποια πόλη έχει το λιγότερο πληθυσμό
mrl:answer(smallest_one(population_1(city(all))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ smallest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( all ) })

id:272
nl:ποια πόλη έχει τους περισσότερους κατοίκους
mrl:answer(largest_one(population_1(city(all))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( all ) })

id:273
nl:ποια πόλη στις ηνωμένες πολιτείες έχει τη μεγαλύτερη πυκνότητα πληθυσμού
mrl:answer(largest_one(density_1(city(loc_2(countryid('usa'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( density_1 ( *n:City ) ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:274
nl:ποια είναι  η πρωτεύουσα της iowa
mrl:answer(capital(loc_2(stateid('iowa'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' iowa ' })

id:275
nl:ποια είναι η πρωτεύουσα της πολιτείας με το χαμηλότερο σημείο
mrl:answer(capital(loc_2(state(loc_1(lowest(place(all)))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:276
nl:ποια είναι η μεγαλύτερη πρωτεύουσα
mrl:answer(largest(capital(all)))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ capital ( all ) })

id:277
nl:ποια είναι η γειτονική πολιτεία της california
mrl:answer(state(next_to_2(stateid('california'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:278
nl:ποιο είναι το εμβαδό της alaska
mrl:answer(area_1(stateid('alaska')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:279
nl:ποιο είναι το εμβαδό όλων των πολιτειών συνολικά
mrl:answer(sum(area_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ sum ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:280
nl:ποιο είναι το εμβαδό της california
mrl:answer(area_1(stateid('california')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:281
nl:ποιο είναι το εμβαδό της florida
mrl:answer(area_1(stateid('florida')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' florida ' })

id:282
nl:ποιο είναι το εμβαδό του idaho
mrl:answer(area_1(stateid('idaho')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' idaho ' })

id:283
nl:ποιο είναι το εμβαδό του maine
mrl:answer(area_1(stateid('maine')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' maine ' })

id:284
nl:ποιο είναι το εμβαδό του maryland σε τετραγωνικά χιλιόμετρα
mrl:answer(area_1(stateid('maryland')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' maryland ' })

id:285
nl:ποια είναι η επιφάνεια του new mexico
mrl:answer(area_1(stateid('new mexico')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new mexico ' })

id:286
nl:ποια είναι η επιφάνεια του ohio
mrl:answer(area_1(stateid('ohio')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' ohio ' })

id:287
nl:ποια είναι η επιφάνεια του seattle
mrl:answer(area_1(cityid('seattle', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' seattle ' })

id:288
nl:πόσο είναι το εμβαδό της south carolina
mrl:answer(area_1(stateid('south carolina')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' south carolina ' })

id:289
nl:ποιο είναι το εμβαδό του texas
mrl:answer(area_1(stateid('texas')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:290
nl:ποιο είναι το εμβαδό της μεγαλύτερης πολιτείας
mrl:answer(area_1(largest(state(all))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:291
nl:ποια είναι η επιφάνεια της μικρότερης πολιτείας
mrl:answer(area_1(smallest(state(all))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:292
nl:ποιο είναι το εμβαδό της πολιτείας με πρωτεύουσα το albany
mrl:answer(area_1(state(loc_1(capital(cityid('albany', _))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' albany ' })

id:293
nl:ποιο είναι το εμβαδό της πολιτείας με τη χαμηλότερη πυκνότητα πληθυσμού
mrl:answer(area_1(smallest_one(density_1(state(all)))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:294
nl:ποιο είναι το εμβαδό των πολιτειών
mrl:answer(area_1(state(all)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:295
nl:ποια είναι η επιφάνεια της πολιτείας του texas
mrl:answer(area_1(state(stateid('texas'))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:296
nl:ποια είναι η επιφάνεια του wisconsin
mrl:answer(area_1(stateid('wisconsin')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' wisconsin ' })

id:297
nl:ποιος είναι ο μέσος πληθυσμό των us ανά πολιτεία
mrl:answer(density_1(countryid('usa')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:298
nl:ποιος είναι ο μέσος πληθυσμός ανά τετραγωνικό χμ στη pennsylvania
mrl:answer(density_1(stateid('pennsylvania')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' pennsylvania ' })

id:299
nl:ποιος είναι ο μέσος πληθυσμός ανά τετραγωνικό χλμ, στις ηπα
mrl:answer(density_1(countryid('usa')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:300
nl:ποια είναι η μεγαλύτερη αμερικανική πόλη σε πολιτεία με ποτάμι
mrl:answer(largest(city(loc_2(state(loc_1(river(all)))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ river ( all ) })

id:301
nl:ποια είναι η μεγαλύτερη πρωτεύουσα πόλη στις us
mrl:answer(largest(capital(city(loc_2(countryid('usa'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:302
nl:ποια είναι η μεγαλύτερη πόλη στην arizona
mrl:answer(largest(city(loc_2(stateid('arizona')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' arizona ' })

id:303
nl:ποια είναι η μεγαλύτερη πόλη στην georgia
mrl:answer(largest(city(loc_2(stateid('georgia')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' georgia ' })

id:304
nl:ποια είναι η μεγαλύτερη πόλη στο kansas
mrl:answer(largest(city(loc_2(stateid('kansas')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' kansas ' })

id:305
nl:ποια είναι η μεγαλύτερη πόλη στη louisiana
mrl:answer(largest(city(loc_2(stateid('louisiana')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' louisiana ' })

id:306
nl:ποια είναι η μεγαλύτερη πόλη στη nebraska
mrl:answer(largest(city(loc_2(stateid('nebraska')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' nebraska ' })

id:307
nl:ποια είναι η μεγαλύτερη πόλη στο oregon
mrl:answer(largest(city(loc_2(stateid('oregon')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' oregon ' })

id:308
nl:ποια είναι η μεγαλύτερη πόλη στο texas
mrl:answer(largest(city(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:309
nl:ποια είναι η μεγαλύτερη πόλη στη μικρότερη πολιτεία
mrl:answer(largest(city(loc_2(smallest(state(all))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:310
nl:ποια είναι η μεγαλύτερη πόλη στις us
mrl:answer(largest(city(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:311
nl:ποια είναι η μεγαλύτερη πόλη στις ηπα
mrl:answer(largest(city(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:312
nl:ποια είναι η μεγαλύτερη πόλη στις usa
mrl:answer(largest(city(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:313
nl:ποια είναι η μεγαλύτερη πόλη στο wyoming
mrl:answer(largest(city(loc_2(stateid('wyoming')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' wyoming ' })

id:314
nl:ποιο είναι το μεγαλύτερο ποτάμι στο illinois
mrl:answer(longest(river(loc_2(stateid('illinois')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' illinois ' })

id:315
nl:ποια είναι η μεγαλύτερη πολιτεία
mrl:answer(largest(state(all)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:316
nl:ποια είναι η μεγαλύτερη πολιτεία στις ηπειρωτικές ηπα
mrl:answer(largest(state(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:317
nl:ποια είναι η μεγαλύτερη πολιτεία στις usa
mrl:answer(largest(state(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:318
nl:ποια είναι η πρωτεύουσα πόλη της μεγαλύτερης πολιτείας στις ηπα
mrl:answer(capital(city(loc_2(largest(state(loc_2(countryid('usa'))))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:319
nl:ποια είναι η πρωτεύουσα της california
mrl:answer(capital(loc_2(stateid('california'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:320
nl:ποια είναι η πρωτεύουσα του colorado
mrl:answer(capital(loc_2(stateid('colorado'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:321
nl:ποια είναι η πρωτεύουσα της georgia
mrl:answer(capital(loc_2(stateid('georgia'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' georgia ' })

id:322
nl:ποια είναι η πρωτεύουσα της hawaii
mrl:answer(capital(loc_2(stateid('hawaii'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' hawaii ' })

id:323
nl:ποια είναι η πρωτεύουσα του illinois
mrl:answer(capital(loc_2(stateid('illinois'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' illinois ' })

id:324
nl:ποια είναι η πρωτεύουσα της indiana
mrl:answer(capital(loc_2(stateid('indiana'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' indiana ' })

id:325
nl:ποια είναι η πρωτεύουσα της iowa
mrl:answer(capital(loc_2(stateid('iowa'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' iowa ' })

id:326
nl:ποια είναι η πρωτεύουσα του maine
mrl:answer(capital(loc_2(stateid('maine'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' maine ' })

id:327
nl:ποια είναι η πρωτεύουσα του maryland
mrl:answer(capital(loc_2(stateid('maryland'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' maryland ' })

id:328
nl:ποια είναι η πρωτεύουσα της massachusetts
mrl:answer(capital(loc_2(stateid('massachusetts'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' massachusetts ' })

id:329
nl:ποια είναι η πρωτεύουσα του michigan
mrl:answer(capital(loc_2(stateid('michigan'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' michigan ' })

id:330
nl:ποια είναι η πρωτεύουσα του new hampshire
mrl:answer(capital(loc_2(stateid('new hampshire'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new hampshire ' })

id:331
nl:ποια είναι η πρωτεύουσα του new jersey
mrl:answer(capital(loc_2(stateid('new jersey'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new jersey ' })

id:332
nl:ποια είναι η πρωτεύουσα της new york
mrl:answer(capital(loc_2(stateid('new york'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new york ' })

id:333
nl:ποια είναι η πρωτεύουσα της north dakota
mrl:answer(capital(loc_2(stateid('north dakota'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' north dakota ' })

id:334
nl:ποια είναι η πρωτεύουσα του ohio
mrl:answer(capital(loc_2(stateid('ohio'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' ohio ' })

id:335
nl:ποια είναι η πρωτεύουσα της  pennsylvania
mrl:answer(capital(loc_2(stateid('pennsylvania'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' pennsylvania ' })

id:336
nl:ποια είναι η πρωτεύουσα των πολιτειών που έχουν πόλεις που ονομάζονται durham
mrl:answer(capital(loc_2(state(loc_1(city(cityid('durham', _)))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' durham ' })

id:337
nl:ποια είναι η πρωτεύουσα του texas
mrl:answer(capital(loc_2(stateid('texas'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:338
nl:ποια είναι η πρωτεύουσα της πολιτείας της alabama
mrl:answer(capital(loc_2(state(stateid('alabama')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alabama ' })

id:339
nl:ποια είναι η πρωτεύουσα της πολιτείας florida
mrl:answer(capital(loc_2(state(stateid('florida')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' florida ' })

id:340
nl:ποια είναι η πρωτεύουσα της μεγαλύτερης πολιτείας
mrl:answer(capital(loc_2(largest(state(all)))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:341
nl:ποια είναι η πρωτεύουσα της μικρότερης πολιτείας
mrl:answer(capital(loc_2(smallest(state(all)))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:342
nl:ποια είναι η πρωτεύουσα της πολιτείας texas
mrl:answer(capital(loc_2(state(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:343
nl:ποια είναι η πρωτεύουσα της πολιτείας που συνορεύει με τις περισσότερες πολιτείες
mrl:answer(capital(loc_2(most(state(next_to_2(state(all)))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:344
nl:ποια είναι η πρωτεύουσα της πολιτείας που συνορεύει με την πολιτεία που συνορεύει με το texas
mrl:answer(capital(loc_2(state(next_to_2(state(next_to_2(stateid('texas'))))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:345
nl:ποια είναι η πρωτεύουσα της πολιτείας με το μεγαλύτερο υψόμετρο
mrl:answer(capital(loc_2(state(loc_1(highest(place(all)))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:346
nl:ποιά είναι η πρωτεύουσα της πολιτείας με το ψηλότερο σημείο
mrl:answer(capital(loc_2(state(loc_1(highest(place(all)))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:347
nl:ποια είναι η πρωτεύουσα της πολιτείας με το μεγαλύτερο πληθυσμό
mrl:answer(capital(loc_2(largest_one(population_1(state(all))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:348
nl:ποια είναι η πρωτεύουσα της πολιτείας με την μεγαλύτερη πυκνότητα πληθυσμού
mrl:answer(capital(loc_2(largest_one(density_1(state(all))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ largest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:349
nl:ποια είναι η πρωτεύουσα της πολιτείας με το μεγαλύτερο ποτάμι
mrl:answer(capital(loc_2(state(loc_1(longest(river(all)))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( all ) })

id:350
nl:ποια είναι η πρωτεύουσα της πολιτείας με τους περισσότερους κατοίκους
mrl:answer(capital(loc_2(largest_one(population_1(state(all))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:351
nl:ποια είναι η πρωτεύουσα της utah
mrl:answer(capital(loc_2(stateid('utah'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' utah ' })

id:352
nl:ποια είναι  η πρωτεύουσα του vermont
mrl:answer(capital(loc_2(stateid('vermont'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' vermont ' })

id:353
nl:ποια είναι η πρωτεύουσα της washington
mrl:answer(capital(loc_2(stateid('washington'))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' washington ' })

id:354
nl:ποια είναι η πόλη στο texas με τον μεγαλύτερο πληθυσμό
mrl:answer(largest_one(population_1(city(loc_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:355
nl:ποια είναι η πόλη με τον μικρότερη πληθυσμό
mrl:answer(smallest_one(population_1(city(all))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ smallest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( all ) })

id:356
nl:πόσο είναι το συνδυαστικό εμβαδό των 50 πολιτειών
mrl:answer(sum(area_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ sum ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:357
nl:ποιος είναι ο συνδυαστικός πληθυσμός όλων των 50 πολιτειών
mrl:answer(sum(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ sum ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:358
nl:ποια είναι η πυκνότητα του texas
mrl:answer(density_1(stateid('texas')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:359
nl:ποια είναι η πυκνότητας της new york
mrl:answer(density_1(stateid('new york')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new york ' })

id:360
nl:ποιο είναι το υψόμετρο της death valley
mrl:answer(elevation_1(placeid('death valley')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ placeid ( *n:PlaceName ) })
*n:PlaceName -> ({ ' death valley ' })

id:361
nl:ποιο είναι το υψόμετρο του ψηλότερου σημείου στις usa
mrl:answer(elevation_1(highest(place(loc_2(countryid('usa'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:362
nl:ποιο είναι το υψόμετρο του όρους mckinley
mrl:answer(elevation_1(placeid('mount mckinley')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ placeid ( *n:PlaceName ) })
*n:PlaceName -> ({ ' mount mckinley ' })

id:363
nl:ποιο είναι το ύψος του ψηλότερου βουνού στο texas
mrl:answer(elevation_1(highest(mountain(loc_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ mountain ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:364
nl:ποιο είναι το υψόμετρο του ψηλότερου σημείου στις usa
mrl:answer(elevation_1(highest(place(loc_2(countryid('usa'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ elevation_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:365
nl:ποιο είναι το ψηλό σημείο του wyoming
mrl:answer(high_point_1(stateid('wyoming')))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ high_point_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' wyoming ' })

id:366
nl:ποιο είναι το μεγαλύτερο υψόμετρο στο new mexico
mrl:answer(highest(place(loc_2(stateid('new mexico')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new mexico ' })

id:367
nl:ποιο είναι το μεγαλύτερο υψόμετρο στη south carolina
mrl:answer(highest(place(loc_2(stateid('south carolina')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' south carolina ' })

id:368
nl:ποιο είναι το μεγαλύτερο υψόμετρο στο texas
mrl:answer(highest(place(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:369
nl:ποιο είναι το μεγαλύτερο υψόμετρο στις ηνωμένες πολιτείες
mrl:answer(highest(place(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:370
nl:ποιο είναι το ψηλότερο βουνό στην alaska
mrl:answer(highest(mountain(loc_2(stateid('alaska')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ mountain ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:371
nl:ποιο είναι το ψηλότερο βουνό στο texas
mrl:answer(highest(mountain(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ mountain ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:372
nl:ποιο είναι το ψηλότερο βουνό στις us
mrl:answer(highest(mountain(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ mountain ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:373
nl:ποιο είναι το ψηλότερο βουνό στις ηπα
mrl:answer(highest(mountain(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ mountain ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:374
nl:ποιο είναι το ψηλότερο σημείο στο colorado
mrl:answer(highest(place(loc_2(stateid('colorado')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:375
nl:ποιο είναι το ψηλότερο σημείο στο delaware
mrl:answer(highest(place(loc_2(stateid('delaware')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' delaware ' })

id:376
nl:ποιο είναι το ψηλότερο σημείο σε κάθε πολιτεία της οποία το χαμηλότερο σημείο είναι στο επίπεδο της θάλασσας
mrl:answer(highest(place(loc_2(state(loc_1(place(elevation_2(0))))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ elevation_2 ( *n:Num ) })
*n:Num -> ({ 0 })

id:377
nl:ποιο είναι το ψηλότερο σημείο στη florida
mrl:answer(highest(place(loc_2(stateid('florida')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' florida ' })

id:378
nl:ποιο είναι το ψηλότερο σημείο στην iowa
mrl:answer(highest(place(loc_2(stateid('iowa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' iowa ' })

id:379
nl:ποιο είναι το ψηλότερο σημείο στο kansas
mrl:answer(highest(place(loc_2(stateid('kansas')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' kansas ' })

id:380
nl:ποιο είναι το ψηλότερο σημείο στο maine
mrl:answer(highest(place(loc_2(stateid('maine')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' maine ' })

id:381
nl:ποιο είναι το ψηλότερο σημείο στη montana
mrl:answer(highest(place(loc_2(stateid('montana')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' montana ' })

id:382
nl:ποιο είναι το ψηλότερο σημείο της nevada σε μέτρα
mrl:answer(highest(place(loc_2(stateid('nevada')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' nevada ' })

id:383
nl:ποιο είναι το ψηλότερο σημείο του new mexico
mrl:answer(highest(place(loc_2(stateid('new mexico')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new mexico ' })

id:384
nl:ποιο είναι το ψηλότερο σημείο στο ohio
mrl:answer(highest(place(loc_2(stateid('ohio')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' ohio ' })

id:385
nl:ποιο είναι το ψηλότερο σημείο στο rhode island
mrl:answer(highest(place(loc_2(stateid('rhode island')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' rhode island ' })

id:386
nl:ποιο είναι το ψηλότερο σημείο σε πολιτείες που συνορεύουν με την georgia
mrl:answer(highest(place(loc_2(state(next_to_2(stateid('georgia')))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' georgia ' })

id:387
nl:ποιο είναι το ψηλότερο σημείο στο texas
mrl:answer(highest(place(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:388
nl:ποιο είναι το ψηλότερο σημείο στην χώρα
mrl:answer(highest(place(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:389
nl:ποιο είναι το ψηλότερο σημείο στη μικρότερη πολιτεία
mrl:answer(highest(place(loc_2(smallest(state(all))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:390
nl:ποιο είναι το ψηλότερο σημείο στην πολιτεία με πρωτεύουσα το austin
mrl:answer(highest(place(loc_2(state(loc_1(capital(cityid('austin', _))))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' austin ' })

id:391
nl:ποιο είναι το ψηλότερο σημείο στην πολιτεία με πρωτεύουσα το des moines
mrl:answer(highest(place(loc_2(state(loc_1(capital(cityid('des moines', _))))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' des moines ' })

id:392
nl:ποιο είναι το ψηλότερο σημείο στην πολιτεία με πρωτεύουσα το des moines
mrl:answer(highest(place(loc_2(state(loc_1(capital(cityid('des moines', _))))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' des moines ' })

id:393
nl:ποιο είναι το ψηλότερο σημείο στην πολιτεία με τα περισσότερα ποτάμια
mrl:answer(highest(place(loc_2(most(state(traverse_1(river(all))))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( all ) })

id:394
nl:ποιο είναι το ψηλότερο σημείο στην πολιτεία με τον μικρότερο πληθυσμό
mrl:answer(highest(place(loc_2(smallest_one(population_1(state(all)))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ smallest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:395
nl:ποιο είναι το ψηλότερο σημείο στις πολιτείες που συνορεύουν με το colorado
mrl:answer(highest(place(loc_2(state(next_to_2(stateid('colorado')))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:396
nl:ποιο είναι το ψηλότερο σημείο στις ηνωμένες πολιτείες
mrl:answer(highest(place(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:397
nl:ποιο είναι το ψηλότερο σημείο στις ηπα
mrl:answer(highest(place(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:398
nl:ποιο είναι το ψηλότερο σημείο στις ηπα
mrl:answer(highest(place(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:399
nl:ποιο είναι το ψηλότερο σημείο στη virginia
mrl:answer(highest(place(loc_2(stateid('virginia')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' virginia ' })

id:400
nl:ποιο είναι το ψηλότερο σημείο στο wyoming
mrl:answer(highest(place(loc_2(stateid('wyoming')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' wyoming ' })

id:401
nl:ποιο είναι το ψηλότερο σημείο της πολιτείας με το μεγαλύτερο εμβαδό
mrl:answer(highest(place(loc_2(largest_one(area_1(state(all)))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ largest_one ( area_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:402
nl:ποιο είναι το ψηλότερο σημείο της πολιτείας με τη μικρότερη πυκνότητα πληθυσμού
mrl:answer(highest(place(loc_2(smallest_one(density_1(state(all)))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:403
nl:ποιο είναι το ψηλότερο σημείο στις ηπα
mrl:answer(highest(place(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:404
nl:ποια είναι η μεγαύτερη πρωτεύουσα
mrl:answer(largest(capital(all)))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ capital ( all ) })

id:405
nl:ποια είναι η μεγαλύτερη πρωτεύουσα πόλη στις ηπα
mrl:answer(largest(capital(city(loc_2(countryid('usa'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:406
nl:ποια είναι η μεγαλύτερη πόλη σε μια πολιτεία που συνορεύει με το texas
mrl:answer(largest(city(loc_2(state(next_to_2(stateid('texas')))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:407
nl:ποια είναι η μεγαλύτερη πόλη στην alabama
mrl:answer(largest(city(loc_2(stateid('alabama')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alabama ' })

id:408
nl:ποια είναι η μεγαλύτερη πόλη στην california
mrl:answer(largest(city(loc_2(stateid('california')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:409
nl:ποια είναι η μεγαλύτερη πόλη στο michigan
mrl:answer(largest(city(loc_2(stateid('michigan')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' michigan ' })

id:410
nl:ποια είναι η μεγαλύτερη πολιτεία στη minnesota βάσει πληθυσμού
mrl:answer(largest_one(population_1(city(loc_2(stateid('minnesota'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' minnesota ' })

id:411
nl:ποια είναι η μεγαλύτερη πόλη στο missouri
mrl:answer(largest(city(loc_2(stateid('missouri')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' missouri ' })

id:412
nl:ποια είναι η μεγαλύτερη πόλη στο rhode island
mrl:answer(largest(city(loc_2(stateid('rhode island')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' rhode island ' })

id:413
nl:ποια είναι η μεγαλύτερη πόλη στη μικρότερη πολιτεία την οποία διασχίζει ο mississippi
mrl:answer(largest(city(loc_2(smallest(state(traverse_1(riverid('mississippi'))))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:414
nl:ποια είναι η μεγαλύτερη πόλη σε πολιτείες που συνορεύουν με την california
mrl:answer(largest(city(loc_2(state(next_to_2(stateid('california')))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:415
nl:ποια είναι η μεγαλύτερη πόλη στο texas
mrl:answer(largest(city(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:416
nl:ποια είναι η μεγαλύτερη πόλη στη μικρότερη πολιτεία στις ηπα
mrl:answer(largest(city(loc_2(smallest(state(loc_2(countryid('usa'))))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:417
nl:ποια είναι η μεγαλύτερη πόλη στο wisconsin
mrl:answer(largest(city(loc_2(stateid('wisconsin')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' wisconsin ' })

id:418
nl:ποια είναι η μεγαλύτερη πόλη στο kansas
mrl:answer(largest(city(loc_2(stateid('kansas')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' kansas ' })

id:419
nl:ποια είναι η μεγαλύτερη από τις πολιτείες που ο rio grande διασχίζει
mrl:answer(largest(state(traverse_1(riverid('rio grande')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' rio grande ' })

id:420
nl:ποιο είναι το μεγαλύτερο ποτάμι στην πολιτεία washington
mrl:answer(longest(river(loc_2(state(stateid('washington'))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' washington ' })

id:421
nl:ποια είναι η μεγαλύτερη πολιτεία
mrl:answer(largest(state(all)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:422
nl:ποια είναι η μεγαλύτερη πολιτεία που συνορεύει με το arkansas
mrl:answer(largest(state(next_to_2(stateid('arkansas')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' arkansas ' })

id:423
nl:ποια είναι η μεγαλύτερη πολιτεία που συνορεύει το texas
mrl:answer(largest(state(next_to_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:424
nl:ποια είναι η μεγαλύτερη πρωτεύουσα πολιτείας σε πληθυσμό
mrl:answer(largest_one(population_1(capital_1(state(all)))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ capital_1 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:425
nl:ποια είναι η μεγαλύτερη πολιτεία στις ηπα
mrl:answer(largest(state(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:426
nl:ποια είναι η μεγαλύτερη πολιτεία στις ηπα
mrl:answer(largest(state(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:427
nl:ποια είναι η μεγαλύτερη πολιτεία που συνορεύει με την california
mrl:answer(largest(state(next_to_2(stateid('california')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:428
nl:ποια είναι η μεγαλύτερη πολιτεία που συνορεύει με το texas
mrl:answer(largest(state(next_to_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:429
nl:ποια είναι η μεγαλύτερη πολιτεία που συνορεύει με την πολιτεία με τον μεγαλύτερο πληθυσμό
mrl:answer(largest(state(next_to_2(largest_one(population_1(state(all)))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:430
nl:ποια είναι η μεγαλύτερη πολιτεία που συνορεύει με την πολιτεία με το χαμηλότερο σημείο στις ηπα
mrl:answer(largest(state(next_to_2(state(loc_1(lowest(place(loc_2(countryid('usa'))))))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:431
nl:ποια είναι η μεγαλύτερη πολιτεία που διασχίζει ο ποταμός mississippi
mrl:answer(largest(state(traverse_1(river(riverid('mississippi'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:432
nl:ποια είναι η ολιγοπληθέστερη πολιτεία
mrl:answer(smallest_one(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:433
nl:ποιο είναι το μήκος του ποταμού colorado
mrl:answer(len(river(riverid('colorado'))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' colorado ' })

id:434
nl:ποιο είναι το μήκος του ποταμού colorado στο texas
mrl:answer(len(intersection(riverid('colorado'), river(loc_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ intersection ( *n:River , *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' colorado ' })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:435
nl:ποιο είναι το μήκος του μακρύτερου ποταμού στις ηπα
mrl:answer(len(longest(river(loc_2(countryid('usa'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:436
nl:ποιο είναι το μήκος του μακρύτερου ποταμού που διασχίζει το texas
mrl:answer(len(longest(river(traverse_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:437
nl:ποιο είναι το μήκος του ποταμού mississippi
mrl:answer(len(river(riverid('mississippi'))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:438
nl:ποιο είναι του ποταμού που διασχίζει τις περισσότερες πολιτείες
mrl:answer(len(most(river(traverse_2(state(all))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ most ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:439
nl:ποιο είναι το μήκος του ποταμιού που διασχίζει το μεγαλύτερο αριθμό πολιτειών
mrl:answer(len(most(river(traverse_2(state(all))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ most ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:440
nl:ποιο είναι το μήκος του ποταμού που διασχίζει τις περισσότερες πολιτείες
mrl:answer(len(most(river(traverse_2(state(all))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ most ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:441
nl:ποιο είναι το μήκος του ποταμού που διασχίζει τις περισσότερες πολιτείες
mrl:answer(len(most(river(traverse_2(state(all))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ most ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:442
nl:ποιο είναι το μεγαλύτερο ποτάμι
mrl:answer(longest(river(all)))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( all ) })

id:443
nl:ποιο είναι το μακρύτερο ποτάμι που διασχίζει τη new york
mrl:answer(longest(river(traverse_2(stateid('new york')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new york ' })

id:444
nl:ποιο είναι το μακρύτερο ποτάμι στην αμερική
mrl:answer(longest(river(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:445
nl:ποιο είναι το μεγαλύτερο ποτάμι στην california
mrl:answer(longest(river(loc_2(stateid('california')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:446
nl:ποιο είναι το μακρύτερο ποτάμι στη florida
mrl:answer(longest(river(loc_2(stateid('florida')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' florida ' })

id:447
nl:ποιο είναι το μακρύτερο ποτάμι στο mississippi
mrl:answer(longest(river(loc_2(stateid('mississippi')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' mississippi ' })

id:448
nl:ποιο είναι το μακρύτερο ποτάμι στη new york
mrl:answer(longest(river(loc_2(stateid('new york')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new york ' })

id:449
nl:ποιο είναι το μακρύτερο ποτάμι στην pennsylvania
mrl:answer(longest(river(loc_2(stateid('pennsylvania')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' pennsylvania ' })

id:450
nl:ποιο είναι το μεγαλύτερο ποτάμι στο texas
mrl:answer(longest(river(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:451
nl:ποιο είναι το μεγαλύτερο ποτάμι στη μεγαλύτερη πολιτεία
mrl:answer(longest(river(loc_2(largest(state(all))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:452
nl:ποιο είναι το μεγαλύτερο ποτάμι στη μικρότερη πολιτεία στις usa
mrl:answer(longest(river(loc_2(smallest(state(loc_2(countryid('usa'))))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:453
nl:ποιο είναι το μακρύτερο ποτάμι στη πολιτεία με το ψηλότερο σημείο
mrl:answer(longest(river(loc_2(state(loc_1(highest(place(all))))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:454
nl:ποιο είναι το μεγαλύτερο ποτάμι στην πολιτεία με τις περισσότερες κύριες πόλεις
mrl:answer(longest(river(loc_2(most(state(loc_1(major(city(all)))))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( all ) })

id:455
nl:ποιο είναι το μεγαλύτερο ποτάμι στις πολιτείες που συνορεύουν με τη nebraska
mrl:answer(longest(river(loc_2(state(next_to_2(stateid('nebraska')))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' nebraska ' })

id:456
nl:ποιο είναι το μακρύτερο ποτάμι στις ηνωμένες πολιτείες
mrl:answer(longest(river(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:457
nl:ποιο είναι το μακρύτερο ποτάμι στις us
mrl:answer(longest(river(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:458
nl:ποιο είναι το μακρύτερο ποτάμι που δεν διασχίζει το texas
mrl:answer(longest(exclude(river(all), traverse_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ exclude ( *n:River , *n:River ) })
*n:River -> ({ river ( all ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:459
nl:ποιο είναι το μεγαλύτερο ποτάμι που διασχίζει μια πολιτεία που συνορεύει με την indiana
mrl:answer(longest(river(traverse_2(state(next_to_2(stateid('indiana')))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' indiana ' })

id:460
nl:ποιο είναι το μακρύτερο ποτάμι που διασχίζει το colorado
mrl:answer(longest(river(traverse_2(stateid('colorado')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:461
nl:ποιο είναι το μεγαλύτερο ποτάμι που διασχίζει τις πολιτείες που συνορεύουν την πολιτεία που συνορεύει τις περισσότερες πολιτείες
mrl:answer(longest(river(traverse_2(state(next_to_2(most(state(next_to_2(state(all))))))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:462
nl:ποιο είναι το μεγαλύτερο ποτάμι που διασχίζει μια πολιτεία που συνορεύει με το tennessee
mrl:answer(longest(river(traverse_2(state(next_to_2(stateid('tennessee')))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' tennessee ' })

id:463
nl:ποιο είναι το χαμηλότερο υψόμετρο στην pennsylvania
mrl:answer(lowest(place(loc_2(stateid('pennsylvania')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' pennsylvania ' })

id:464
nl:ποιο είναι το χαμηλότερο σημείο στο arkansas
mrl:answer(lowest(place(loc_2(stateid('arkansas')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' arkansas ' })

id:465
nl:ποιο είναι το χαμηλότερο σημείο στην california
mrl:answer(lowest(place(loc_2(stateid('california')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:466
nl:ποιο είναι το χαμηλότερο σημείο στη louisiana
mrl:answer(lowest(place(loc_2(stateid('louisiana')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' louisiana ' })

id:467
nl:ποιο είναι το χαμηλότερο σημείο στη massachusetts
mrl:answer(lowest(place(loc_2(stateid('massachusetts')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' massachusetts ' })

id:468
nl:ποιο είναι το χαμηλότερο σημείο στο mississippi
mrl:answer(lowest(place(loc_2(stateid('mississippi')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' mississippi ' })

id:469
nl:ποιο είναι το χαμηλότερο σημείο στη nebraska σε μέτρα
mrl:answer(lowest(place(loc_2(stateid('nebraska')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' nebraska ' })

id:470
nl:ποιο είναι το χαμηλότερο σημείο στο oregon
mrl:answer(lowest(place(loc_2(stateid('oregon')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' oregon ' })

id:471
nl:ποιο είναι το χαμηλότερο σημείο στο texas
mrl:answer(lowest(place(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:472
nl:ποιο είναι το χαμηλότερο σημείο στην πολιτεία της california
mrl:answer(lowest(place(loc_2(state(stateid('california'))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:473
nl:ποιο είναι το χαμηλότερο σημείο στην πολιτεία του texas
mrl:answer(lowest(place(loc_2(state(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:474
nl:ποιο είναι το χαμηλότερο σημείο στις ηνωμένες πολιτείες
mrl:answer(lowest(place(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:475
nl:ποιο είναι το χαμηλότερο σημείο στις usa
mrl:answer(lowest(place(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:476
nl:ποιο είναι το χαμηλότερο σημείο στο wisconsin
mrl:answer(lowest(place(loc_2(stateid('wisconsin')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' wisconsin ' })

id:477
nl:ποιο είναι το χαμηλότερο σημείο όλων των πολιτειών τις οποίες διασχίζει ο ποταμός colorado
mrl:answer(lowest(place(loc_2(state(traverse_1(river(riverid('colorado'))))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' colorado ' })

id:478
nl:ποιο είναι το χαμηλότερο σημείο του colorado
mrl:answer(lowest(place(loc_2(stateid('colorado')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:479
nl:ποιο είναι το χαμηλότερο σημείο της πολιτείας με τη μεγαλύτερη επιφάνεια
mrl:answer(lowest(place(loc_2(largest_one(area_1(state(all)))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ largest_one ( area_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:480
nl:ποιο είναι το χαμηλότερο σημείο στις ηπα
mrl:answer(lowest(place(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:481
nl:ποιες είναι οι κύριες πόλεις στη montana
mrl:answer(major(city(loc_2(stateid('montana')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' montana ' })

id:482
nl:ποιο είναι το μεγαλύτερο υψόμετρο στο san francisco
mrl:answer(highest(place(loc_2(cityid('san francisco', _)))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' san francisco ' })

id:483
nl:ποια είναι η πιο πυκνή πολιτεία στις ηπα
mrl:answer(largest_one(density_1(state(loc_2(countryid('usa'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:484
nl:ποια είναι η πολυπληθέστερη πρωτεύουσα στις usa
mrl:answer(largest_one(population_1(capital(loc_2(countryid('usa'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:485
nl:ποια είναι η πολυπληθέστερη πολιτεία που συνορεύει με την oklahoma
mrl:answer(largest_one(population_1(state(next_to_2(stateid('oklahoma'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' oklahoma ' })

id:486
nl:ποια είναι η πιο πολυπληθής πόλη
mrl:answer(largest_one(population_1(city(all))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( all ) })

id:487
nl:ποια είναι η πιο πολυπληθής πόλη στο texas
mrl:answer(largest_one(population_1(city(loc_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:488
nl:ποια είναι η πολυπληθέστερη πόλη στην wyoming
mrl:answer(largest_one(population_1(city(loc_2(stateid('wyoming'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' wyoming ' })

id:489
nl:ποια είναι η πολυπληθέστερη πολιτεία
mrl:answer(largest_one(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:490
nl:ποια είανι η πολυπληθέστερη πολιτεία στις us
mrl:answer(largest_one(population_1(state(loc_2(countryid('usa'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:491
nl:ποια είναι η πιο πολυπληθής πολιτεία που διασχίζει ο mississippi
mrl:answer(largest_one(population_1(state(traverse_1(riverid('mississippi'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:492
nl:ποιο είναι το όνομα της πολιτείας με το χαμηλότερο σημείο
mrl:answer(state(loc_1(lowest(place(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:493
nl:ποιος είναι ο αριθμός των γειτονικών πολιτειών του kentucky
mrl:answer(count(state(next_to_2(stateid('kentucky')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ count ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' kentucky ' })

id:494
nl:ποια είναι η πυκνότητα πληθυσμού στην πολιτεία με πρωτεύουσα το austin
mrl:answer(density_1(state(loc_1(capital(cityid('austin', _))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' austin ' })

id:495
nl:ποια είναι η πυκνότητα πληθυσμού του maine
mrl:answer(density_1(stateid('maine')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' maine ' })

id:496
nl:ποια είναι η πυκνότητα του πληθυσμού της south dakota
mrl:answer(density_1(stateid('south dakota')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' south dakota ' })

id:497
nl:ποια είναι η πυκνότητα πληθυσμού του texas
mrl:answer(density_1(stateid('texas')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:498
nl:ποια είναι η πυκνότητα πληθυσμού της μεγαλύτερης πολιτείας
mrl:answer(density_1(largest(state(all))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:499
nl:ποια είναι η πυκνότητα πληθυσμού της μικρότερης πολιτείας
mrl:answer(density_1(smallest(state(all))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:500
nl:ποια είναι η πυκνότητα πληθυσμού της πολιτείας με τη μικρότερη επιφάνεια
mrl:answer(density_1(smallest_one(area_1(state(all)))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:State ) })
*n:State -> ({ smallest_one ( area_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:501
nl:ποια είναι η πυκνότητα πληθυσμού στην πολιτεία με το μικρότερο πληθυσμό
mrl:answer(density_1(smallest_one(population_1(state(all)))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:State ) })
*n:State -> ({ smallest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:502
nl:ποιος είναι η πυκνότητα πληθυσμού στο wyoming
mrl:answer(density_1(stateid('wyoming')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' wyoming ' })

id:503
nl:ποιος είναι ο πληθυσμός της boston
mrl:answer(population_1(cityid('boston', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' boston ' })

id:504
nl:ποιος είναι ο πληθυσμός της alaska
mrl:answer(population_1(stateid('alaska')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:505
nl:ποιος είναι ο πληθυσμός της arizona
mrl:answer(population_1(stateid('arizona')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' arizona ' })

id:506
nl:ποιος είναι ο πληθυσμός της atlanta
mrl:answer(population_1(cityid('atlanta', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' atlanta ' })

id:507
nl:ποιος είναι ο πληθυσμός της atlanta ga
mrl:answer(population_1(cityid('atlanta', 'ga')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })
*n:CityName -> ({ ' atlanta ' })
*n:StateAbbrev -> ({ ' ga ' })

id:508
nl:ποιος είναι ο πληθυσμός του austin
mrl:answer(population_1(cityid('austin', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' austin ' })

id:509
nl:ποιος είναι ο πληθυσμός του austin texas
mrl:answer(population_1(cityid('austin', 'tx')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })
*n:CityName -> ({ ' austin ' })
*n:StateAbbrev -> ({ ' tx ' })

id:510
nl:ποιος είναι ο πληθυσμός της boston massachusetts
mrl:answer(population_1(cityid('boston', 'ma')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })
*n:CityName -> ({ ' boston ' })
*n:StateAbbrev -> ({ ' ma ' })

id:511
nl:ποιος είναι ο πληθυσμός του boulder
mrl:answer(population_1(cityid('boulder', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' boulder ' })

id:512
nl:ποιος είναι ο πληθυσμός της california
mrl:answer(population_1(stateid('california')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:513
nl:ποιος είναι ο πληθυσμός του dallas
mrl:answer(population_1(cityid('dallas', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' dallas ' })

id:514
nl:ποιος είναι ο πληθυσμός του denver
mrl:answer(population_1(cityid('denver', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' denver ' })

id:515
nl:ποιος είναι ο πληθυσμός του erie pennsylvania
mrl:answer(population_1(cityid('erie', 'pa')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })
*n:CityName -> ({ ' erie ' })
*n:StateAbbrev -> ({ ' pa ' })

id:516
nl:ποιος είναι ο πληθυσμός της hawaii
mrl:answer(population_1(stateid('hawaii')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' hawaii ' })

id:517
nl:ποιος είναι ο πληθυσμός του houston
mrl:answer(population_1(cityid('houston', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' houston ' })

id:518
nl:ποιος είναι ο πληθυσμός του idaho
mrl:answer(population_1(stateid('idaho')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' idaho ' })

id:519
nl:ποιος είναι ο πληθυσμός του illinois
mrl:answer(population_1(stateid('illinois')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' illinois ' })

id:520
nl:ποιος είναι ο πληθυσμός του maine
mrl:answer(population_1(stateid('maine')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' maine ' })

id:521
nl:ποιος είναι ο πληθυσμός του maryland
mrl:answer(population_1(stateid('maryland')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' maryland ' })

id:522
nl:ποιος είναι ο πληθυσμός της minnesota
mrl:answer(population_1(stateid('minnesota')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' minnesota ' })

id:523
nl:ποιος είναι ο πληθυσμός της montana
mrl:answer(population_1(stateid('montana')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' montana ' })

id:524
nl:ποιος είναι ο πληθυσμός του new mexico
mrl:answer(population_1(stateid('new mexico')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new mexico ' })

id:525
nl:ποιος είναι ο πληθυσμός της new york
mrl:answer(population_1(stateid('new york')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new york ' })

id:526
nl:ποιος είναι ο πληθυσμός της new york city
mrl:answer(population_1(city(cityid('new york', _))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' new york ' })

id:527
nl:ποιος είναι ο πληθυσμός του oregon
mrl:answer(population_1(stateid('oregon')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' oregon ' })

id:528
nl:ποιος είναι ο πληθυσμός του portland maine
mrl:answer(population_1(cityid('portland', 'me')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })
*n:CityName -> ({ ' portland ' })
*n:StateAbbrev -> ({ ' me ' })

id:529
nl:ποιος είναι ο πληθυσμός του rhode island
mrl:answer(population_1(stateid('rhode island')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' rhode island ' })

id:530
nl:ποιος είναι ο πληθυσμός του sacramento
mrl:answer(population_1(cityid('sacramento', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' sacramento ' })

id:531
nl:ποιος είναι ο πληθυσμός του san antonio
mrl:answer(population_1(cityid('san antonio', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' san antonio ' })

id:532
nl:ποιος είναι ο πληθυσμός του seattle
mrl:answer(population_1(cityid('seattle', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' seattle ' })

id:533
nl:ποιος είναι ο πληθυσμός του seattle washington
mrl:answer(population_1(cityid('seattle', 'wa')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })
*n:CityName -> ({ ' seattle ' })
*n:StateAbbrev -> ({ ' wa ' })

id:534
nl:ποιος είναι ο πληθυσμός της south dakota
mrl:answer(population_1(stateid('south dakota')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' south dakota ' })

id:535
nl:ποιος είναι ο πληθυσμός του springfield missouri
mrl:answer(population_1(cityid('springfield', 'mo')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })
*n:CityName -> ({ ' springfield ' })
*n:StateAbbrev -> ({ ' mo ' })

id:536
nl:ποιος είναι ο πληθυσμός του springfield νότια ντακότα
mrl:answer(population_1(cityid('springfield', 'sd')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })
*n:CityName -> ({ ' springfield ' })
*n:StateAbbrev -> ({ ' sd ' })

id:537
nl:ποιος είναι ο πληθυσμός του tempe arizona
mrl:answer(population_1(cityid('tempe', 'az')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })
*n:CityName -> ({ ' tempe ' })
*n:StateAbbrev -> ({ ' az ' })

id:538
nl:ποιο είναι ο πληθυσμός του texas
mrl:answer(population_1(stateid('texas')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:539
nl:ποιος είναι ο πληθυσμός της πρωτεύουσας της μεγαλύτερης πολιτείας
mrl:answer(population_1(capital(loc_2(largest(state(all))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:540
nl:ποιος είναι ο πληθυσμός της πρωτεύουσας της μεγαλύτερης πολιτείας την οποία διασχίζει ο mississippi
mrl:answer(population_1(capital(loc_2(largest(state(traverse_1(riverid('mississippi'))))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:541
nl:ποιος είναι ο πληθυσμός της πρωτεύουσας της μικρότερης πολιτείας
mrl:answer(population_1(capital(loc_2(smallest(state(all))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:542
nl:ποιος είναι ο πληθυσμός της μεγαλύτερης πόλης στην πολιτεία με τη μεγαλύτερη επιφάνεια
mrl:answer(population_1(largest(city(loc_2(largest_one(area_1(state(all))))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ largest_one ( area_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:543
nl:ποιος είναι ο πληθυσμός της μεγαλύτερης πολιτείας
mrl:answer(population_1(largest(state(all))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:544
nl:ποιος είναι ο πληθυσμός της μεγαλύτερης πολιτείας που συνορεύει με το texas
mrl:answer(population_1(largest(state(next_to_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:545
nl:ποιος είναι ο πληθυσμός των κύριων πόλεων στο wisconsin
mrl:answer(population_1(major(city(loc_2(stateid('wisconsin'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' wisconsin ' })

id:546
nl:ποιος είναι ο πληθυσμός της μικρότερης πολιτείας
mrl:answer(smallest(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ smallest ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:547
nl:ποιος είναι ο πληθυσμός της πολιτείας που συνορεύει με τις περισσότερες πολιτείες
mrl:answer(population_1(most(state(next_to_2(state(all))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:548
nl:ποιος είναι ο πληθυσμός της πολιτείας με την ψηλότερη πυκνότητα πληθυσμού
mrl:answer(population_1(largest_one(density_1(state(all)))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ largest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:549
nl:ποιος είναι ο πληθυσμός της πολιτείας με την μεγαλύτερη επιφάνεια
mrl:answer(population_1(largest_one(area_1(state(all)))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ largest_one ( area_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:550
nl:ποιος είναι ο πληθυσμός του tucson
mrl:answer(population_1(cityid('tucson', _)))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' tucson ' })

id:551
nl:ποιος είναι ο πληθυσμός της utah
mrl:answer(population_1(stateid('utah')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' utah ' })

id:552
nl:ποιος είναι πληθυσμός της washington
mrl:answer(population_1(stateid('washington')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' washington ' })

id:553
nl:ποιος είναι ο πληθυσμός της washington dc
mrl:answer(population_1(cityid('washington', 'dc')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })
*n:CityName -> ({ ' washington ' })
*n:StateAbbrev -> ({ ' dc ' })

id:554
nl:ποιο είναι το ποτάμι που διασχίζει το ohio
mrl:answer(river(traverse_2(stateid('ohio'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' ohio ' })

id:555
nl:ποιο είναι το κοντύτερο ποτάμι
mrl:answer(shortest(river(all)))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ shortest ( *n:River ) })
*n:River -> ({ river ( all ) })

id:556
nl:ποιο είναι το μικρότερο ποτάμι στην alaska
mrl:answer(shortest(river(loc_2(stateid('alaska')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ shortest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:557
nl:ποιο είναι το μικρότερο ποτάμι στην iowa
mrl:answer(shortest(river(loc_2(stateid('iowa')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ shortest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' iowa ' })

id:558
nl:ποιο είναι το μικρότερο ποτάμι στη nebraska
mrl:answer(shortest(river(loc_2(stateid('nebraska')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ shortest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' nebraska ' })

id:559
nl:ποιο είναι το μικρότερο ποτάμι στο texas
mrl:answer(shortest(river(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ shortest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:560
nl:ποιο είναι το κοντύτερο ποτάμι στις ηνωμένες πολιτείες
mrl:answer(shortest(river(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ shortest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:561
nl:ποιο είναι το μικρότερο ποτάμι στις us
mrl:answer(shortest(river(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ shortest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:562
nl:ποιο είναι το κοντύτερο ποτάμι στις ηπα
mrl:answer(shortest(river(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ shortest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:563
nl:ποιο είναι το μέγεθος της california
mrl:answer(size(stateid('california')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ size ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:564
nl:ποιο είναι το μέγεθος της florida
mrl:answer(size(stateid('florida')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ size ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' florida ' })

id:565
nl:ποιο είναι το μέγεθος του texas
mrl:answer(size(stateid('texas')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ size ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:566
nl:ποιο είναι το μέγεθος της πρωτεύουσας του texas
mrl:answer(size(capital(loc_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ size ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:567
nl:ποιο είναι το μέγεθος της μεγαλύτερης πολιτείας στις ηπα
mrl:answer(size(largest(state(loc_2(countryid('usa'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ size ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:568
nl:ποια είναι η μικρότερη πόλη στην αλάσκα
mrl:answer(smallest(city(loc_2(stateid('alaska')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ smallest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:569
nl:ποια είναι η μικρότερη πόλη στο arkansas
mrl:answer(smallest(city(loc_2(stateid('arkansas')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ smallest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' arkansas ' })

id:570
nl:ποια είναι η μικρότερη πόλη στη hawaii
mrl:answer(smallest(city(loc_2(stateid('hawaii')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ smallest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' hawaii ' })

id:571
nl:ποια είναι η μικρότερη πόλη στη μεγαλύτερη πολιτεία
mrl:answer(smallest(city(loc_2(largest(state(all))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ smallest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:572
nl:ποια είναι η μικρότερη πόλη στις ηπα
mrl:answer(smallest(city(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ smallest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:573
nl:ποια είναι η μικρότερη πόλη στις ηπα
mrl:answer(smallest(city(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ smallest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:574
nl:ποια είναι η μικρότερη πόλη στην washington
mrl:answer(smallest(city(loc_2(stateid('washington')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ smallest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' washington ' })

id:575
nl:ποια είναι η μικρότερη πόλη στην μικρότερη πολιτεία στις ηπα
mrl:answer(smallest(city(loc_2(smallest(state(loc_2(countryid('usa'))))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ smallest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:576
nl:ποια είναι η μικρότερη πολιτεία που συνορεύει με το ohio
mrl:answer(smallest(state(next_to_2(stateid('ohio')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' ohio ' })

id:577
nl:ποια είναι η μικρότερη πολιτεία που συνορεύει με το wyoming
mrl:answer(smallest(state(next_to_2(stateid('wyoming')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' wyoming ' })

id:578
nl:ποια είναι η μικρότερη πολιτεία ανά επιφάνεια
mrl:answer(smallest_one(area_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( area_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:579
nl:ποια είναι η μικρότερη πολιτεία στις ηπα
mrl:answer(smallest(state(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:580
nl:ποια είναι η μικρότερη πολιτεία που συνορεύει το texas
mrl:answer(smallest(state(next_to_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:581
nl:ποια είναι η μικρότερη πολιτεία που συνορεύει τις περισσότερες πολιτείες
mrl:answer(smallest(most(state(next_to_2(state(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:582
nl:ποια είναι η μικρότερη πολιτεία την οποία διασχίζει ο ποταμός mississippi
mrl:answer(smallest(state(traverse_1(river(riverid('mississippi'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:583
nl:ποια είναι η μικρότερη πολιτεία που διασχίζει το μακρύτερο ποτάμι
mrl:answer(smallest(state(traverse_1(longest(river(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( all ) })

id:584
nl:ποια είναι η πολιτεία που περιέχει το ψηλότερο σημείο
mrl:answer(state(loc_1(highest(place(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:585
nl:ποια είναι η πολιτεία με το μεγαλύτερο υψόμετρο στις ηνωμένες πολιτείες
mrl:answer(state(loc_1(highest(place(loc_2(countryid('usa')))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:586
nl:ποια είναι η πολιτεία με το μεγαλύτερο εμβαδό
mrl:answer(largest_one(area_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( area_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:587
nl:ποια είναι η πολιτεία με τη μεγαλύτερη πυκνότητα στις ηπα
mrl:answer(largest_one(density_1(state(loc_2(countryid('usa'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:588
nl:ποια είναι η πολιτεία με τη μεγαλύτερη πυκνότητα πληθυσμού
mrl:answer(largest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:589
nl:ποια είναι η πολιτεία με το χαμηλότερο σημείο
mrl:answer(state(loc_1(lowest(place(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:590
nl:ποια είναι η πολιτεία με το χαμηλότερο πληθυσμό
mrl:answer(smallest_one(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:591
nl:ποια είναι η πολιτεία με τη μικρότερη πυκνότητα πληθυσμού
mrl:answer(smallest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:592
nl:ποια είναι η πολιτεία με την μικρότερη επιφάνεια
mrl:answer(smallest_one(area_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( area_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:593
nl:ποιο είναι το μεγαλύτερο βουνό στην αμερική
mrl:answer(highest(mountain(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ mountain ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:594
nl:ποιο είναι το ψηλότερο βουνό στις ηνωμένες πολιτείες
mrl:answer(highest(mountain(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ mountain ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:595
nl:ποιο είναι το συνολικό εμβαδό των ηπα
mrl:answer(area_1(countryid('usa')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ area_1 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:596
nl:ποιο είναι το συνολικό μήκος όλων των ποταμών στις ηπα
mrl:answer(sum(len(river(all))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ sum ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ river ( all ) })

id:597
nl:ποιος είναι ο συνολικός πληθυσμός των πολιτειών που συνορεύουν με το texas
mrl:answer(sum(population_1(state(next_to_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ sum ( *n:Num ) })
*n:Num -> ({ population_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:598
nl:ποιο είναι το μήκος του mississippi
mrl:answer(len(riverid('mississippi')))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ len ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:599
nl:ποιες κύριε πόλεις βρίσκονται στην pennsylvania
mrl:answer(major(city(loc_2(stateid('pennsylvania')))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' pennsylvania ' })

id:600
nl:ποιο κύριο ποτάμι διασχίζει το illinois
mrl:answer(major(river(traverse_2(stateid('illinois')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ major ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' illinois ' })

id:601
nl:ποια βουνά υπάρχουν στην alaska
mrl:answer(mountain(loc_2(stateid('alaska'))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ mountain ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:602
nl:ποιο ποτάμι διασχίζει το kansas
mrl:answer(river(traverse_2(stateid('kansas'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' kansas ' })

id:603
nl:ποιο ποτάμι διασχίζει το texas
mrl:answer(river(traverse_2(stateid('texas'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:604
nl:ποιο ποτάμι διασχίζει τις περισσότερες πολιτείες
mrl:answer(most(river(traverse_2(state(all)))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ most ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:605
nl:ποιο ποτάμι είναι το μακρύτερο στις ηνωμένες πολιτείες
mrl:answer(longest(river(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:606
nl:ποιος ποταμός διασχίζει το illinois
mrl:answer(river(traverse_2(stateid('illinois'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' illinois ' })

id:607
nl:ποιο ποτάμι διασχίζει τις περισσότερες πολιτείες
mrl:answer(most(river(traverse_2(state(all)))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ most ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:608
nl:ποιο ποτάμι διασχίζει την πολιτεία με τις περισσότερες πόλεις
mrl:answer(river(traverse_2(most(state(loc_1(city(all)))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( all ) })

id:609
nl:ποια ποτάμι διασχίζει τη virginia
mrl:answer(river(traverse_2(stateid('virginia'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' virginia ' })

id:610
nl:ποιο ποτάμι διαπερνά τις περισσότερες πολιτείες
mrl:answer(most(river(traverse_2(state(all)))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ most ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:611
nl:ποιο ποτάμι διασχίζει την πολιτεία που συνορεύει με τις περισσότερες πολιτείες
mrl:answer(river(traverse_2(most(state(next_to_2(state(all)))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:612
nl:ποια ποτάμια υπάρχουν στη nevada
mrl:answer(river(loc_2(stateid('nevada'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' nevada ' })

id:613
nl:ποια ποτάμια υπάρχουν στο new mexico
mrl:answer(river(loc_2(stateid('new mexico'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new mexico ' })

id:614
nl:ποια ποτάμια είναι στο oregon
mrl:answer(river(loc_2(stateid('oregon'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' oregon ' })

id:615
nl:ποια ποτάμια είναι στις πολιτείες που συνορεύουν με το texas
mrl:answer(river(loc_2(state(next_to_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:616
nl:πόσα ποτάμια υπάρχουν στο texas
mrl:answer(river(loc_2(stateid('texas'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:617
nl:ποια ποτάμια είναι στη utah
mrl:answer(river(loc_2(stateid('utah'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' utah ' })

id:618
nl:ποια ποτάμια υπάρχουν στο texas
mrl:answer(river(loc_2(stateid('texas'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:619
nl:ποια ποτάμια δεν διασχίζουν το tennessee
mrl:answer(exclude(river(all), traverse_2(stateid('tennessee'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ exclude ( *n:River , *n:River ) })
*n:River -> ({ river ( all ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' tennessee ' })

id:620
nl:ποια ποτάμια διασχίζουν το colorado
mrl:answer(river(traverse_2(stateid('colorado'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:621
nl:ποια ποτάμια διασχίζουν το missouri
mrl:answer(river(traverse_2(stateid('missouri'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' missouri ' })

id:622
nl:ποια ποτάμια διασχίζουν πολιτείες που συνορεύουν με την αλαμπάμα
mrl:answer(river(traverse_2(state(next_to_1(stateid('alabama'))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alabama ' })

id:623
nl:ποια ποτάμια διασχίζουν πολιτείες που συνορεύουν με την πολιτεία με τον μεγαλύτερο πληθυσμό
mrl:answer(river(traverse_2(state(next_to_2(largest_one(population_1(state(all))))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:624
nl:ποια ποτάμια διασχίζουν τη μεγαλύτερη πολιτεία
mrl:answer(river(traverse_2(largest(state(all)))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:625
nl:ποια ποτάμια διασχίζουν την πολιτεία με το μεγαλύτερο πληθυσμό
mrl:answer(river(traverse_2(largest_one(population_1(state(all))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:626
nl:ποια ποτάμια διασχίζουν την arizona
mrl:answer(river(traverse_2(stateid('arizona'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' arizona ' })

id:627
nl:ποιοι ποταμί διαπερνούν το austin texas
mrl:answer(river(traverse_2(cityid('austin', 'tx'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , *n:StateAbbrev ) })
*n:CityName -> ({ ' austin ' })
*n:StateAbbrev -> ({ ' tx ' })

id:628
nl:ποιο ποτάμι διασχίζει το colorado
mrl:answer(river(traverse_2(stateid('colorado'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:629
nl:ποια ποτάμια διασχίζουν τη louisiana
mrl:answer(river(traverse_2(stateid('louisiana'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' louisiana ' })

id:630
nl:ποια ποτάμια διασχίζουν το maine
mrl:answer(river(traverse_2(stateid('maine'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' maine ' })

id:631
nl:ποια ποτάμια διασχίζουν τη new york
mrl:answer(river(traverse_2(stateid('new york'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new york ' })

id:632
nl:ποια ποτάμια διασχίζουν την πολιτεία με το χαμηλότερο σημείο στις ηπα
mrl:answer(river(traverse_2(state(loc_1(lowest(place(loc_2(countryid('usa')))))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:633
nl:ποια ποτάμια διασχίζουν τις πολιτείες που συνορεύουν την πολιτεία με πρωτεύουσα την atlanta
mrl:answer(river(traverse_2(state(next_to_2(state(loc_1(capital(cityid('atlanta', _)))))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' atlanta ' })

id:634
nl:πόσα ποτάμια διασχίζουν τη west virginia
mrl:answer(river(traverse_2(stateid('west virginia'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' west virginia ' })

id:635
nl:ποια ποτάμια διασχίζουν την πολιτεία που συνορεύει με τις περισσότερες πολιτείες
mrl:answer(river(traverse_2(most(state(next_to_2(state(all)))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:636
nl:ποια πολιτεία που συνορεύει με τη nevada έχει τον μεγαλύτερο πληθυσμό
mrl:answer(largest_one(population_1(state(next_to_2(stateid('nevada'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' nevada ' })

id:637
nl:ποια πολιτεία συνορεύει με το michigan
mrl:answer(state(next_to_2(stateid('michigan'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' michigan ' })

id:638
nl:ποια πολιτεία συνορεύει με τις περισσότερες άλλες πολιτείες
mrl:answer(most(state(next_to_2(state(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:639
nl:ποια πολιτεία συνορεύει με τη new york
mrl:answer(state(next_to_2(stateid('new york'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new york ' })

id:640
nl:ποια πολιτεία συνορεύει με τις λιγότερες πολιτείες
mrl:answer(fewest(state(next_to_2(state(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ fewest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:641
nl:ποια πολιτεία συνορεύει με τις λιγότερες πολιτείες μη συμπεριλαμβανομένης της alaska και μη συμπεριλαμβανομένης της hawaii
mrl:answer(fewest(state(next_to_2(exclude(exclude(state(all), stateid('alaska')), stateid('hawaii'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ fewest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ exclude ( *n:State , *n:State ) })
*n:State -> ({ exclude ( *n:State , *n:State ) })
*n:State -> ({ state ( all ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' hawaii ' })

id:642
nl:ποια πολιτεία συνορεύει με τις περισσότερες πολιτείες
mrl:answer(most(state(next_to_2(state(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:643
nl:ποιες πολιτείες συνορεύουν με την πολιτεία με τον χαμηλότερο πληθυσμό
mrl:answer(state(next_to_2(smallest_one(population_1(state(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ smallest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:644
nl:ποια πολιτεία περιέχει το ψηλότερο σημείο στις ηπα
mrl:answer(state(loc_1(highest(place(loc_2(countryid('usa')))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:645
nl:ποια πολιτεία από αυτές που διασχίζει ο ποταμός colorado περιέχει το ψηλότερο σημείο
mrl:answer(state(loc_1(highest(place(loc_2(state(traverse_1(river(riverid('colorado'))))))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' colorado ' })

id:646
nl:ποια πολιτεία έχει το μεγαλύτερο υψόμετρο
mrl:answer(state(loc_1(highest(place(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:647
nl:ποια πολιτεία δεν έχει ποτάμια
mrl:answer(exclude(state(all), loc_1(river(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ exclude ( *n:State , *n:State ) })
*n:State -> ({ state ( all ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ river ( all ) })

id:648
nl:ποια πολιτεία έχει πρωτεύουσα το salem
mrl:answer(state(loc_1(capital(cityid('salem', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' salem ' })

id:649
nl:ποια πολιτεία έχει την πόλη flint
mrl:answer(state(loc_1(city(cityid('flint', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' flint ' })

id:650
nl:ποια πολιτεία έχει η πόλη με το μεγαλύτερο πληθυσμό
mrl:answer(state(loc_1(largest_one(population_1(city(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( all ) })

id:651
nl:ποια πολιτεία έχει την πόλη με τον περισσότερο πληθυσμό
mrl:answer(state(loc_1(largest_one(population_1(city(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( all ) })

id:652
nl:ποια πολιτεία έχει τη μεγαλύερη πυκνότητα πληθυσμού
mrl:answer(largest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:653
nl:ποια πολιτεία έχει το μεγαλύτερο υψόμετρο
mrl:answer(state(loc_1(highest(place(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:654
nl:ποια πολιτεία έχει τον μεγαλύτερο πληθυσμό
mrl:answer(largest_one(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:655
nl:ποια πολιτεία έχει τη μεγαλύτερη πυκνότητα πληθυσμού
mrl:answer(largest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:656
nl:ποια πολιτεία έχει το μεγαλύτερο εμβαδό
mrl:answer(largest_one(area_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( area_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:657
nl:ποια πολιτεία έχει τη μεγαλύτερη πρωτεύουσα
mrl:answer(state(loc_1(largest(capital(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ capital ( all ) })

id:658
nl:ποια πολιτεία έχει τη μεγαλύτερη πόλη
mrl:answer(state(loc_1(largest(city(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( all ) })

id:659
nl:ποια πολιτεία έχει τον περισσότερο πληθυσμό
mrl:answer(largest_one(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:660
nl:ποια πολιτεία έχει τη μεγαλύτερη πυκνότητα πληθυσμού
mrl:answer(largest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:661
nl:ποια πολιτεία έχει το μεγαλύτερο αστικό πληθυσμό
mrl:answer(largest_one(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:662
nl:ποια πολιτεία έχει τη μικρότερη πυκνότητα πληθυσμού
mrl:answer(smallest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:663
nl:ποια πολιτεία έχει το μακρύτερο ποτάμι
mrl:answer(state(loc_1(longest(river(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( all ) })

id:664
nl:ποια πολιτεία έχει τη μικρότερη πυκνότητα πληθυσμού
mrl:answer(smallest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:665
nl:ποια πολιτεία έχει τις περισσότερες πόλεις
mrl:answer(most(state(loc_1(city(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( all ) })

id:666
nl:ποια πολιτεία έχει τις περισσότερες κύριες πόλεις
mrl:answer(most(state(loc_1(major(city(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( all ) })

id:667
nl:ποια πολιτεία διασχίζουν τα περισσότερα κύρια ποτάμια
mrl:answer(most(state(traverse_1(major(river(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ major ( *n:River ) })
*n:River -> ({ river ( all ) })

id:668
nl:ποια πολιτεία έχει του περισσότερους ανθρώπους
mrl:answer(largest_one(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:669
nl:ποια πολιτεία έχει τα περισσότερα ποτάμια
mrl:answer(most(state(loc_1(river(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ river ( all ) })

id:670
nl:ποια πολιτεία διασχίζουν τα περισσότερα ποτάμια
mrl:answer(most(state(traverse_1(river(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( all ) })

id:671
nl:ποια πολιτεία έχει το κοντύτερο ποταμό
mrl:answer(state(loc_1(shortest(river(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ shortest ( *n:River ) })
*n:River -> ({ river ( all ) })

id:672
nl:ποια πολιτεία έχει το μικρότερο εμβαδό
mrl:answer(smallest_one(area_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( area_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:673
nl:ποια πολιτεία έχει τη μικρότερη πρωτεύουσα
mrl:answer(state(loc_1(smallest(capital(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ smallest ( *n:City ) })
*n:City -> ({ capital ( all ) })

id:674
nl:ποια πολιτεία έχει τον μικρότερο πληθυσμό
mrl:answer(smallest_one(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:675
nl:ποια πολιτεία έχει τη μικρότερη πυκνότητα πληθυσμού
mrl:answer(smallest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:676
nl:ποια πολιτεία έχει το μικρότερο αστικό πληθυσμό
mrl:answer(smallest_one(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:677
nl:ποια πολιτεία έχει την αραιότερη πυκνότητα πληθυσμού
mrl:answer(smallest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:678
nl:σε ποια πολιτεία είναι το austin
mrl:answer(state(loc_1(cityid('austin', _))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' austin ' })

id:679
nl:ποιας πολιτείας είναι το austin πρωτεύουσα
mrl:answer(state(loc_1(capital(cityid('austin', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' austin ' })

id:680
nl:σε ποια πολιτεία είναι η boston
mrl:answer(state(loc_1(cityid('boston', _))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' boston ' })

id:681
nl:ποιας πολιτείας είναι πρωτεύουσα το columbus
mrl:answer(state(loc_1(capital(cityid('columbus', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' columbus ' })

id:682
nl:σε ποια πολιτεία είναι το dallas
mrl:answer(state(loc_1(cityid('dallas', _))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' dallas ' })

id:683
nl:σε ποια πολιτεία βρίσκεται το des moines
mrl:answer(state(loc_1(cityid('des moines', _))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' des moines ' })

id:684
nl:σε ποια πολιτεία είναι το miami
mrl:answer(state(loc_1(cityid('miami', _))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' miami ' })

id:685
nl:σε ποια πολιτεία βρίσκεται το pittsburgh
mrl:answer(state(loc_1(cityid('pittsburgh', _))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' pittsburgh ' })

id:686
nl:ποια πολιτεία είναι η μεγαλύτερη
mrl:answer(largest(state(all)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:687
nl:ποια πολιτεία είναι μεγαλύτερη σε πληθυσμό
mrl:answer(largest_one(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:688
nl:ποια πολιτεία είναι η πολιτεία με τα περισσότερα ποτάμια
mrl:answer(state(most(state(loc_1(river(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ river ( all ) })

id:689
nl:ποια πολιτεία που συνορεύει με το texas έχει τον μεγαλύτερο πληθυσμό
mrl:answer(largest_one(population_1(state(next_to_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:690
nl:ποια πολιτεία που συνορεύει με το texas είναι η μεγαλύτερη
mrl:answer(largest(state(next_to_2(stateid('texas')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:691
nl:ποια πολιτεία την οποία διασχίζει ο mississippi έχει τον μεγαλύτερο πληθυσμό
mrl:answer(largest_one(population_1(state(traverse_1(riverid('mississippi'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:692
nl:ποιες πολιτείες είναι δίπλα στην arizona
mrl:answer(state(next_to_2(stateid('arizona'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' arizona ' })

id:693
nl:ποιες πολιτείες είναι δίπλα στο texas
mrl:answer(state(next_to_2(stateid('texas'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:694
nl:ποιες πολιτείες είναι δίπλα στο mississippi
mrl:answer(state(next_to_2(stateid('mississippi'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' mississippi ' })

id:695
nl:ποιες πολιτείες συνορεύουν με την alaska
mrl:answer(state(next_to_2(stateid('alaska'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:696
nl:ποιες πολιτείες συνορεύουν το arkansas
mrl:answer(state(next_to_2(stateid('arkansas'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' arkansas ' })

id:697
nl:ποιες πολιτείες συνορεύουν με το delaware
mrl:answer(state(next_to_2(stateid('delaware'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' delaware ' })

id:698
nl:ποιες πολιτείες συνορεύουν με τη florida
mrl:answer(state(next_to_2(stateid('florida'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' florida ' })

id:699
nl:ποιες πολιτείες συνορεύουν με τη georgia
mrl:answer(state(next_to_2(stateid('georgia'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' georgia ' })

id:700
nl:ποιες πολιτείες συνορεύουν με τη hawaii
mrl:answer(state(next_to_2(stateid('hawaii'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' hawaii ' })

id:701
nl:ποιες πολιτείες συνορεύουν με την indiana
mrl:answer(state(next_to_2(stateid('indiana'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' indiana ' })

id:702
nl:ποιες πολιτείες συνορεύουν με το kentucky
mrl:answer(state(next_to_2(stateid('kentucky'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' kentucky ' })

id:703
nl:ποιες πολιτείες συνορεύουν με το michigan
mrl:answer(state(next_to_2(stateid('michigan'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' michigan ' })

id:704
nl:ποιες πολιτείες συνορεύουν με το missouri
mrl:answer(state(next_to_2(stateid('missouri'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' missouri ' })

id:705
nl:ποιες πολιτείες συνορεύουν με τη montana
mrl:answer(state(next_to_2(stateid('montana'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' montana ' })

id:706
nl:ποιες πολιτείες συνορεύουν με το new hampshire
mrl:answer(state(next_to_2(stateid('new hampshire'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new hampshire ' })

id:707
nl:ποιες πολιτείες συνορεύουν με το new jersey
mrl:answer(state(next_to_2(stateid('new jersey'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new jersey ' })

id:708
nl:ποιες πολιτείες συνορεύουν με το ohio
mrl:answer(state(next_to_2(stateid('ohio'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' ohio ' })

id:709
nl:ποιες πολιτείες συνορεύουν με  το rhode island
mrl:answer(state(next_to_2(stateid('rhode island'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' rhode island ' })

id:710
nl:ποιες πολιτείες συνορεύουν με πολιτείες που συνορεύουν με το colorado
mrl:answer(state(next_to_2(state(next_to_2(stateid('colorado'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:711
nl:ποιες πολιτείες συνορεύουν πολιτείες που συνορεύουν με το mississippi
mrl:answer(state(next_to_2(state(next_to_2(stateid('mississippi'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' mississippi ' })

id:712
nl:πόσες πολιτείες συνορεύουν με πολιτείες που συνορεύουν με πολιτείες που συνορεύουν με τη florida
mrl:answer(state(next_to_2(state(next_to_2(state(next_to_2(stateid('florida'))))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' florida ' })

id:713
nl:ποιες πολιτείες συνορεύουν με πολιτείες που συνορεύουν με πολιτείες που συνορεύουν με πολιτείες που συνορεύουν με το texas
mrl:answer(state(next_to_2(state(next_to_2(state(next_to_2(state(next_to_2(stateid('texas'))))))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:714
nl:ποιες πολιτείες συνορεύουν με πολιτείες που συνορεύουν με την πολιτεία με το μεγαλύτερο πληθυσμό
mrl:answer(state(next_to_2(state(next_to_2(largest_one(population_1(state(all))))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:715
nl:ποιες πολιτείες συνορεύουν με πολιτείες τις οποίες διασχίζει ο mississippi
mrl:answer(state(next_to_2(state(traverse_1(riverid('mississippi'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:716
nl:ποιες πολιτείες συνορεύουν με πολιτείες που διασχίζει ο ohio
mrl:answer(state(next_to_2(state(traverse_1(riverid('ohio'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' ohio ' })

id:717
nl:ποιες πολιτείες συνορεύουν πολιτείες τις οποίες διασχίζει ο mississippi
mrl:answer(state(next_to_2(state(traverse_1(riverid('mississippi'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:718
nl:ποια πολιτεία συνορεύει με το texas
mrl:answer(state(next_to_2(stateid('texas'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:719
nl:ποιες πολιτείες συνορεύουν με το texas και έχουν κύρια ποτάμια
mrl:answer(intersection(state(next_to_2(stateid('texas'))), loc_1(major(river(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ intersection ( *n:State , *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ major ( *n:River ) })
*n:River -> ({ river ( all ) })

id:720
nl:ποιες πολιτείες συνορεύουν με τον mississippi ποταμό
mrl:answer(state(next_to_2(river(riverid('mississippi')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:721
nl:ποιες πολιτείες συνορεύουν την πιο πολυπληθή πολιτεία
mrl:answer(state(next_to_2(largest_one(population_1(state(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:722
nl:ποιες πολιτείες συνορεύουν με την πολιτεία που συνορεύει με τις περισσότερες πολιτείες
mrl:answer(state(next_to_2(most(state(next_to_2(state(all)))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:723
nl:ποιες πολιτείες συνορεύουν με την πολιτεία με τις περισσότερες πόλεις
mrl:answer(state(next_to_2(most(state(loc_1(city(all)))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( all ) })

id:724
nl:ποιες πολιτείες συνορεύουν με την πολιτεία με τις περισσότερες κύριες πόλεις
mrl:answer(state(next_to_2(most(state(loc_1(major(city(all))))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( all ) })

id:725
nl:ποιες πολιτείες συνορεύουν με την πολιτεία με το μικρότερο εμβαδό
mrl:answer(state(next_to_2(smallest_one(area_1(state(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ smallest_one ( area_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:726
nl:ποιες πολιτείες συνορεύουν με τις πολιτείες με τις περισσότερες πόλεις
mrl:answer(state(next_to_2(most(state(loc_1(city(all)))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( all ) })

id:727
nl:ποιες πολιτείες συνορεύουν με το wisconsin
mrl:answer(state(next_to_2(stateid('wisconsin'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' wisconsin ' })

id:728
nl:ποιων πολιτειών είναι πρωτεύουσα το dover
mrl:answer(state(capital_2(cityid('dover', _))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ capital_2 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' dover ' })

id:729
nl:ποιες πολιτείες περιέχουν τουλάχιστον ένα κύριο ποτάμι
mrl:answer(state(loc_1(major(river(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ major ( *n:River ) })
*n:River -> ({ river ( all ) })

id:730
nl:ποιες πολιτείες διασχίζει ο ποταμός colorado
mrl:answer(state(traverse_1(river(riverid('colorado')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' colorado ' })

id:731
nl:ποιες πολιτείες διασχίζει ο ποταμός delaware
mrl:answer(state(traverse_1(river(riverid('delaware')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' delaware ' })

id:732
nl:ποιες πολιτείες διασχίζει ο ποταμός mississippi
mrl:answer(state(traverse_1(river(riverid('mississippi')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:733
nl:ποιες πολιτείες διασχίζει ο mississippi
mrl:answer(state(traverse_1(riverid('mississippi'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:734
nl:ποιες πολιτείες διασχίζει ο ποταμός missouri
mrl:answer(state(traverse_1(river(riverid('missouri')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' missouri ' })

id:735
nl:ποιες πολιτείες διασχίζει ο missouri
mrl:answer(state(traverse_1(riverid('missouri'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' missouri ' })

id:736
nl:ποιες πολιτείες διασχίζει ο ohio ποταμός
mrl:answer(state(traverse_1(river(riverid('ohio')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' ohio ' })

id:737
nl:ποιες πολιτείες διασχίζει ο ποταμός ohio
mrl:answer(state(traverse_1(river(riverid('ohio')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' ohio ' })

id:738
nl:ποιες πολιτείες διασχίζει το μικρότερο ποτάμι
mrl:answer(state(traverse_1(shortest(river(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ shortest ( *n:River ) })
*n:River -> ({ river ( all ) })

id:739
nl:ποιες πολιτείες έχουν πρωτεύουσα η οποία είναι το ψηλότερο σημείο στην πολιτεία
mrl:answer(state(loc_1(capital(highest(place(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ capital ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:740
nl:ποιες πολιτείες έχουν μια πόλη που ονομάζεται austin
mrl:answer(state(loc_1(city(cityid('austin', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' austin ' })

id:741
nl:ποιες πολιτείες έχουν πόλεις με όνομα austin
mrl:answer(state(loc_1(city(cityid('austin', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' austin ' })

id:742
nl:ποιες πολιτείες έχουν πόλεις που ονομάζονται dallas
mrl:answer(state(loc_1(city(cityid('dallas', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' dallas ' })

id:743
nl:ποιες πολιτείες έχουν πόλεις που ονομάζονται plano
mrl:answer(state(loc_1(city(cityid('plano', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' plano ' })

id:744
nl:ποιες πολιτείες έχουν πόλεις που ονομάζονται portland
mrl:answer(state(loc_1(city(cityid('portland', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' portland ' })

id:745
nl:ποιες πολιτείες έχουν πόλεις που ονομάζονται rochester
mrl:answer(state(loc_1(city(cityid('rochester', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' rochester ' })

id:746
nl:ποιες πολιτείες έχουν πόλεις με το όνομα salt lake city
mrl:answer(state(loc_1(city(cityid('salt lake city', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' salt lake city ' })

id:747
nl:ποιες πολιτείες δεν έχουν συνορεύουσα πολιτεία
mrl:answer(exclude(state(all), next_to_2(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ exclude ( *n:State , *n:State ) })
*n:State -> ({ state ( all ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:748
nl:ποιες πολιτείες έχουν ποτάμια που ονομάζονται colorado
mrl:answer(state(loc_1(river(riverid('colorado')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' colorado ' })

id:749
nl:ποιες πολιτείες έχουν ποτάμια να τις διασχίζουν
mrl:answer(state(traverse_1(river(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( all ) })

id:750
nl:ποιες πολιτείες έχουν κωμοπόλεις που ονομάζονται springfield
mrl:answer(state(loc_1(city(cityid('springfield', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' springfield ' })

id:751
nl:ποιων πολιτειών το ψηλότερο σημείο είναι ψηλότερο από αυτό του colorado
mrl:answer(state(high_point_2(higher_2(high_point_1(stateid('colorado'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ high_point_2 ( *n:Place ) })
*n:Place -> ({ higher_2 ( *n:Place ) })
*n:Place -> ({ high_point_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:752
nl:ποιες πολιτείες στις ηνωμένες πολιτείες έχουν πόλη springfield
mrl:answer(intersection(state(loc_2(countryid('usa'))), loc_1(city(cityid('springfield', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ intersection ( *n:State , *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' springfield ' })

id:753
nl:ποιες πολιτείες γειτονεύουν το maine
mrl:answer(state(next_to_2(stateid('maine'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' maine ' })

id:754
nl:ποιες πολιτείες περιβάλλουν το kentucky
mrl:answer(state(next_to_2(stateid('kentucky'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' kentucky ' })

id:755
nl:ποια πολιτεία του texas έχει το μεγαλύτερο πληθυσμό
mrl:answer(largest_one(population_1(city(loc_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:756
nl:ποια είναι η μεγαλύτερη πόλη
mrl:answer(largest(city(all)))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( all ) })

id:757
nl:που υπάρχουν βουνά
mrl:answer(loc_1(mountain(all)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ mountain ( all ) })

id:758
nl:που είναι το austin
mrl:answer(loc_1(cityid('austin', _)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' austin ' })

id:759
nl:πού είναι το baton rouge
mrl:answer(loc_1(cityid('baton rouge', _)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' baton rouge ' })

id:760
nl:που είναι το dallas
mrl:answer(loc_1(cityid('dallas', _)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' dallas ' })

id:761
nl:που το fort wayne
mrl:answer(loc_1(cityid('fort wayne', _)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' fort wayne ' })

id:762
nl:που είναι το houston
mrl:answer(loc_1(cityid('houston', _)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' houston ' })

id:763
nl:που είναι η indianapolis
mrl:answer(loc_1(cityid('indianapolis', _)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' indianapolis ' })

id:764
nl:που είναι η massachusetts
mrl:answer(loc_1(stateid('massachusetts')))
productions:
*n:Query -> ({ answer ( *n:Country ) })
*n:Country -> ({ loc_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' massachusetts ' })

id:765
nl:που είναι το mount whitney
mrl:answer(loc_1(placeid('mount whitney')))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ placeid ( *n:PlaceName ) })
*n:PlaceName -> ({ ' mount whitney ' })

id:766
nl:που βρίσκεται το όρος whitney
mrl:answer(loc_1(placeid('mount whitney')))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ placeid ( *n:PlaceName ) })
*n:PlaceName -> ({ ' mount whitney ' })

id:767
nl:που είναι το new hampshire
mrl:answer(loc_1(stateid('new hampshire')))
productions:
*n:Query -> ({ answer ( *n:Country ) })
*n:Country -> ({ loc_1 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new hampshire ' })

id:768
nl:που είναι η new orleans
mrl:answer(loc_1(cityid('new orleans', _)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' new orleans ' })

id:769
nl:που είναι το portland
mrl:answer(loc_1(cityid('portland', _)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' portland ' })

id:770
nl:που είναι το san diego
mrl:answer(loc_1(cityid('san diego', _)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' san diego ' })

id:771
nl:που είναι το san jose
mrl:answer(loc_1(cityid('san jose', _)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' san jose ' })

id:772
nl:που είναι η scotts valley
mrl:answer(loc_1(cityid('scotts valley', _)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' scotts valley ' })

id:773
nl:που είναι το springfield
mrl:answer(loc_1(cityid('springfield', _)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' springfield ' })

id:774
nl:που είναι ο chattahoochee ποταμός
mrl:answer(loc_1(river(riverid('chattahoochee'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' chattahoochee ' })

id:775
nl:που είναι το ψηλότερο βουνό στις ηνωμένες πολιτείες
mrl:answer(highest(mountain(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ mountain ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:776
nl:ποιο είναι το ψηλότερο σημείο στην hawaii
mrl:answer(highest(place(loc_2(stateid('hawaii')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' hawaii ' })

id:777
nl:που είναι το ψηλότερο σημείο στη montana
mrl:answer(highest(place(loc_2(stateid('montana')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' montana ' })

id:778
nl:που είναι το χαμηλότερο σημείο στο maryland
mrl:answer(lowest(place(loc_2(stateid('maryland')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' maryland ' })

id:779
nl:πού είναι το μικρότερο σημείο στις us
mrl:answer(lowest(place(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:780
nl:που είναι το χαμηλότερο σημείο στην iowa
mrl:answer(lowest(place(loc_2(stateid('iowa')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' iowa ' })

id:781
nl:που είναι η πολυπληθέστερη περιοχή του new mexico
mrl:answer(largest_one(population_1(city(loc_2(stateid('new mexico'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new mexico ' })

id:782
nl:ποια είναι η μικρότερη πόλη
mrl:answer(loc_1(smallest(city(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ smallest ( *n:City ) })
*n:City -> ({ city ( all ) })

id:783
nl:ποιες πρωτεύουσες είναι στις πολιτείες που συνορεύουν με το texas
mrl:answer(capital(loc_2(state(next_to_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:784
nl:ποιες πρωτεύουσες δεν είναι κύριες πόλεις
mrl:answer(exclude(capital(all), major(city(all))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ exclude ( *n:City , *n:City ) })
*n:City -> ({ capital ( all ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( all ) })

id:785
nl:ποια πόλη στην california έχει το μεγαλύτερο πληθυσμό
mrl:answer(largest_one(population_1(city(loc_2(stateid('california'))))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' california ' })

id:786
nl:ποια είναι η πυκνότητα της πολιτείας την οποία διασχίζει το μεγαλύτερο ποτάμι στις ηνωμένες πολιτείες
mrl:answer(density_1(state(traverse_1(longest(river(loc_2(countryid('usa'))))))))
productions:
*n:Query -> ({ answer ( *n:Num ) })
*n:Num -> ({ density_1 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:787
nl:ποια είναι η ψηλότερη κορυφή εκτός της alaska
mrl:answer(highest(exclude(mountain(all), loc_2(stateid('alaska')))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ exclude ( *n:Place , *n:Place ) })
*n:Place -> ({ mountain ( all ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:788
nl:ποια είναι το μακρύτερο ποτάμι στις ηπα
mrl:answer(longest(river(loc_2(countryid('usa')))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:789
nl:ποιο είναι το χαμηλότερο σημείο των πολιτειών τις οποίες διασχίζει ο mississippi
mrl:answer(lowest(place(loc_2(state(traverse_1(riverid('mississippi')))))))
productions:
*n:Query -> ({ answer ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:790
nl:ποιο είναι το κοντύτερο ποτάμι
mrl:answer(shortest(river(all)))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ shortest ( *n:River ) })
*n:River -> ({ river ( all ) })

id:791
nl:ποια είναι η μικρότερη πολιτεία
mrl:answer(smallest(state(all)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:792
nl:ποια από τις πολιτείες που συνορεύουν με την pennsylvania έχει το μεγαλύτερο πληθυσμό
mrl:answer(largest_one(population_1(state(next_to_2(stateid('pennsylvania'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' pennsylvania ' })

id:793
nl:ποιο ποτάμι περνάει από τις περισσότερες πολιτείες
mrl:answer(most(river(traverse_2(state(all)))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ most ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:794
nl:ποιο ποτάμι διατρέχει τις περισσότερες πολιτείες
mrl:answer(most(river(traverse_2(state(all)))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ most ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:795
nl:ποιο ποτάμι διασχίζει τις περισσότερες πολιτείες
mrl:answer(most(river(traverse_2(state(all)))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ most ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:796
nl:ποιο ποτάμι διασχίζει τις περισσότερες πολιτείες
mrl:answer(most(river(traverse_2(state(all)))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ most ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:797
nl:πόσα ποτάμια υπάρχουν στην alaska
mrl:answer(river(loc_2(stateid('alaska'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:798
nl:ποια ποτάμια δεν διασχίζουν το texas
mrl:answer(exclude(river(all), traverse_2(stateid('texas'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ exclude ( *n:River , *n:River ) })
*n:River -> ({ river ( all ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:799
nl:ποια ποτάμια δε διασχίζουν τις usa
mrl:answer(exclude(river(all), traverse_2(countryid('usa'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ exclude ( *n:River , *n:River ) })
*n:River -> ({ river ( all ) })
*n:River -> ({ traverse_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:800
nl:ποια ποτάμια διασχίζουν την alaska
mrl:answer(river(traverse_2(stateid('alaska'))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:801
nl:ποια ποτάμια διασχίζουν πολιτείες που συνορεύουν με το new mexico
mrl:answer(river(traverse_2(state(next_to_2(stateid('new mexico'))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new mexico ' })

id:802
nl:ποια ποτάμια διασχίζουν την πολιτεία που συνορεύει με την πολιτεία με την πρωτεύουσα austin
mrl:answer(river(traverse_2(state(next_to_2(state(loc_1(capital(cityid('austin', _)))))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ capital ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' austin ' })

id:803
nl:ποια ποτάμια διασχίζουν πολιτείες με τις λιγότερες πόλεις
mrl:answer(river(traverse_2(fewest(state(loc_1(city(all)))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ fewest ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( all ) })

id:804
nl:ποια ποτάμια διατρέχουν την πολιτεία με τη μεγαλύτερη πόλη στις us
mrl:answer(river(traverse_2(state(loc_1(largest(city(loc_2(countryid('usa')))))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:805
nl:ποια ποτάμια διασχίζουν την πολιτεία με το χαμηλότερο υψόμετρο στις ηπα
mrl:answer(river(traverse_2(state(loc_1(lowest(place(loc_2(countryid('usa')))))))))
productions:
*n:Query -> ({ answer ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ traverse_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:806
nl:ποια πολιτεία συνορεύει με το kentucky
mrl:answer(state(next_to_2(stateid('kentucky'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' kentucky ' })

id:807
nl:ποια πολιτεία συνορεύει με τη florida
mrl:answer(state(next_to_2(stateid('florida'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' florida ' })

id:808
nl:ποια πολιτεία συνορεύει με τη hawaii
mrl:answer(state(next_to_2(stateid('hawaii'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' hawaii ' })

id:809
nl:ποιες πολιτείες συνορεύουν με τις περισσότερες πολιτείες
mrl:answer(most(state(next_to_2(state(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:810
nl:ποια πολιτεία συνορεύει με τις περισσότερες πολιτείες
mrl:answer(most(state(next_to_2(state(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:811
nl:ποια πρωτεύουσα πολιτείας έχει το μικρότερο πληθυσμό
mrl:answer(smallest_one(population_1(capital(all))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ smallest_one ( population_1 ( *n:City ) ) })
*n:City -> ({ capital ( all ) })

id:812
nl:ποια πολιτεία περιέχει τα περισσότερα ποτάμια
mrl:answer(most(state(loc_1(river(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ river ( all ) })

id:813
nl:ποια πολιτεία έχει τον μεγαλύτερο πληθυσμό
mrl:answer(largest_one(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:814
nl:ποια πολιτεία έχει τη μεγαλύτερη πυκνότητα
mrl:answer(largest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:815
nl:ποια πολιτεία έχει το μεγαλύτερο πληθυσμό
mrl:answer(largest_one(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:816
nl:ποια πολιτεία έχει το μεγαλύτερο υψόμετρο
mrl:answer(state(loc_1(highest(place(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:817
nl:ποια πολιτεία έχει την ψηλότερη κορυφή στη χώρα
mrl:answer(state(loc_1(highest(place(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:818
nl:ποια πολιτεία έχει το ψηλότερο σημείο
mrl:answer(state(loc_1(highest(place(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:819
nl:ποια πολιτεία έχει τη ψηλότερη πυκνότητα πληθυσμού
mrl:answer(largest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:820
nl:ποια πολιτεία έχει τη μεγαλύτερη πόλη
mrl:answer(state(loc_1(largest(city(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( all ) })

id:821
nl:ποια πολιτεία έχει την μεγαλύτερη πυκνότητα
mrl:answer(largest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:822
nl:ποια πολιτεία έχει τη μικρότερη πυκνότητα πληθυσμού
mrl:answer(smallest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:823
nl:ποια πολιτεία έχει το μακρύτερο ποτάμι
mrl:answer(state(loc_1(longest(river(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( all ) })

id:824
nl:ποια πολιτεία έχει το χαμηλότερο υψόμετρο
mrl:answer(state(loc_1(lowest(place(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( all ) })

id:825
nl:ποια πολιτεία έχει το χαμηλότερο που συνορεύει με το idaho
mrl:answer(state(loc_1(lowest(place(loc_2(next_to_2(stateid('idaho'))))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ lowest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' idaho ' })

id:826
nl:ποια πολιτεία έχει τη χαμηλότερη πυκνότητα πληθυσμού
mrl:answer(smallest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:827
nl:ποια πολιτεία έχει τις περισσότερες κύριες πόλεις
mrl:answer(most(state(loc_1(major(city(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( all ) })

id:828
nl:ποια πολιτεία έχει τα περισσότερα κύρια ποτάμια
mrl:answer(most(state(loc_1(major(river(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ major ( *n:River ) })
*n:River -> ({ river ( all ) })

id:829
nl:ποια πολιτεία έχει τα περισσότερα κύρια ποτάμια που τη διατρέχουν
mrl:answer(most(state(traverse_1(major(river(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ major ( *n:River ) })
*n:River -> ({ river ( all ) })

id:830
nl:ποια πολιτεία έχει τους περισσότερους ανθρώπους
mrl:answer(largest_one(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:831
nl:ποια πολιτεία έχει τον περισσότερο πληθυσμό
mrl:answer(largest_one(population_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ largest_one ( population_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:832
nl:ποια πολιτεία έχει τα περισσότερα ποτάμια
mrl:answer(most(state(loc_1(river(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ river ( all ) })

id:833
nl:ποια πολιτεία διασχίζουν τα περισσότερα ποτάμια
mrl:answer(most(state(traverse_1(river(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ most ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( all ) })

id:834
nl:ποια πολιτεία έχει τον red ποταμό
mrl:answer(state(loc_1(river(riverid('red')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' red ' })

id:835
nl:ποια πολιτεία έχει τη μικρότερη επιφάνεια που συνορεύει με το texas
mrl:answer(smallest_one(area_1(state(next_to_2(stateid('texas'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( area_1 ( *n:State ) ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:836
nl:ποια πολιτεία έχει το μικρότερο μέσο αστικό πληθυσμό
mrl:answer(smallest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:837
nl:ποια πολιτεία έχει τη μικρότερη πυκνότητα πληθυσμού
mrl:answer(smallest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:838
nl:ποια πολιτεία έχει την αραιότερη πυκνότητα πληθυσμού
mrl:answer(smallest_one(density_1(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest_one ( density_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:839
nl:σε ποια πολιτεία βρίσκεται το kalamazoo
mrl:answer(state(loc_1(cityid('kalamazoo', _))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' kalamazoo ' })

id:840
nl:σε ποια πολιτεία είναι το όρος mckinley
mrl:answer(state(loc_1(placeid('mount mckinley'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ placeid ( *n:PlaceName ) })
*n:PlaceName -> ({ ' mount mckinley ' })

id:841
nl:σε ποια πολιτεία βρίσκεται η πόλη denver
mrl:answer(state(loc_1(city(cityid('denver', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' denver ' })

id:842
nl:σε ποια πολιτεία είναι η μεγαλύτερη πόλη στη montana
mrl:answer(state(loc_1(largest(city(loc_2(stateid('montana')))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' montana ' })

id:843
nl:ποια πολιτεία είναι η μικρότερη
mrl:answer(smallest(state(all)))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ smallest ( *n:State ) })
*n:State -> ({ state ( all ) })

id:844
nl:ποιες πολιτείες γειτονεύουν με την alabama
mrl:answer(state(next_to_2(stateid('alabama'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alabama ' })

id:845
nl:ποιες πολιτείες συνορεύουν με την alabama
mrl:answer(state(next_to_2(stateid('alabama'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alabama ' })

id:846
nl:ποιες πολιτείες συνορεύουν με την alaska
mrl:answer(state(next_to_2(stateid('alaska'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' alaska ' })

id:847
nl:ποιες πολιτείες συνορεύουν με την arizona
mrl:answer(state(next_to_2(stateid('arizona'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' arizona ' })

id:848
nl:ποιες πολιτείες συνορεύουν με το colorado
mrl:answer(state(next_to_2(stateid('colorado'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:849
nl:ποιές πολιτείες συνορεύουν με τη hawaii
mrl:answer(state(next_to_2(stateid('hawaii'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' hawaii ' })

id:850
nl:ποιες πολιτείες συνορεύουν με το illinois
mrl:answer(state(next_to_2(stateid('illinois'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' illinois ' })

id:851
nl:ποιες πολιτείες συνορεύουν με την iowa
mrl:answer(state(next_to_2(stateid('iowa'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' iowa ' })

id:852
nl:ποιες πολιτείες συνορεύουν με το kentucky
mrl:answer(state(next_to_2(stateid('kentucky'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' kentucky ' })

id:853
nl:ποιες πολιτείες συνορεύουν το michigan
mrl:answer(state(next_to_2(stateid('michigan'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' michigan ' })

id:854
nl:ποιες πολιτείες συνορεύουν με τη new york
mrl:answer(state(next_to_2(stateid('new york'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' new york ' })

id:855
nl:ποιες πολιτείες δε συνορεύουν με καμία άλλη πολιτεία
mrl:answer(exclude(state(all), next_to_2(state(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ exclude ( *n:State , *n:State ) })
*n:State -> ({ state ( all ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:856
nl:ποιες πολιτείες συνορεύουν με τη νότια dakota
mrl:answer(state(next_to_2(stateid('south dakota'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' south dakota ' })

id:857
nl:ποιες πολιτείες συνορεύουν με πολιτείες τις οποίες διασχίζει ο mississippi
mrl:answer(state(next_to_2(state(traverse_1(riverid('mississippi'))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:858
nl:ποιες πολιτείες συνορεύουν με το texas
mrl:answer(state(next_to_2(stateid('texas'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:859
nl:ποιες πολιτείες συνορεύουν με το μακρύτερο ποτάμι στις usa
mrl:answer(state(next_to_2(longest(river(loc_2(countryid('usa')))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:860
nl:ποιες πολιτείες συνορεύουν με τον ποταμό missouri
mrl:answer(state(next_to_2(river(riverid('missouri')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' missouri ' })

id:861
nl:ποιες πολιτείες συνορεύουν με την πολιτεία με τη μικρότερη επιφάνεια
mrl:answer(state(next_to_2(smallest_one(area_1(state(all))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ smallest_one ( area_1 ( *n:State ) ) })
*n:State -> ({ state ( all ) })

id:862
nl:ποιας πολιτείας η πρωτεύουσα πόλη είναι η μεγαλύτερη
mrl:answer(state(loc_1(largest(city(capital_1(state(all)))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ largest ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ capital_1 ( *n:State ) })
*n:State -> ({ state ( all ) })

id:863
nl:ποιες πολιτείες διασχίζει ο colorado ποταμός
mrl:answer(state(traverse_1(river(riverid('colorado')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' colorado ' })

id:864
nl:ποιες πολιτείες δεν συνορεύουν με το texas
mrl:answer(exclude(state(all), next_to_2(stateid('texas'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ exclude ( *n:State , *n:State ) })
*n:State -> ({ state ( all ) })
*n:State -> ({ next_to_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:865
nl:ποιες πολιτείες διασχίζει ο ποταμός chattahoochee
mrl:answer(state(traverse_1(river(riverid('chattahoochee')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' chattahoochee ' })

id:866
nl:ποιες πολιτείες διασχίζει ο ποταμός colorado
mrl:answer(state(traverse_1(river(riverid('colorado')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' colorado ' })

id:867
nl:ποιες πολιτείες διασχίζει το μεγαλύτερο ποτάμι
mrl:answer(state(traverse_1(longest(river(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( all ) })

id:868
nl:ποιες πολιτείες διασχίζει το μεγαλύτερο ποτάμι
mrl:answer(state(traverse_1(longest(river(all)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( all ) })

id:869
nl:ποιες πολιτείες διασχίζει ο mississippi
mrl:answer(state(traverse_1(river(riverid('mississippi')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:870
nl:ποια πολιτεία διασχίζει ο mississippi
mrl:answer(state(traverse_1(riverid('mississippi'))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' mississippi ' })

id:871
nl:ποιες πολιτείες διασχίζει ο missouri ποταμός
mrl:answer(state(traverse_1(river(riverid('missouri')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' missouri ' })

id:872
nl:ποιες πολιτείες διασχίζει ο ποταμός missouri
mrl:answer(state(traverse_1(river(riverid('missouri')))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ riverid ( *n:RiverName ) })
*n:RiverName -> ({ ' missouri ' })

id:873
nl:ποιες πολιτείες έχουν μια κύρια πόλη με όνομα austin
mrl:answer(state(loc_1(major(city(cityid('austin', _))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ major ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' austin ' })

id:874
nl:ποιες πολιτείες έχουν ποτάμι
mrl:answer(state(loc_1(river(all))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:River ) })
*n:River -> ({ river ( all ) })

id:875
nl:ποιες πολιτείες έχουν πόλεις που ονομάζονται austin
mrl:answer(state(loc_1(city(cityid('austin', _)))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:City ) })
*n:City -> ({ city ( *n:City ) })
*n:City -> ({ cityid ( *n:CityName , _ ) })
*n:CityName -> ({ ' austin ' })

id:876
nl:ποιες πολιτείες έχουν σημεία ψηλότερα από το ψηλότερο σημείο στο colorado
mrl:answer(state(loc_1(place(higher_2(highest(place(loc_2(stateid('colorado')))))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ higher_2 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' colorado ' })

id:877
nl:ποιες πολιτείες έχουν σημεία ψηλότερα από το ψηλότερο σημείο στο texas
mrl:answer(state(loc_1(place(higher_2(highest(place(loc_2(stateid('texas')))))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ loc_1 ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ higher_2 ( *n:Place ) })
*n:Place -> ({ highest ( *n:Place ) })
*n:Place -> ({ place ( *n:Place ) })
*n:Place -> ({ loc_2 ( *n:State ) })
*n:State -> ({ stateid ( *n:StateName ) })
*n:StateName -> ({ ' texas ' })

id:878
nl:σε ποιες πολιτείες βρίσκεται το μακρύτερο ποτάμι στις ηνωμένες πολιτείες
mrl:answer(state(traverse_1(longest(river(loc_2(countryid('usa')))))))
productions:
*n:Query -> ({ answer ( *n:State ) })
*n:State -> ({ state ( *n:State ) })
*n:State -> ({ traverse_1 ( *n:River ) })
*n:River -> ({ longest ( *n:River ) })
*n:River -> ({ river ( *n:River ) })
*n:River -> ({ loc_2 ( *n:Country ) })
*n:Country -> ({ countryid ( *n:CountryName ) })
*n:CountryName -> ({ ' usa ' })

id:879
nl:ποια πόλη των us έχει τη μεγαλύτερη πυκνότητα πληθυσμού
mrl:answer(largest_one(density_1(city(all))))
productions:
*n:Query -> ({ answer ( *n:City ) })
*n:City -> ({ largest_one ( density_1 ( *n:City ) ) })
*n:City -> ({ city ( all ) })

